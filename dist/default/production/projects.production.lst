

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Aug 14 00:06:38 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16   000000                     
    17                           ; Generated 17/10/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4620 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000000                     
    52                           	psect	idataCOMRAM
    53   001038                     __pidataCOMRAM:
    54                           	callstack 0
    55                           
    56                           ;initializer for _port_registers
    57   001038  80                 	db	128
    58   001039  0F                 	db	15
    59   00103A  81                 	db	129
    60   00103B  0F                 	db	15
    61   00103C  82                 	db	130
    62   00103D  0F                 	db	15
    63   00103E  83                 	db	131
    64   00103F  0F                 	db	15
    65   001040  84                 	db	132
    66   001041  0F                 	db	15
    67                           
    68                           ;initializer for _lat_registers
    69   001042  89                 	db	137
    70   001043  0F                 	db	15
    71   001044  8A                 	db	138
    72   001045  0F                 	db	15
    73   001046  8B                 	db	139
    74   001047  0F                 	db	15
    75   001048  8C                 	db	140
    76   001049  0F                 	db	15
    77   00104A  8D                 	db	141
    78   00104B  0F                 	db	15
    79                           
    80                           ;initializer for _tris_registers
    81   00104C  92                 	db	146
    82   00104D  0F                 	db	15
    83   00104E  93                 	db	147
    84   00104F  0F                 	db	15
    85   001050  94                 	db	148
    86   001051  0F                 	db	15
    87   001052  95                 	db	149
    88   001053  0F                 	db	15
    89   001054  96                 	db	150
    90   001055  0F                 	db	15
    91                           
    92                           ;initializer for _dc_motor_1
    93   001056  02                 	db	2
    94   001057  12                 	db	18
    95   000000                     _PORTE	set	3972
    96   000000                     _PORTD	set	3971
    97   000000                     _PORTC	set	3970
    98   000000                     _PORTB	set	3969
    99   000000                     _PORTA	set	3968
   100   000000                     _LATA	set	3977
   101   000000                     _TRISA	set	3986
   102   000000                     _TRISE	set	3990
   103   000000                     _TRISD	set	3989
   104   000000                     _TRISC	set	3988
   105   000000                     _TRISB	set	3987
   106   000000                     _LATE	set	3981
   107   000000                     _LATD	set	3980
   108   000000                     _LATC	set	3979
   109   000000                     _LATB	set	3978
   110                           
   111                           ; #config settings
   112                           
   113                           	psect	cinit
   114   001002                     __pcinit:
   115                           	callstack 0
   116   001002                     start_initialization:
   117                           	callstack 0
   118   001002                     __initialization:
   119                           	callstack 0
   120                           
   121                           ; Initialize objects allocated to COMRAM (32 bytes)
   122                           ; load TBLPTR registers with __pidataCOMRAM
   123   001002  0E38               	movlw	low __pidataCOMRAM
   124   001004  6EF6               	movwf	tblptrl,c
   125   001006  0E10               	movlw	high __pidataCOMRAM
   126   001008  6EF7               	movwf	tblptrh,c
   127   00100A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   128   00100C  6EF8               	movwf	tblptru,c
   129   00100E  EE00  F001         	lfsr	0,__pdataCOMRAM
   130   001012  EE10 F020          	lfsr	1,32
   131   001016                     copy_data0:
   132   001016  0009               	tblrd		*+
   133   001018  CFF5 FFEE          	movff	tablat,postinc0
   134   00101C  50E5               	movf	postdec1,w,c
   135   00101E  50E1               	movf	fsr1l,w,c
   136   001020  E1FA               	bnz	copy_data0
   137                           
   138                           ; Clear objects allocated to COMRAM (10 bytes)
   139   001022  EE00  F021         	lfsr	0,__pbssCOMRAM
   140   001026  0E0A               	movlw	10
   141   001028                     clear_0:
   142   001028  6AEE               	clrf	postinc0,c
   143   00102A  06E8               	decf	wreg,f,c
   144   00102C  E1FD               	bnz	clear_0
   145   00102E                     end_of_initialization:
   146                           	callstack 0
   147   00102E                     __end_of__initialization:
   148                           	callstack 0
   149   00102E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   150   001030  6EF8               	movwf	tblptru,c
   151   001032  0100               	movlb	0
   152   001034  EF2C  F008         	goto	_main	;jump to C main() function
   153                           
   154                           	psect	bssCOMRAM
   155   000021                     __pbssCOMRAM:
   156                           	callstack 0
   157   000021                     dc_motor_initialize@F2574:
   158                           	callstack 0
   159   000021                     	ds	1
   160   000022                     dc_motor_initialize@F2572:
   161                           	callstack 0
   162   000022                     	ds	1
   163   000023                     _ret:
   164                           	callstack 0
   165   000023                     	ds	1
   166   000024                     relay_turn_off@F2577:
   167                           	callstack 0
   168   000024                     	ds	1
   169   000025                     relay_turn_on@F2572:
   170                           	callstack 0
   171   000025                     	ds	1
   172   000026                     relay_initialize@F2567:
   173                           	callstack 0
   174   000026                     	ds	1
   175   000027                     led_turn_toggle@F2588:
   176                           	callstack 0
   177   000027                     	ds	1
   178   000028                     led_turn_off@F2583:
   179                           	callstack 0
   180   000028                     	ds	1
   181   000029                     led_turn_on@F2578:
   182                           	callstack 0
   183   000029                     	ds	1
   184   00002A                     led_initialize@F2573:
   185                           	callstack 0
   186   00002A                     	ds	1
   187                           
   188                           	psect	dataCOMRAM
   189   000001                     __pdataCOMRAM:
   190                           	callstack 0
   191   000001                     _port_registers:
   192                           	callstack 0
   193   000001                     	ds	10
   194   00000B                     _lat_registers:
   195                           	callstack 0
   196   00000B                     	ds	10
   197   000015                     _tris_registers:
   198                           	callstack 0
   199   000015                     	ds	10
   200   00001F                     _dc_motor_1:
   201                           	callstack 0
   202   00001F                     	ds	2
   203                           
   204                           	psect	cstackCOMRAM
   205   000000                     __pcstackCOMRAM:
   206                           	callstack 0
   207   000000                     
   208                           ; 2 bytes @ 0x0
   209 ;;
   210 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   211 ;;
   212 ;; *************** function _main *****************
   213 ;; Defined at:
   214 ;;		line 22 in file "application.c"
   215 ;; Parameters:    Size  Location     Type
   216 ;;		None
   217 ;; Auto vars:     Size  Location     Type
   218 ;;		None
   219 ;; Return value:  Size  Location     Type
   220 ;;                  2  210[None  ] int 
   221 ;; Registers used:
   222 ;;		cstack
   223 ;; Tracked objects:
   224 ;;		On entry : 0/0
   225 ;;		On exit  : 0/0
   226 ;;		Unchanged: 0/0
   227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   232 ;;Total ram usage:        0 bytes
   233 ;; Hardware stack levels required when called: 1
   234 ;; This function calls:
   235 ;;		_Application
   236 ;; This function is called by:
   237 ;;		Startup code after reset
   238 ;; This function uses a non-reentrant model
   239 ;;
   240                           
   241                           	psect	text0
   242   001058                     __ptext0:
   243                           	callstack 0
   244   001058                     _main:
   245                           	callstack 30
   246   001058                     
   247                           ;application.c: 23:     Application ();
   248   001058  EC32  F008         	call	_Application	;wreg free
   249   00105C                     l211:
   250   00105C  EF2E  F008         	goto	l211
   251   001060  EF00  F000         	goto	start
   252   001064                     __end_of_main:
   253                           	callstack 0
   254                           
   255 ;; *************** function _Application *****************
   256 ;; Defined at:
   257 ;;		line 36 in file "application.c"
   258 ;; Parameters:    Size  Location     Type
   259 ;;		None
   260 ;; Auto vars:     Size  Location     Type
   261 ;;		None
   262 ;; Return value:  Size  Location     Type
   263 ;;                  1    wreg      void 
   264 ;; Registers used:
   265 ;;		None
   266 ;; Tracked objects:
   267 ;;		On entry : 0/0
   268 ;;		On exit  : 0/0
   269 ;;		Unchanged: 0/0
   270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   275 ;;Total ram usage:        0 bytes
   276 ;; Hardware stack levels used: 1
   277 ;; This function calls:
   278 ;;		Nothing
   279 ;; This function is called by:
   280 ;;		_main
   281 ;; This function uses a non-reentrant model
   282 ;;
   283                           
   284                           	psect	text1
   285   001064                     __ptext1:
   286                           	callstack 0
   287   001064                     _Application:
   288                           	callstack 30
   289   001064  0012               	return		;funcret
   290   001066                     __end_of_Application:
   291                           	callstack 0
   292                           
   293                           	psect	smallconst
   294   001000                     __psmallconst:
   295                           	callstack 0
   296   001000  00                 	db	0
   297   001001  00                 	db	0	; dummy byte at the end
   298   000000                     
   299                           	psect	rparam
   300   000000                     
   301                           	psect	config
   302                           
   303                           ; Padding undefined space
   304   300000                     	org	3145728
   305   300000  FF                 	db	255
   306                           
   307                           ;Config register CONFIG1H @ 0x300001
   308                           ;	Oscillator Selection bits
   309                           ;	OSC = HS, HS oscillator
   310                           ;	Fail-Safe Clock Monitor Enable bit
   311                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   312                           ;	Internal/External Oscillator Switchover bit
   313                           ;	IESO = OFF, Oscillator Switchover mode disabled
   314   300001                     	org	3145729
   315   300001  02                 	db	2
   316                           
   317                           ;Config register CONFIG2L @ 0x300002
   318                           ;	Power-up Timer Enable bit
   319                           ;	PWRT = OFF, PWRT disabled
   320                           ;	Brown-out Reset Enable bits
   321                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
   322                           ;	Brown Out Reset Voltage bits
   323                           ;	BORV = 1, 
   324   300002                     	org	3145730
   325   300002  09                 	db	9
   326                           
   327                           ;Config register CONFIG2H @ 0x300003
   328                           ;	Watchdog Timer Enable bit
   329                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   330                           ;	Watchdog Timer Postscale Select bits
   331                           ;	WDTPS = 32768, 1:32768
   332   300003                     	org	3145731
   333   300003  1E                 	db	30
   334                           
   335                           ; Padding undefined space
   336   300004                     	org	3145732
   337   300004  FF                 	db	255
   338                           
   339                           ;Config register CONFIG3H @ 0x300005
   340                           ;	CCP2 MUX bit
   341                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   342                           ;	PORTB A/D Enable bit
   343                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   344                           ;	Low-Power Timer1 Oscillator Enable bit
   345                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   346                           ;	MCLR Pin Enable bit
   347                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   348   300005                     	org	3145733
   349   300005  81                 	db	129
   350                           
   351                           ;Config register CONFIG4L @ 0x300006
   352                           ;	Stack Full/Underflow Reset Enable bit
   353                           ;	STVREN = ON, Stack full/underflow will cause Reset
   354                           ;	Single-Supply ICSP Enable bit
   355                           ;	LVP = OFF, Single-Supply ICSP disabled
   356                           ;	Extended Instruction Set Enable bit
   357                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   358                           ;	Background Debugger Enable bit
   359                           ;	DEBUG = 0x1, unprogrammed default
   360   300006                     	org	3145734
   361   300006  81                 	db	129
   362                           
   363                           ; Padding undefined space
   364   300007                     	org	3145735
   365   300007  FF                 	db	255
   366                           
   367                           ;Config register CONFIG5L @ 0x300008
   368                           ;	Code Protection bit
   369                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   370                           ;	Code Protection bit
   371                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   372                           ;	Code Protection bit
   373                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   374                           ;	Code Protection bit
   375                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   376   300008                     	org	3145736
   377   300008  0F                 	db	15
   378                           
   379                           ;Config register CONFIG5H @ 0x300009
   380                           ;	Boot Block Code Protection bit
   381                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   382                           ;	Data EEPROM Code Protection bit
   383                           ;	CPD = OFF, Data EEPROM not code-protected
   384   300009                     	org	3145737
   385   300009  C0                 	db	192
   386                           
   387                           ;Config register CONFIG6L @ 0x30000A
   388                           ;	Write Protection bit
   389                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   390                           ;	Write Protection bit
   391                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   392                           ;	Write Protection bit
   393                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   394                           ;	Write Protection bit
   395                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
   396   30000A                     	org	3145738
   397   30000A  0F                 	db	15
   398                           
   399                           ;Config register CONFIG6H @ 0x30000B
   400                           ;	Configuration Register Write Protection bit
   401                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   402                           ;	Boot Block Write Protection bit
   403                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   404                           ;	Data EEPROM Write Protection bit
   405                           ;	WRTD = OFF, Data EEPROM not write-protected
   406   30000B                     	org	3145739
   407   30000B  E0                 	db	224
   408                           
   409                           ;Config register CONFIG7L @ 0x30000C
   410                           ;	Table Read Protection bit
   411                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
   412                           ;	Table Read Protection bit
   413                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   414                           ;	Table Read Protection bit
   415                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   416                           ;	Table Read Protection bit
   417                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   418   30000C                     	org	3145740
   419   30000C  0F                 	db	15
   420                           
   421                           ;Config register CONFIG7H @ 0x30000D
   422                           ;	Boot Block Table Read Protection bit
   423                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   424   30000D                     	org	3145741
   425   30000D  40                 	db	64
   426                           tosu	equ	0xFFF
   427                           tosh	equ	0xFFE
   428                           tosl	equ	0xFFD
   429                           stkptr	equ	0xFFC
   430                           pclatu	equ	0xFFB
   431                           pclath	equ	0xFFA
   432                           pcl	equ	0xFF9
   433                           tblptru	equ	0xFF8
   434                           tblptrh	equ	0xFF7
   435                           tblptrl	equ	0xFF6
   436                           tablat	equ	0xFF5
   437                           prodh	equ	0xFF4
   438                           prodl	equ	0xFF3
   439                           indf0	equ	0xFEF
   440                           postinc0	equ	0xFEE
   441                           postdec0	equ	0xFED
   442                           preinc0	equ	0xFEC
   443                           plusw0	equ	0xFEB
   444                           fsr0h	equ	0xFEA
   445                           fsr0l	equ	0xFE9
   446                           wreg	equ	0xFE8
   447                           indf1	equ	0xFE7
   448                           postinc1	equ	0xFE6
   449                           postdec1	equ	0xFE5
   450                           preinc1	equ	0xFE4
   451                           plusw1	equ	0xFE3
   452                           fsr1h	equ	0xFE2
   453                           fsr1l	equ	0xFE1
   454                           bsr	equ	0xFE0
   455                           indf2	equ	0xFDF
   456                           postinc2	equ	0xFDE
   457                           postdec2	equ	0xFDD
   458                           preinc2	equ	0xFDC
   459                           plusw2	equ	0xFDB
   460                           fsr2h	equ	0xFDA
   461                           fsr2l	equ	0xFD9
   462                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      0      42
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _Application
 ---------------------------------------------------------------------------------
 (1) _Application                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Application

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      0      2A       1       33.1%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2A      39        0.0%
DATA                 0      0      2A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Aug 14 00:06:38 2024

                     l211 105C                       l212 105C                       l217 1064  
                     _ret 0023       led_initialize@F2573 002A                       wreg 0FE8  
   relay_initialize@F2567 0026                      l1207 1058                      _LATA 0F89  
                    _LATB 0F8A                      _LATC 0F8B                      _LATD 0F8C  
                    _LATE 0F8D                      _main 1058                      fsr1l 0FE1  
                    start 0000       __end_of_Application 1066              ___param_bank 0000  
                   ?_main 0000       relay_turn_off@F2577 0024                     _PORTA 0F80  
                   _PORTB 0F81                     _PORTC 0F82                     _PORTD 0F83  
                   _PORTE 0F84                     _TRISA 0F92                     _TRISB 0F93  
                   _TRISC 0F94                     _TRISD 0F95                     _TRISE 0F96  
                   tablat 0FF5           __initialization 1002              __end_of_main 1064  
           _lat_registers 000B                    ??_main 0000             __activetblptr 0002  
        led_turn_on@F2578 0029               _Application 1064                    clear_0 1028  
                  isa$std 0001              __pdataCOMRAM 0001              __mediumconst 0000  
                  tblptrh 0FF7                    tblptrl 0FF6                    tblptru 0FF8  
              __accesstop 0080   __end_of__initialization 102E             ___rparam_used 0001  
          __pcstackCOMRAM 0000  dc_motor_initialize@F2572 0022  dc_motor_initialize@F2574 0021  
              _dc_motor_1 001F         led_turn_off@F2583 0028      led_turn_toggle@F2588 0027  
          _tris_registers 0015                   __Hparam 0000                   __Lparam 0000  
            __psmallconst 1000                   __pcinit 1002                   __ramtop 1000  
                 __ptext0 1058                   __ptext1 1064      end_of_initialization 102E  
            ?_Application 0000             __Lmediumconst 0000                   postdec1 0FE5  
                 postinc0 0FEE        relay_turn_on@F2572 0025             __pidataCOMRAM 1038  
     start_initialization 1002               __pbssCOMRAM 0021               __smallconst 1000  
               copy_data0 1016                  __Hrparam 0000                  __Lrparam 0000  
                isa$xinst 0000            _port_registers 0001             ??_Application 0000  
