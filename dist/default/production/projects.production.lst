

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Aug 23 15:05:44 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    45   000000                     
    46                           ; Generated 17/10/2023 GMT
    47                           ; 
    48                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F4620 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80   000000                     
    81                           	psect	idataCOMRAM
    82   001DC2                     __pidataCOMRAM:
    83                           	callstack 0
    84                           
    85                           ;initializer for _port_registers
    86   001DC2  80                 	db	128
    87   001DC3  0F                 	db	15
    88   001DC4  81                 	db	129
    89   001DC5  0F                 	db	15
    90   001DC6  82                 	db	130
    91   001DC7  0F                 	db	15
    92   001DC8  83                 	db	131
    93   001DC9  0F                 	db	15
    94   001DCA  84                 	db	132
    95   001DCB  0F                 	db	15
    96                           
    97                           ;initializer for _lat_registers
    98   001DCC  89                 	db	137
    99   001DCD  0F                 	db	15
   100   001DCE  8A                 	db	138
   101   001DCF  0F                 	db	15
   102   001DD0  8B                 	db	139
   103   001DD1  0F                 	db	15
   104   001DD2  8C                 	db	140
   105   001DD3  0F                 	db	15
   106   001DD4  8D                 	db	141
   107   001DD5  0F                 	db	15
   108                           
   109                           ;initializer for _tris_registers
   110   001DD6  92                 	db	146
   111   001DD7  0F                 	db	15
   112   001DD8  93                 	db	147
   113   001DD9  0F                 	db	15
   114   001DDA  94                 	db	148
   115   001DDB  0F                 	db	15
   116   001DDC  95                 	db	149
   117   001DDD  0F                 	db	15
   118   001DDE  96                 	db	150
   119   001DDF  0F                 	db	15
   120                           
   121                           ;initializer for _lcd_2
   122   001DE0  32                 	db	50
   123   001DE1  3A                 	db	58
   124   001DE2  03                 	db	3
   125   001DE3  0B                 	db	11
   126   001DE4  13                 	db	19
   127   001DE5  1B                 	db	27
   128   001DE6  23                 	db	35
   129   001DE7  2B                 	db	43
   130   001DE8  33                 	db	51
   131   001DE9  3B                 	db	59
   132                           
   133                           ;initializer for _lcd_1
   134   001DEA  02                 	db	2
   135   001DEB  0A                 	db	10
   136   001DEC  12                 	db	18
   137   001DED  1A                 	db	26
   138   001DEE  22                 	db	34
   139   001DEF  2A                 	db	42
   140                           
   141                           	psect	smallconst
   142   001000                     __psmallconst:
   143                           	callstack 0
   144   001000  00                 	db	0
   145   001001                     _btn_values:
   146                           	callstack 0
   147   001001  37                 	db	55
   148   001002  38                 	db	56
   149   001003  39                 	db	57
   150   001004  2F                 	db	47
   151   001005  34                 	db	52
   152   001006  35                 	db	53
   153   001007  36                 	db	54
   154   001008  37                 	db	55
   155   001009  31                 	db	49
   156   00100A  32                 	db	50
   157   00100B  33                 	db	51
   158   00100C  34                 	db	52
   159   00100D  23                 	db	35
   160   00100E  30                 	db	48
   161   00100F  3D                 	db	61
   162   001010  2B                 	db	43
   163   001011                     __end_of_btn_values:
   164                           	callstack 0
   165   001011                     STR_5:
   166   001011  44                 	db	68	;'D'
   167   001012  6F                 	db	111	;'o'
   168   001013  6E                 	db	110	;'n'
   169   001014  65                 	db	101	;'e'
   170   001015  20                 	db	32
   171   001016  73                 	db	115	;'s'
   172   001017  75                 	db	117	;'u'
   173   001018  63                 	db	99	;'c'
   174   001019  63                 	db	99	;'c'
   175   00101A  65                 	db	101	;'e'
   176   00101B  73                 	db	115	;'s'
   177   00101C  73                 	db	115	;'s'
   178   00101D  66                 	db	102	;'f'
   179   00101E  75                 	db	117	;'u'
   180   00101F  6C                 	db	108	;'l'
   181   001020  00                 	db	0
   182   001021                     STR_4:
   183   001021  6C                 	db	108	;'l'
   184   001022  6F                 	db	111	;'o'
   185   001023  61                 	db	97	;'a'
   186   001024  64                 	db	100	;'d'
   187   001025  69                 	db	105	;'i'
   188   001026  6E                 	db	110	;'n'
   189   001027  67                 	db	103	;'g'
   190   001028  20                 	db	32
   191   001029  20                 	db	32
   192   00102A  20                 	db	32
   193   00102B  25                 	db	37
   194   00102C  00                 	db	0
   195   00102D                     STR_1:
   196   00102D  25                 	db	37
   197   00102E  69                 	db	105	;'i'
   198   00102F  00                 	db	0
   199   001030  00                 	db	0	; dummy byte at the end
   200   000000                     
   201                           	psect	nvCOMRAM
   202   000075                     __pnvCOMRAM:
   203                           	callstack 0
   204   000075                     _ret:
   205                           	callstack 0
   206   000075                     	ds	1
   207   000000                     _PORTE	set	3972
   208   000000                     _PORTD	set	3971
   209   000000                     _PORTC	set	3970
   210   000000                     _PORTB	set	3969
   211   000000                     _PORTA	set	3968
   212   000000                     _LATA	set	3977
   213   000000                     _TRISA	set	3986
   214   000000                     _TRISE	set	3990
   215   000000                     _TRISD	set	3989
   216   000000                     _TRISC	set	3988
   217   000000                     _TRISB	set	3987
   218   000000                     _LATE	set	3981
   219   000000                     _LATD	set	3980
   220   000000                     _LATC	set	3979
   221   000000                     _LATB	set	3978
   222                           
   223                           ; #config settings
   224                           
   225                           	psect	cinit
   226   001C78                     __pcinit:
   227                           	callstack 0
   228   001C78                     start_initialization:
   229                           	callstack 0
   230   001C78                     __initialization:
   231                           	callstack 0
   232                           
   233                           ; Initialize objects allocated to COMRAM (46 bytes)
   234                           ; load TBLPTR registers with __pidataCOMRAM
   235   001C78  0EC2               	movlw	low __pidataCOMRAM
   236   001C7A  6EF6               	movwf	tblptrl,c
   237   001C7C  0E1D               	movlw	high __pidataCOMRAM
   238   001C7E  6EF7               	movwf	tblptrh,c
   239   001C80  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   240   001C82  6EF8               	movwf	tblptru,c
   241   001C84  EE00  F001         	lfsr	0,__pdataCOMRAM
   242   001C88  EE10 F02E          	lfsr	1,46
   243   001C8C                     copy_data0:
   244   001C8C  0009               	tblrd		*+
   245   001C8E  CFF5 FFEE          	movff	tablat,postinc0
   246   001C92  50E5               	movf	postdec1,w,c
   247   001C94  50E1               	movf	fsr1l,w,c
   248   001C96  E1FA               	bnz	copy_data0
   249                           
   250                           ; Clear objects allocated to BANK0 (32 bytes)
   251   001C98  EE00  F080         	lfsr	0,__pbssBANK0
   252   001C9C  0E20               	movlw	32
   253   001C9E                     clear_0:
   254   001C9E  6AEE               	clrf	postinc0,c
   255   001CA0  06E8               	decf	wreg,f,c
   256   001CA2  E1FD               	bnz	clear_0
   257                           
   258                           ; Clear objects allocated to COMRAM (24 bytes)
   259   001CA4  EE00  F05D         	lfsr	0,__pbssCOMRAM
   260   001CA8  0E18               	movlw	24
   261   001CAA                     clear_1:
   262   001CAA  6AEE               	clrf	postinc0,c
   263   001CAC  06E8               	decf	wreg,f,c
   264   001CAE  E1FD               	bnz	clear_1
   265   001CB0                     end_of_initialization:
   266                           	callstack 0
   267   001CB0                     __end_of__initialization:
   268                           	callstack 0
   269   001CB0  0100               	movlb	0
   270   001CB2  EF53  F00C         	goto	_main	;jump to C main() function
   271                           
   272                           	psect	bssCOMRAM
   273   00005D                     __pbssCOMRAM:
   274                           	callstack 0
   275   00005D                     _funcs:
   276                           	callstack 0
   277   00005D                     	ds	6
   278   000063                     _width:
   279                           	callstack 0
   280   000063                     	ds	2
   281   000065                     _prec:
   282                           	callstack 0
   283   000065                     	ds	2
   284   000067                     _flags:
   285                           	callstack 0
   286   000067                     	ds	1
   287   000068                     _count:
   288                           	callstack 0
   289   000068                     	ds	1
   290   000069                     _lcd_counter:
   291                           	callstack 0
   292   000069                     	ds	1
   293   00006A                     relay_turn_off@F3065:
   294                           	callstack 0
   295   00006A                     	ds	1
   296   00006B                     relay_turn_on@F3060:
   297                           	callstack 0
   298   00006B                     	ds	1
   299   00006C                     relay_initialize@F3055:
   300                           	callstack 0
   301   00006C                     	ds	1
   302   00006D                     led_turn_toggle@F3076:
   303                           	callstack 0
   304   00006D                     	ds	1
   305   00006E                     led_turn_off@F3071:
   306                           	callstack 0
   307   00006E                     	ds	1
   308   00006F                     led_turn_on@F3066:
   309                           	callstack 0
   310   00006F                     	ds	1
   311   000070                     led_initialize@F3061:
   312                           	callstack 0
   313   000070                     	ds	1
   314   000071                     _lcd_counter_txt:
   315                           	callstack 0
   316   000071                     	ds	4
   317                           
   318                           	psect	dataCOMRAM
   319   000001                     __pdataCOMRAM:
   320                           	callstack 0
   321   000001                     _port_registers:
   322                           	callstack 0
   323   000001                     	ds	10
   324   00000B                     _lat_registers:
   325                           	callstack 0
   326   00000B                     	ds	10
   327   000015                     _tris_registers:
   328                           	callstack 0
   329   000015                     	ds	10
   330   00001F                     _lcd_2:
   331                           	callstack 0
   332   00001F                     	ds	10
   333   000029                     _lcd_1:
   334                           	callstack 0
   335   000029                     	ds	6
   336                           
   337                           	psect	bssBANK0
   338   000080                     __pbssBANK0:
   339                           	callstack 0
   340   000080                     _dbuf:
   341                           	callstack 0
   342   000080                     	ds	32
   343                           
   344                           	psect	cstackCOMRAM
   345   00002F                     __pcstackCOMRAM:
   346                           	callstack 0
   347   00002F                     ?___awdiv:
   348                           	callstack 0
   349   00002F                     ?___awmod:
   350                           	callstack 0
   351   00002F                     gpio_pin_direction_intialize@_pin_config:
   352                           	callstack 0
   353   00002F                     gpio_pin_write_logic@_pin_config:
   354                           	callstack 0
   355   00002F                     memset@dest:
   356                           	callstack 0
   357   00002F                     ___awdiv@dividend:
   358                           	callstack 0
   359   00002F                     ___awmod@dividend:
   360                           	callstack 0
   361   00002F                     __Exit@ec:
   362                           	callstack 0
   363   00002F                     fputc@c:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0x0
   367   00002F                     	ds	1
   368   000030                     ??_gpio_pin_direction_intialize:
   369   000030                     gpio_pin_write_logic@logic:
   370                           	callstack 0
   371   000030                     memset@c:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0x1
   375   000030                     	ds	1
   376   000031                     ??_gpio_pin_write_logic:
   377   000031                     fputc@fp:
   378                           	callstack 0
   379   000031                     ___awdiv@divisor:
   380                           	callstack 0
   381   000031                     ___awmod@divisor:
   382                           	callstack 0
   383   000031                     exit@code:
   384                           	callstack 0
   385                           
   386                           ; 2 bytes @ 0x2
   387   000031                     	ds	1
   388   000032                     ??_fputc:
   389   000032                     memset@n:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0x3
   393   000032                     	ds	1
   394   000033                     ___awdiv@counter:
   395                           	callstack 0
   396   000033                     ___awmod@counter:
   397                           	callstack 0
   398                           
   399                           ; 1 bytes @ 0x4
   400   000033                     	ds	1
   401   000034                     ___awdiv@sign:
   402                           	callstack 0
   403   000034                     ___awmod@sign:
   404                           	callstack 0
   405   000034                     memset@p:
   406                           	callstack 0
   407                           
   408                           ; 1 bytes @ 0x5
   409   000034                     	ds	1
   410   000035                     ?_abs:
   411                           	callstack 0
   412   000035                     gpio_pin_direction_intialize@ret:
   413                           	callstack 0
   414   000035                     ___awdiv@quotient:
   415                           	callstack 0
   416   000035                     abs@a:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0x6
   420   000035                     	ds	1
   421   000036                     gpio_pin_write_logic@ret:
   422                           	callstack 0
   423                           
   424                           ; 1 bytes @ 0x7
   425   000036                     	ds	1
   426   000037                     ??_abs:
   427   000037                     lcd_send_4bits@lcd:
   428                           	callstack 0
   429   000037                     lcd_send_4bits_enable_signal@lcd:
   430                           	callstack 0
   431   000037                     lcd_send_8bits_enable_signal@lcd:
   432                           	callstack 0
   433   000037                     gpio_pin_intialize@_pin_config:
   434                           	callstack 0
   435                           
   436                           ; 1 bytes @ 0x8
   437   000037                     	ds	1
   438   000038                     ??_gpio_pin_intialize:
   439   000038                     lcd_8bit_send_command@lcd:
   440                           	callstack 0
   441   000038                     lcd_8bit_send_char_data@lcd:
   442                           	callstack 0
   443   000038                     lcd_send_4bits@_data_command:
   444                           	callstack 0
   445   000038                     lcd_send_4bits_enable_signal@ret:
   446                           	callstack 0
   447                           
   448                           ; 1 bytes @ 0x9
   449   000038                     	ds	1
   450   000039                     lcd_8bit_send_command@command:
   451                           	callstack 0
   452   000039                     lcd_8bit_send_char_data@data:
   453                           	callstack 0
   454   000039                     lcd_send_4bits@ret:
   455                           	callstack 0
   456   000039                     gpio_pin_intialize@ret:
   457                           	callstack 0
   458   000039                     vfpfcnvrt@fp:
   459                           	callstack 0
   460                           
   461                           ; 1 bytes @ 0xA
   462   000039                     	ds	1
   463   00003A                     ??_lcd_8bit_send_command:
   464   00003A                     ??_lcd_8bit_send_char_data:
   465   00003A                     lcd_4bit_send_command@lcd:
   466                           	callstack 0
   467   00003A                     vfpfcnvrt@fmt:
   468                           	callstack 0
   469                           
   470                           ; 1 bytes @ 0xB
   471   00003A                     	ds	1
   472   00003B                     lcd_4bit_send_command@command:
   473                           	callstack 0
   474   00003B                     vfpfcnvrt@ap:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0xC
   478   00003B                     	ds	1
   479   00003C                     ??_vfpfcnvrt:
   480   00003C                     lcd_4bit_send_command@ret:
   481                           	callstack 0
   482   00003C                     lcd_8bit_send_command@ret:
   483                           	callstack 0
   484   00003C                     lcd_8bit_send_char_data@ret:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0xD
   488   00003C                     	ds	1
   489   00003D                     lcd_4bit_initialize@lcd:
   490                           	callstack 0
   491   00003D                     lcd_8bit_send_command@l_pin_counter:
   492                           	callstack 0
   493   00003D                     lcd_8bit_send_char_data@l_pin_counter:
   494                           	callstack 0
   495   00003D                     vfpfcnvrt@done:
   496                           	callstack 0
   497                           
   498                           ; 1 bytes @ 0xE
   499   00003D                     	ds	1
   500   00003E                     ??_lcd_4bit_initialize:
   501   00003E                     lcd_8bit_initialize@lcd:
   502                           	callstack 0
   503   00003E                     lcd_8bit_set_cursor@lcd:
   504                           	callstack 0
   505   00003E                     vfpfcnvrt@cp:
   506                           	callstack 0
   507                           
   508                           ; 1 bytes @ 0xF
   509   00003E                     	ds	1
   510   00003F                     ??_lcd_8bit_initialize:
   511   00003F                     lcd_4bit_initialize@l_data_pin_counter:
   512                           	callstack 0
   513   00003F                     lcd_8bit_set_cursor@row:
   514                           	callstack 0
   515   00003F                     vfpfcnvrt@convarg:
   516                           	callstack 0
   517                           
   518                           ; 4 bytes @ 0x10
   519   00003F                     	ds	1
   520   000040                     lcd_4bit_initialize@ret:
   521                           	callstack 0
   522   000040                     lcd_8bit_initialize@l_data_pin_counter:
   523                           	callstack 0
   524   000040                     lcd_8bit_set_cursor@coulmn:
   525                           	callstack 0
   526                           
   527                           ; 1 bytes @ 0x11
   528   000040                     	ds	1
   529   000041                     lcd_8bit_initialize@ret:
   530                           	callstack 0
   531   000041                     lcd_8bit_set_cursor@ret:
   532                           	callstack 0
   533                           
   534                           ; 1 bytes @ 0x12
   535   000041                     	ds	1
   536   000042                     lcd_8bit_send_string_pos@lcd:
   537                           	callstack 0
   538                           
   539                           ; 1 bytes @ 0x13
   540   000042                     	ds	1
   541   000043                     lcd_8bit_send_string_pos@row:
   542                           	callstack 0
   543   000043                     vfpfcnvrt@c:
   544                           	callstack 0
   545                           
   546                           ; 1 bytes @ 0x14
   547   000043                     	ds	1
   548   000044                     ?_vfprintf:
   549                           	callstack 0
   550   000044                     lcd_8bit_send_string_pos@coulmn:
   551                           	callstack 0
   552   000044                     vfprintf@fp:
   553                           	callstack 0
   554                           
   555                           ; 1 bytes @ 0x15
   556   000044                     	ds	1
   557   000045                     vfprintf@fmt:
   558                           	callstack 0
   559   000045                     lcd_8bit_send_string_pos@str:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x16
   563   000045                     	ds	1
   564   000046                     vfprintf@ap:
   565                           	callstack 0
   566                           
   567                           ; 1 bytes @ 0x17
   568   000046                     	ds	1
   569   000047                     lcd_8bit_send_string_pos@ret:
   570                           	callstack 0
   571   000047                     vfprintf@cfmt:
   572                           	callstack 0
   573                           
   574                           ; 1 bytes @ 0x18
   575   000047                     	ds	1
   576   000048                     ?_sprintf:
   577                           	callstack 0
   578   000048                     sprintf@s:
   579                           	callstack 0
   580                           
   581                           ; 1 bytes @ 0x19
   582   000048                     	ds	1
   583   000049                     sprintf@fmt:
   584                           	callstack 0
   585                           
   586                           ; 1 bytes @ 0x1A
   587   000049                     	ds	3
   588   00004C                     sprintf@ap:
   589                           	callstack 0
   590                           
   591                           ; 1 bytes @ 0x1D
   592   00004C                     	ds	1
   593   00004D                     sprintf@f:
   594                           	callstack 0
   595                           
   596                           ; 12 bytes @ 0x1E
   597   00004D                     	ds	12
   598   000059                     convert_byte_to_string@str:
   599                           	callstack 0
   600                           
   601                           ; 1 bytes @ 0x2A
   602   000059                     	ds	1
   603   00005A                     convert_byte_to_string@value:
   604                           	callstack 0
   605                           
   606                           ; 1 bytes @ 0x2B
   607   00005A                     	ds	1
   608   00005B                     convert_byte_to_string@ret:
   609                           	callstack 0
   610                           
   611                           ; 1 bytes @ 0x2C
   612   00005B                     	ds	1
   613   00005C                     ??_main:
   614                           
   615                           ; 1 bytes @ 0x2D
   616   00005C                     	ds	1
   617                           
   618 ;;
   619 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   620 ;;
   621 ;; *************** function _main *****************
   622 ;; Defined at:
   623 ;;		line 19 in file "application.c"
   624 ;; Parameters:    Size  Location     Type
   625 ;;		None
   626 ;; Auto vars:     Size  Location     Type
   627 ;;		None
   628 ;; Return value:  Size  Location     Type
   629 ;;                  2  490[None  ] int 
   630 ;; Registers used:
   631 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   632 ;; Tracked objects:
   633 ;;		On entry : 0/0
   634 ;;		On exit  : 0/0
   635 ;;		Unchanged: 0/0
   636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   639 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   640 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   641 ;;Total ram usage:        1 bytes
   642 ;; Hardware stack levels required when called: 6
   643 ;; This function calls:
   644 ;;		_Application
   645 ;;		_convert_byte_to_string
   646 ;;		_exit
   647 ;;		_lcd_8bit_send_string_pos
   648 ;; This function is called by:
   649 ;;		Startup code after reset
   650 ;; This function uses a non-reentrant model
   651 ;;
   652                           
   653                           	psect	text0
   654   0018A6                     __ptext0:
   655                           	callstack 0
   656   0018A6                     _main:
   657                           	callstack 25
   658   0018A6                     
   659                           ;application.c: 20:     Application ();
   660   0018A6  EC1D  F00F         	call	_Application	;wreg free
   661   0018AA                     
   662                           ;application.c: 21:     ret = lcd_8bit_send_string_pos(&lcd_2, 2, 7, "loading   %");
   663   0018AA  0E1F               	movlw	low _lcd_2
   664   0018AC  6E42               	movwf	lcd_8bit_send_string_pos@lcd^0,c
   665   0018AE  0E02               	movlw	2
   666   0018B0  6E43               	movwf	lcd_8bit_send_string_pos@row^0,c
   667   0018B2  0E07               	movlw	7
   668   0018B4  6E44               	movwf	lcd_8bit_send_string_pos@coulmn^0,c
   669   0018B6  0E21               	movlw	low STR_4
   670   0018B8  6E45               	movwf	lcd_8bit_send_string_pos@str^0,c
   671   0018BA  5045               	movf	lcd_8bit_send_string_pos@str^0,w,c
   672   0018BC  A4D8               	btfss	status,2,c
   673   0018BE  0E10               	movlw	high __smallconst
   674   0018C0  6E46               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
   675   0018C2  ECFF  F00B         	call	_lcd_8bit_send_string_pos	;wreg free
   676   0018C6  6E75               	movwf	_ret^0,c
   677   0018C8                     l3250:
   678                           
   679                           ;application.c: 23:     {;application.c: 24:         ret = convert_byte_to_string(lcd_co
      +                          unter, lcd_counter_txt);
   680   0018C8  0E71               	movlw	low _lcd_counter_txt
   681   0018CA  6E59               	movwf	convert_byte_to_string@str^0,c
   682   0018CC  5069               	movf	_lcd_counter^0,w,c
   683   0018CE  ECF6  F00D         	call	_convert_byte_to_string
   684   0018D2  6E75               	movwf	_ret^0,c
   685   0018D4                     
   686                           ;application.c: 25:         ret = lcd_8bit_send_string_pos(&lcd_2, 2, 15, lcd_counter_tx
      +                          t);
   687   0018D4  0E1F               	movlw	low _lcd_2
   688   0018D6  6E42               	movwf	lcd_8bit_send_string_pos@lcd^0,c
   689   0018D8  0E02               	movlw	2
   690   0018DA  6E43               	movwf	lcd_8bit_send_string_pos@row^0,c
   691   0018DC  0E0F               	movlw	15
   692   0018DE  6E44               	movwf	lcd_8bit_send_string_pos@coulmn^0,c
   693   0018E0  0E71               	movlw	low _lcd_counter_txt
   694   0018E2  6E45               	movwf	lcd_8bit_send_string_pos@str^0,c
   695   0018E4  6A46               	clrf	(lcd_8bit_send_string_pos@str+1)^0,c
   696   0018E6  ECFF  F00B         	call	_lcd_8bit_send_string_pos	;wreg free
   697   0018EA  6E75               	movwf	_ret^0,c
   698   0018EC                     
   699                           ;application.c: 26:         _delay((unsigned long)((50)*(8000000UL/4000.0)));
   700   0018EC  0E82               	movlw	130
   701   0018EE  6E5C               	movwf	??_main^0,c
   702   0018F0  0EDE               	movlw	222
   703   0018F2                     u2487:
   704   0018F2  2EE8               	decfsz	wreg,f,c
   705   0018F4  D7FE               	bra	u2487
   706   0018F6  2E5C               	decfsz	??_main^0,f,c
   707   0018F8  D7FC               	bra	u2487
   708   0018FA                     
   709                           ;application.c: 27:         if (lcd_counter == 100)
   710   0018FA  0E64               	movlw	100
   711   0018FC  1869               	xorwf	_lcd_counter^0,w,c
   712   0018FE  A4D8               	btfss	status,2,c
   713   001900  EF84  F00C         	goto	u2471
   714   001904  EF86  F00C         	goto	u2470
   715   001908                     u2471:
   716   001908  EF9D  F00C         	goto	l3262
   717   00190C                     u2470:
   718   00190C                     
   719                           ;application.c: 28:         {;application.c: 29:             ret = lcd_8bit_send_string_
      +                          pos(&lcd_2, 2, 5, "Done successful");
   720   00190C  0E1F               	movlw	low _lcd_2
   721   00190E  6E42               	movwf	lcd_8bit_send_string_pos@lcd^0,c
   722   001910  0E02               	movlw	2
   723   001912  6E43               	movwf	lcd_8bit_send_string_pos@row^0,c
   724   001914  0E05               	movlw	5
   725   001916  6E44               	movwf	lcd_8bit_send_string_pos@coulmn^0,c
   726   001918  0E11               	movlw	low STR_5
   727   00191A  6E45               	movwf	lcd_8bit_send_string_pos@str^0,c
   728   00191C  5045               	movf	lcd_8bit_send_string_pos@str^0,w,c
   729   00191E  A4D8               	btfss	status,2,c
   730   001920  0E10               	movlw	high __smallconst
   731   001922  6E46               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
   732   001924  ECFF  F00B         	call	_lcd_8bit_send_string_pos	;wreg free
   733   001928  6E75               	movwf	_ret^0,c
   734   00192A                     
   735                           ;application.c: 30:             exit(1);
   736   00192A  0E00               	movlw	0
   737   00192C  6E32               	movwf	(exit@code+1)^0,c
   738   00192E  0E01               	movlw	1
   739   001930  6E31               	movwf	exit@code^0,c
   740   001932  EC11  F00F         	call	_exit	;wreg free
   741                           
   742                           ;application.c: 31:         }
   743   001936  EF64  F00C         	goto	l3250
   744   00193A                     l3262:
   745                           
   746                           ;application.c: 33:             lcd_counter++;
   747   00193A  2A69               	incf	_lcd_counter^0,f,c
   748   00193C  EF64  F00C         	goto	l3250
   749   001940  EF00  F000         	goto	start
   750   001944                     __end_of_main:
   751                           	callstack 0
   752                           
   753 ;; *************** function _lcd_8bit_send_string_pos *****************
   754 ;; Defined at:
   755 ;;		line 358 in file "ECU_Layer/chr_lcd/ecu_chr_lcd.c"
   756 ;; Parameters:    Size  Location     Type
   757 ;;  lcd             1   19[COMRAM] PTR const struct .
   758 ;;		 -> lcd_2(10), 
   759 ;;  row             1   20[COMRAM] unsigned char 
   760 ;;  coulmn          1   21[COMRAM] unsigned char 
   761 ;;  str             2   22[COMRAM] PTR unsigned char 
   762 ;;		 -> STR_5(16), lcd_counter_txt(4), STR_4(12), 
   763 ;; Auto vars:     Size  Location     Type
   764 ;;  ret             1   24[COMRAM] unsigned char 
   765 ;; Return value:  Size  Location     Type
   766 ;;                  1    wreg      unsigned char 
   767 ;; Registers used:
   768 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   769 ;; Tracked objects:
   770 ;;		On entry : 0/0
   771 ;;		On exit  : 0/0
   772 ;;		Unchanged: 0/0
   773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   774 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   775 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   777 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   778 ;;Total ram usage:        6 bytes
   779 ;; Hardware stack levels used: 1
   780 ;; Hardware stack levels required when called: 4
   781 ;; This function calls:
   782 ;;		_lcd_8bit_send_char_data
   783 ;;		_lcd_8bit_set_cursor
   784 ;; This function is called by:
   785 ;;		_main
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           	psect	text1
   790   0017FE                     __ptext1:
   791                           	callstack 0
   792   0017FE                     _lcd_8bit_send_string_pos:
   793                           	callstack 26
   794   0017FE                     
   795                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 361:     if (((void*)0) == lcd || ((void*)0) == str)
   796   0017FE  5042               	movf	lcd_8bit_send_string_pos@lcd^0,w,c
   797   001800  B4D8               	btfsc	status,2,c
   798   001802  EF05  F00C         	goto	u1961
   799   001806  EF07  F00C         	goto	u1960
   800   00180A                     u1961:
   801   00180A  EF10  F00C         	goto	l2826
   802   00180E                     u1960:
   803   00180E  5045               	movf	lcd_8bit_send_string_pos@str^0,w,c
   804   001810  1046               	iorwf	(lcd_8bit_send_string_pos@str+1)^0,w,c
   805   001812  A4D8               	btfss	status,2,c
   806   001814  EF0E  F00C         	goto	u1971
   807   001818  EF10  F00C         	goto	u1970
   808   00181C                     u1971:
   809   00181C  EF14  F00C         	goto	l2828
   810   001820                     u1970:
   811   001820                     l2826:
   812                           
   813                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 362:     {;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 363:      
      +                             ret = (Std_ReturnType)0x00;
   814   001820  0E00               	movlw	0
   815   001822  6E47               	movwf	lcd_8bit_send_string_pos@ret^0,c
   816                           
   817                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 364:     }
   818   001824  EF51  F00C         	goto	l2836
   819   001828                     l2828:
   820                           
   821                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 366:     {;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 367:      
      +                             ret = lcd_8bit_set_cursor(lcd, row, coulmn);
   822   001828  C042  F03E         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_set_cursor@lcd
   823   00182C  C043  F03F         	movff	lcd_8bit_send_string_pos@row,lcd_8bit_set_cursor@row
   824   001830  C044  F040         	movff	lcd_8bit_send_string_pos@coulmn,lcd_8bit_set_cursor@coulmn
   825   001834  ECA2  F00C         	call	_lcd_8bit_set_cursor	;wreg free
   826   001838  6E47               	movwf	lcd_8bit_send_string_pos@ret^0,c
   827                           
   828                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 368:         while (*str)
   829   00183A  EF38  F00C         	goto	l2834
   830   00183E                     l2830:
   831                           
   832                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 369:         {;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 370:  
      +                                     ret = lcd_8bit_send_char_data(lcd, *str++);
   833   00183E  C042  F038         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_send_char_data@lcd
   834   001842  C045  FFF6         	movff	lcd_8bit_send_string_pos@str,tblptrl
   835   001846  C046  FFF7         	movff	lcd_8bit_send_string_pos@str+1,tblptrh
   836   00184A  0E00               	movlw	low (__smallconst shr (0+16))
   837   00184C  6EF8               	movwf	tblptru,c
   838   00184E  0E0F               	movlw	(high __ramtop+-1)
   839   001850  64F7               	cpfsgt	tblptrh,c
   840   001852  D003               	bra	u1987
   841   001854  0008               	tblrd		*
   842   001856  50F5               	movf	tablat,w,c
   843   001858  D005               	bra	u1980
   844   00185A                     u1987:
   845   00185A  CFF6 FFE9          	movff	tblptrl,fsr0l
   846   00185E  CFF7 FFEA          	movff	tblptrh,fsr0h
   847   001862  50EF               	movf	indf0,w,c
   848   001864                     u1980:
   849   001864  6E39               	movwf	lcd_8bit_send_char_data@data^0,c
   850   001866  ECEC  F00C         	call	_lcd_8bit_send_char_data	;wreg free
   851   00186A  6E47               	movwf	lcd_8bit_send_string_pos@ret^0,c
   852   00186C  4A45               	infsnz	lcd_8bit_send_string_pos@str^0,f,c
   853   00186E  2A46               	incf	(lcd_8bit_send_string_pos@str+1)^0,f,c
   854   001870                     l2834:
   855                           
   856                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 368:         while (*str)
   857   001870  C045  FFF6         	movff	lcd_8bit_send_string_pos@str,tblptrl
   858   001874  C046  FFF7         	movff	lcd_8bit_send_string_pos@str+1,tblptrh
   859   001878  0E00               	movlw	low (__smallconst shr (0+16))
   860   00187A  6EF8               	movwf	tblptru,c
   861   00187C  0E0F               	movlw	(high __ramtop+-1)
   862   00187E  64F7               	cpfsgt	tblptrh,c
   863   001880  D003               	bra	u1997
   864   001882  0008               	tblrd		*
   865   001884  50F5               	movf	tablat,w,c
   866   001886  D005               	bra	u1990
   867   001888                     u1997:
   868   001888  CFF6 FFE9          	movff	tblptrl,fsr0l
   869   00188C  CFF7 FFEA          	movff	tblptrh,fsr0h
   870   001890  50EF               	movf	indf0,w,c
   871   001892                     u1990:
   872   001892  0900               	iorlw	0
   873   001894  A4D8               	btfss	status,2,c
   874   001896  EF4F  F00C         	goto	u2001
   875   00189A  EF51  F00C         	goto	u2000
   876   00189E                     u2001:
   877   00189E  EF1F  F00C         	goto	l2830
   878   0018A2                     u2000:
   879   0018A2                     l2836:
   880                           
   881                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 373:     return ret;
   882   0018A2  5047               	movf	lcd_8bit_send_string_pos@ret^0,w,c
   883   0018A4  0012               	return		;funcret
   884   0018A6                     __end_of_lcd_8bit_send_string_pos:
   885                           	callstack 0
   886                           
   887 ;; *************** function _lcd_8bit_set_cursor *****************
   888 ;; Defined at:
   889 ;;		line 538 in file "ECU_Layer/chr_lcd/ecu_chr_lcd.c"
   890 ;; Parameters:    Size  Location     Type
   891 ;;  lcd             1   15[COMRAM] PTR const struct .
   892 ;;		 -> lcd_2(10), 
   893 ;;  row             1   16[COMRAM] unsigned char 
   894 ;;  coulmn          1   17[COMRAM] unsigned char 
   895 ;; Auto vars:     Size  Location     Type
   896 ;;  ret             1   18[COMRAM] unsigned char 
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      unsigned char 
   899 ;; Registers used:
   900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   906 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   907 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   909 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   910 ;;Total ram usage:        4 bytes
   911 ;; Hardware stack levels used: 1
   912 ;; Hardware stack levels required when called: 3
   913 ;; This function calls:
   914 ;;		_lcd_8bit_send_command
   915 ;; This function is called by:
   916 ;;		_lcd_8bit_send_string_pos
   917 ;;		_lcd_8bit_send_char_data_pos
   918 ;; This function uses a non-reentrant model
   919 ;;
   920                           
   921                           	psect	text2
   922   001944                     __ptext2:
   923                           	callstack 0
   924   001944                     _lcd_8bit_set_cursor:
   925                           	callstack 26
   926   001944                     
   927                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 540:     ret = (Std_ReturnType)0x01;
   928   001944  0E01               	movlw	1
   929   001946  6E41               	movwf	lcd_8bit_set_cursor@ret^0,c
   930                           
   931                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 541:     if (lcd == ((void*)0))
   932   001948  503E               	movf	lcd_8bit_set_cursor@lcd^0,w,c
   933   00194A  A4D8               	btfss	status,2,c
   934   00194C  EFAA  F00C         	goto	u1921
   935   001950  EFAC  F00C         	goto	u1920
   936   001954                     u1921:
   937   001954  EFB0  F00C         	goto	l2758
   938   001958                     u1920:
   939   001958                     
   940                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 542:     {;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 543:      
      +                             ret = (Std_ReturnType)0x00;
   941   001958  0E00               	movlw	0
   942   00195A  6E41               	movwf	lcd_8bit_set_cursor@ret^0,c
   943                           
   944                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 544:     }
   945   00195C  EFEA  F00C         	goto	l2772
   946   001960                     l2758:
   947                           
   948                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 546:     {;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 547:      
      +                             coulmn--;
   949   001960  0640               	decf	lcd_8bit_set_cursor@coulmn^0,f,c
   950                           
   951                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 548:         switch(row)
   952   001962  EFD7  F00C         	goto	l2770
   953   001966                     l2760:
   954   001966  C03E  F038         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   955   00196A  5040               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
   956   00196C  0F80               	addlw	128
   957   00196E  6E39               	movwf	lcd_8bit_send_command@command^0,c
   958   001970  EC27  F00D         	call	_lcd_8bit_send_command	;wreg free
   959   001974  EFEA  F00C         	goto	l2772
   960   001978                     l2762:
   961   001978  C03E  F038         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   962   00197C  5040               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
   963   00197E  0FC0               	addlw	192
   964   001980  6E39               	movwf	lcd_8bit_send_command@command^0,c
   965   001982  EC27  F00D         	call	_lcd_8bit_send_command	;wreg free
   966   001986  EFEA  F00C         	goto	l2772
   967   00198A                     l2764:
   968   00198A  C03E  F038         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   969   00198E  5040               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
   970   001990  0F94               	addlw	148
   971   001992  6E39               	movwf	lcd_8bit_send_command@command^0,c
   972   001994  EC27  F00D         	call	_lcd_8bit_send_command	;wreg free
   973   001998  EFEA  F00C         	goto	l2772
   974   00199C                     l2766:
   975   00199C  C03E  F038         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   976   0019A0  5040               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
   977   0019A2  0FD4               	addlw	212
   978   0019A4  6E39               	movwf	lcd_8bit_send_command@command^0,c
   979   0019A6  EC27  F00D         	call	_lcd_8bit_send_command	;wreg free
   980   0019AA  EFEA  F00C         	goto	l2772
   981   0019AE                     l2770:
   982   0019AE  503F               	movf	lcd_8bit_set_cursor@row^0,w,c
   983                           
   984                           ; Switch size 1, requested type "simple"
   985                           ; Number of cases is 4, Range of values is 1 to 4
   986                           ; switch strategies available:
   987                           ; Name         Instructions Cycles
   988                           ; simple_byte           13     7 (average)
   989                           ;	Chosen strategy is simple_byte
   990   0019B0  0A01               	xorlw	1	; case 1
   991   0019B2  B4D8               	btfsc	status,2,c
   992   0019B4  EFB3  F00C         	goto	l2760
   993   0019B8  0A03               	xorlw	3	; case 2
   994   0019BA  B4D8               	btfsc	status,2,c
   995   0019BC  EFBC  F00C         	goto	l2762
   996   0019C0  0A01               	xorlw	1	; case 3
   997   0019C2  B4D8               	btfsc	status,2,c
   998   0019C4  EFC5  F00C         	goto	l2764
   999   0019C8  0A07               	xorlw	7	; case 4
  1000   0019CA  B4D8               	btfsc	status,2,c
  1001   0019CC  EFCE  F00C         	goto	l2766
  1002   0019D0  EFEA  F00C         	goto	l2772
  1003   0019D4                     l2772:
  1004                           
  1005                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 557:     return ret;
  1006   0019D4  5041               	movf	lcd_8bit_set_cursor@ret^0,w,c
  1007   0019D6  0012               	return		;funcret
  1008   0019D8                     __end_of_lcd_8bit_set_cursor:
  1009                           	callstack 0
  1010                           
  1011 ;; *************** function _lcd_8bit_send_char_data *****************
  1012 ;; Defined at:
  1013 ;;		line 283 in file "ECU_Layer/chr_lcd/ecu_chr_lcd.c"
  1014 ;; Parameters:    Size  Location     Type
  1015 ;;  lcd             1    9[COMRAM] PTR const struct .
  1016 ;;		 -> lcd_2(10), 
  1017 ;;  data            1   10[COMRAM] unsigned char 
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;  l_pin_counte    1   14[COMRAM] unsigned char 
  1020 ;;  ret             1   13[COMRAM] unsigned char 
  1021 ;; Return value:  Size  Location     Type
  1022 ;;                  1    wreg      unsigned char 
  1023 ;; Registers used:
  1024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1025 ;; Tracked objects:
  1026 ;;		On entry : 0/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1030 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1031 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1032 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1033 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1034 ;;Total ram usage:        6 bytes
  1035 ;; Hardware stack levels used: 1
  1036 ;; Hardware stack levels required when called: 2
  1037 ;; This function calls:
  1038 ;;		_gpio_pin_write_logic
  1039 ;;		_lcd_send_8bits_enable_signal
  1040 ;; This function is called by:
  1041 ;;		_lcd_8bit_send_string_pos
  1042 ;;		_lcd_8bit_send_char_data_pos
  1043 ;;		_lcd_8bit_send_string
  1044 ;;		_lcd_8bit_send_custom_char
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048                           	psect	text3
  1049   0019D8                     __ptext3:
  1050                           	callstack 0
  1051   0019D8                     _lcd_8bit_send_char_data:
  1052                           	callstack 27
  1053   0019D8                     
  1054                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 285:     uint8 l_pin_counter = 0X00;
  1055   0019D8  0E00               	movlw	0
  1056   0019DA  6E3D               	movwf	lcd_8bit_send_char_data@l_pin_counter^0,c
  1057                           
  1058                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 286:     if (((void*)0) == lcd)
  1059   0019DC  5038               	movf	lcd_8bit_send_char_data@lcd^0,w,c
  1060   0019DE  A4D8               	btfss	status,2,c
  1061   0019E0  EFF4  F00C         	goto	u1891
  1062   0019E4  EFF6  F00C         	goto	u1890
  1063   0019E8                     u1891:
  1064   0019E8  EFFA  F00C         	goto	l2734
  1065   0019EC                     u1890:
  1066   0019EC                     
  1067                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 287:     {;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 288:      
      +                             ret = (Std_ReturnType)0x00;
  1068   0019EC  0E00               	movlw	0
  1069   0019EE  6E3C               	movwf	lcd_8bit_send_char_data@ret^0,c
  1070                           
  1071                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 289:     }
  1072   0019F0  EF25  F00D         	goto	l2750
  1073   0019F4                     l2734:
  1074   0019F4  C038  F02F         	movff	lcd_8bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
  1075   0019F8  0E01               	movlw	1
  1076   0019FA  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1077   0019FC  EC82  F009         	call	_gpio_pin_write_logic	;wreg free
  1078   001A00                     
  1079                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 293:         for (l_pin_counter = 0X00 ; l_pin_counter
      +                          <8 ; l_pin_counter++)
  1080   001A00  0E00               	movlw	0
  1081   001A02  6E3D               	movwf	lcd_8bit_send_char_data@l_pin_counter^0,c
  1082   001A04                     l2742:
  1083                           
  1084                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 294:         {;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 295:  
      +                                   ret = gpio_pin_write_logic(&(lcd->lcd_data[l_pin_counter]), ((data >> l_pin_cou
      +                          nter) & (uint8)0x01));
  1085   001A04  5038               	movf	lcd_8bit_send_char_data@lcd^0,w,c
  1086   001A06  243D               	addwf	lcd_8bit_send_char_data@l_pin_counter^0,w,c
  1087   001A08  0F02               	addlw	2
  1088   001A0A  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1089   001A0C  C03D  F03A         	movff	lcd_8bit_send_char_data@l_pin_counter,??_lcd_8bit_send_char_data
  1090   001A10  C039  F03B         	movff	lcd_8bit_send_char_data@data,??_lcd_8bit_send_char_data+1
  1091   001A14  2A3A               	incf	??_lcd_8bit_send_char_data^0,f,c
  1092   001A16  EF0F  F00D         	goto	u1904
  1093   001A1A                     u1905:
  1094   001A1A  90D8               	bcf	status,0,c
  1095   001A1C  323B               	rrcf	(??_lcd_8bit_send_char_data+1)^0,f,c
  1096   001A1E                     u1904:
  1097   001A1E  2E3A               	decfsz	??_lcd_8bit_send_char_data^0,f,c
  1098   001A20  EF0D  F00D         	goto	u1905
  1099   001A24  503B               	movf	(??_lcd_8bit_send_char_data+1)^0,w,c
  1100   001A26  0B01               	andlw	1
  1101   001A28  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1102   001A2A  EC82  F009         	call	_gpio_pin_write_logic	;wreg free
  1103   001A2E  6E3C               	movwf	lcd_8bit_send_char_data@ret^0,c
  1104   001A30                     
  1105                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 296:         }
  1106   001A30  2A3D               	incf	lcd_8bit_send_char_data@l_pin_counter^0,f,c
  1107   001A32  0E07               	movlw	7
  1108   001A34  643D               	cpfsgt	lcd_8bit_send_char_data@l_pin_counter^0,c
  1109   001A36  EF1F  F00D         	goto	u1911
  1110   001A3A  EF21  F00D         	goto	u1910
  1111   001A3E                     u1911:
  1112   001A3E  EF02  F00D         	goto	l2742
  1113   001A42                     u1910:
  1114   001A42                     
  1115                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 297:         lcd_send_8bits_enable_signal(lcd);
  1116   001A42  C038  F037         	movff	lcd_8bit_send_char_data@lcd,lcd_send_8bits_enable_signal@lcd
  1117   001A46  EC7A  F00E         	call	_lcd_send_8bits_enable_signal	;wreg free
  1118   001A4A                     l2750:
  1119                           
  1120                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 299:     return ret;
  1121   001A4A  503C               	movf	lcd_8bit_send_char_data@ret^0,w,c
  1122   001A4C  0012               	return		;funcret
  1123   001A4E                     __end_of_lcd_8bit_send_char_data:
  1124                           	callstack 0
  1125                           
  1126 ;; *************** function _exit *****************
  1127 ;; Defined at:
  1128 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\exit.c"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;  code            2    2[COMRAM] int 
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;		None
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  1    wreg      void 
  1135 ;; Registers used:
  1136 ;;		wreg, status,2, status,0, cstack
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1142 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1145 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1146 ;;Total ram usage:        2 bytes
  1147 ;; Hardware stack levels used: 1
  1148 ;; Hardware stack levels required when called: 1
  1149 ;; This function calls:
  1150 ;;		__Exit
  1151 ;;		___funcs_on_exit
  1152 ;; This function is called by:
  1153 ;;		_main
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           	psect	text4
  1158   001E22                     __ptext4:
  1159                           	callstack 0
  1160   001E22                     _exit:
  1161                           	callstack 29
  1162   001E22  ECF8  F00E         	call	___funcs_on_exit	;wreg free
  1163   001E26  C031  F02F         	movff	exit@code,__Exit@ec
  1164   001E2A  C032  F030         	movff	exit@code+1,__Exit@ec+1
  1165   001E2E  EC1A  F00F         	call	__Exit	;wreg free
  1166   001E32  0012               	return		;funcret
  1167   001E34                     __end_of_exit:
  1168                           	callstack 0
  1169                           
  1170 ;; *************** function ___funcs_on_exit *****************
  1171 ;; Defined at:
  1172 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\atexit.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;		None
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;  func            2    0        PTR FTN()void 
  1177 ;; Return value:  Size  Location     Type
  1178 ;;                  1    wreg      void 
  1179 ;; Registers used:
  1180 ;;		wreg, status,2, status,0
  1181 ;; Tracked objects:
  1182 ;;		On entry : 0/0
  1183 ;;		On exit  : 0/0
  1184 ;;		Unchanged: 0/0
  1185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1190 ;;Total ram usage:        0 bytes
  1191 ;; Hardware stack levels used: 1
  1192 ;; This function calls:
  1193 ;;		Nothing
  1194 ;; This function is called by:
  1195 ;;		_exit
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           	psect	text5
  1200   001DF0                     __ptext5:
  1201                           	callstack 0
  1202   001DF0                     ___funcs_on_exit:
  1203                           	callstack 29
  1204   001DF0  EFFB  F00E         	goto	l1740
  1205   001DF4                     l1738:
  1206   001DF4  0668               	decf	_count^0,f,c
  1207   001DF6                     l1740:
  1208   001DF6  5068               	movf	_count^0,w,c
  1209   001DF8  0A80               	xorlw	128
  1210   001DFA  0F7F               	addlw	-129
  1211   001DFC  B0D8               	btfsc	status,0,c
  1212   001DFE  EF03  F00F         	goto	u571
  1213   001E02  EF05  F00F         	goto	u570
  1214   001E06                     u571:
  1215   001E06  EFFA  F00E         	goto	l1738
  1216   001E0A                     u570:
  1217   001E0A  0012               	return		;funcret
  1218   001E0C                     __end_of___funcs_on_exit:
  1219                           	callstack 0
  1220                           
  1221 ;; *************** function __Exit *****************
  1222 ;; Defined at:
  1223 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\_Exit.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;  ec              2    0[COMRAM] int 
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;		None
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  1    wreg      void 
  1230 ;; Registers used:
  1231 ;;		None
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1237 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1240 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1241 ;;Total ram usage:        2 bytes
  1242 ;; Hardware stack levels used: 1
  1243 ;; This function calls:
  1244 ;;		Nothing
  1245 ;; This function is called by:
  1246 ;;		_exit
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           	psect	text6
  1251   001E34                     __ptext6:
  1252                           	callstack 0
  1253   001E34                     __Exit:
  1254                           	callstack 29
  1255   001E34                     l1183:
  1256   001E34  EF1A  F00F         	goto	l1183
  1257   001E38  0012               	return		;funcret
  1258   001E3A                     __end_of__Exit:
  1259                           	callstack 0
  1260                           
  1261 ;; *************** function _convert_byte_to_string *****************
  1262 ;; Defined at:
  1263 ;;		line 414 in file "ECU_Layer/chr_lcd/ecu_chr_lcd.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;  value           1    wreg     unsigned char 
  1266 ;;  str             1   42[COMRAM] PTR unsigned char 
  1267 ;;		 -> lcd_counter_txt(4), 
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;  value           1   43[COMRAM] unsigned char 
  1270 ;;  ret             1   44[COMRAM] unsigned char 
  1271 ;; Return value:  Size  Location     Type
  1272 ;;                  1    wreg      unsigned char 
  1273 ;; Registers used:
  1274 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1280 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1281 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1283 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1284 ;;Total ram usage:        3 bytes
  1285 ;; Hardware stack levels used: 1
  1286 ;; Hardware stack levels required when called: 5
  1287 ;; This function calls:
  1288 ;;		_memset
  1289 ;;		_sprintf
  1290 ;; This function is called by:
  1291 ;;		_main
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295                           	psect	text7
  1296   001BEC                     __ptext7:
  1297                           	callstack 0
  1298   001BEC                     _convert_byte_to_string:
  1299                           	callstack 25
  1300                           
  1301                           ;incstack = 0
  1302                           ;convert_byte_to_string@value stored from wreg
  1303   001BEC  6E5A               	movwf	convert_byte_to_string@value^0,c
  1304   001BEE                     
  1305                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 415:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1306   001BEE  0E01               	movlw	1
  1307   001BF0  6E5B               	movwf	convert_byte_to_string@ret^0,c
  1308   001BF2                     
  1309                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 416:     if (((void*)0) == str)
  1310   001BF2  5059               	movf	convert_byte_to_string@str^0,w,c
  1311   001BF4  A4D8               	btfss	status,2,c
  1312   001BF6  EFFF  F00D         	goto	u2011
  1313   001BFA  EF01  F00E         	goto	u2010
  1314   001BFE                     u2011:
  1315   001BFE  EF05  F00E         	goto	l2846
  1316   001C02                     u2010:
  1317   001C02                     
  1318                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 417:     {;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 418:      
      +                             ret = (Std_ReturnType)0x00;
  1319   001C02  0E00               	movlw	0
  1320   001C04  6E5B               	movwf	convert_byte_to_string@ret^0,c
  1321                           
  1322                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 419:     }
  1323   001C06  EF1A  F00E         	goto	l2850
  1324   001C0A                     l2846:
  1325                           
  1326                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 421:     {;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 423:      
      +                             memset(str, '\0', 4);
  1327   001C0A  C059  F02F         	movff	convert_byte_to_string@str,memset@dest
  1328   001C0E  0E00               	movlw	0
  1329   001C10  6E31               	movwf	(memset@c+1)^0,c
  1330   001C12  0E00               	movlw	0
  1331   001C14  6E30               	movwf	memset@c^0,c
  1332   001C16  0E00               	movlw	0
  1333   001C18  6E33               	movwf	(memset@n+1)^0,c
  1334   001C1A  0E04               	movlw	4
  1335   001C1C  6E32               	movwf	memset@n^0,c
  1336   001C1E  ECC9  F00E         	call	_memset	;wreg free
  1337   001C22                     
  1338                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 424:         sprintf(str, "%i", value);
  1339   001C22  C059  F048         	movff	convert_byte_to_string@str,sprintf@s
  1340   001C26  0E2D               	movlw	low STR_1
  1341   001C28  6E49               	movwf	sprintf@fmt^0,c
  1342   001C2A  C05A  F04A         	movff	convert_byte_to_string@value,?_sprintf+2
  1343   001C2E  6A4B               	clrf	(?_sprintf+3)^0,c
  1344   001C30  EC95  F00E         	call	_sprintf	;wreg free
  1345   001C34                     l2850:
  1346                           
  1347                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 426:     return ret;
  1348   001C34  505B               	movf	convert_byte_to_string@ret^0,w,c
  1349   001C36  0012               	return		;funcret
  1350   001C38                     __end_of_convert_byte_to_string:
  1351                           	callstack 0
  1352                           
  1353 ;; *************** function _sprintf *****************
  1354 ;; Defined at:
  1355 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;  s               1   25[COMRAM] PTR unsigned char 
  1358 ;;		 -> lcd_counter_txt(4), 
  1359 ;;  fmt             1   26[COMRAM] PTR const unsigned char 
  1360 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;  f              12   30[COMRAM] struct _IO_FILE
  1363 ;;  ret             2    0        int 
  1364 ;;  ap              1   29[COMRAM] PTR void [1]
  1365 ;;		 -> ?_sprintf(2), 
  1366 ;; Return value:  Size  Location     Type
  1367 ;;                  2   25[COMRAM] int 
  1368 ;; Registers used:
  1369 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1375 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1376 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1378 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1379 ;;Total ram usage:       17 bytes
  1380 ;; Hardware stack levels used: 1
  1381 ;; Hardware stack levels required when called: 4
  1382 ;; This function calls:
  1383 ;;		_vfprintf
  1384 ;; This function is called by:
  1385 ;;		_convert_byte_to_string
  1386 ;;		_convert_short_to_string
  1387 ;;		_convert_int_to_string
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391                           	psect	text8
  1392   001D2A                     __ptext8:
  1393                           	callstack 0
  1394   001D2A                     _sprintf:
  1395                           	callstack 25
  1396   001D2A  0E4A               	movlw	low (?_sprintf+2)
  1397   001D2C  6E4C               	movwf	sprintf@ap^0,c
  1398   001D2E  C048  F04D         	movff	sprintf@s,sprintf@f
  1399   001D32  0E00               	movlw	0
  1400   001D34  6E51               	movwf	(sprintf@f+4)^0,c
  1401   001D36  0E00               	movlw	0
  1402   001D38  6E50               	movwf	(sprintf@f+3)^0,c
  1403   001D3A  0E00               	movlw	0
  1404   001D3C  6E58               	movwf	(sprintf@f+11)^0,c
  1405   001D3E  0E00               	movlw	0
  1406   001D40  6E57               	movwf	(sprintf@f+10)^0,c
  1407   001D42  0E4D               	movlw	low sprintf@f
  1408   001D44  6E44               	movwf	vfprintf@fp^0,c
  1409   001D46  C049  F045         	movff	sprintf@fmt,vfprintf@fmt
  1410   001D4A  0E4C               	movlw	low sprintf@ap
  1411   001D4C  6E46               	movwf	vfprintf@ap^0,c
  1412   001D4E  EC1C  F00E         	call	_vfprintf	;wreg free
  1413   001D52  5048               	movf	sprintf@s^0,w,c
  1414   001D54  2450               	addwf	(sprintf@f+3)^0,w,c
  1415   001D56  6ED9               	movwf	fsr2l,c
  1416   001D58  6ADA               	clrf	fsr2h,c
  1417   001D5A  6ADF               	clrf	indf2,c
  1418   001D5C  0012               	return		;funcret
  1419   001D5E                     __end_of_sprintf:
  1420                           	callstack 0
  1421                           
  1422 ;; *************** function _vfprintf *****************
  1423 ;; Defined at:
  1424 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;  fp              1   21[COMRAM] PTR struct _IO_FILE
  1427 ;;		 -> sprintf@f(12), 
  1428 ;;  fmt             1   22[COMRAM] PTR const unsigned char 
  1429 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1430 ;;  ap              1   23[COMRAM] PTR PTR void 
  1431 ;;		 -> sprintf@ap(1), 
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;  cfmt            1   24[COMRAM] PTR unsigned char 
  1434 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  2   21[COMRAM] int 
  1437 ;; Registers used:
  1438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1444 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1445 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1447 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1448 ;;Total ram usage:        4 bytes
  1449 ;; Hardware stack levels used: 1
  1450 ;; Hardware stack levels required when called: 3
  1451 ;; This function calls:
  1452 ;;		_vfpfcnvrt
  1453 ;; This function is called by:
  1454 ;;		_sprintf
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           	psect	text9
  1459   001C38                     __ptext9:
  1460                           	callstack 0
  1461   001C38                     _vfprintf:
  1462                           	callstack 25
  1463   001C38                     
  1464                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1465   001C38  C045  F047         	movff	vfprintf@fmt,vfprintf@cfmt
  1466                           
  1467                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1468   001C3C  EF28  F00E         	goto	l2712
  1469   001C40                     l2710:
  1470                           
  1471                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1472   001C40  C044  F039         	movff	vfprintf@fp,vfpfcnvrt@fp
  1473   001C44  0E47               	movlw	low vfprintf@cfmt
  1474   001C46  6E3A               	movwf	vfpfcnvrt@fmt^0,c
  1475   001C48  C046  F03B         	movff	vfprintf@ap,vfpfcnvrt@ap
  1476   001C4C  EC19  F008         	call	_vfpfcnvrt	;wreg free
  1477   001C50                     l2712:
  1478                           
  1479                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1480   001C50  C047  FFF6         	movff	vfprintf@cfmt,tblptrl
  1481   001C54                     	if	1	;There is more than 1 active tblptr byte
  1482   001C54  0E10               	movlw	high __smallconst
  1483   001C56  6EF7               	movwf	tblptrh,c
  1484   001C58                     	endif
  1485   001C58                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1486   001C58  6AF8               	clrf	tblptru,c
  1487   001C5A                     	endif
  1488   001C5A                     	if	0	;tblptru may be non-zero
  1489   001C5A                     	endif
  1490   001C5A  0008               	tblrd		*
  1491   001C5C  50F5               	movf	tablat,w,c
  1492   001C5E  0900               	iorlw	0
  1493   001C60  A4D8               	btfss	status,2,c
  1494   001C62  EF35  F00E         	goto	u1871
  1495   001C66  EF37  F00E         	goto	u1870
  1496   001C6A                     u1871:
  1497   001C6A  EF20  F00E         	goto	l2710
  1498   001C6E                     u1870:
  1499   001C6E                     
  1500                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1501   001C6E  0E00               	movlw	0
  1502   001C70  6E45               	movwf	(?_vfprintf+1)^0,c
  1503   001C72  0E00               	movlw	0
  1504   001C74  6E44               	movwf	?_vfprintf^0,c
  1505   001C76  0012               	return		;funcret
  1506   001C78                     __end_of_vfprintf:
  1507                           	callstack 0
  1508                           
  1509 ;; *************** function _vfpfcnvrt *****************
  1510 ;; Defined at:
  1511 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  1514 ;;		 -> sprintf@f(12), 
  1515 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  1516 ;;		 -> vfprintf@cfmt(1), 
  1517 ;;  ap              1   12[COMRAM] PTR PTR void 
  1518 ;;		 -> sprintf@ap(1), 
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;  convarg         4   16[COMRAM] struct .
  1521 ;;  c               1   20[COMRAM] unsigned char 
  1522 ;;  cp              1   15[COMRAM] PTR unsigned char 
  1523 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1524 ;;  done            1   14[COMRAM] _Bool 
  1525 ;; Return value:  Size  Location     Type
  1526 ;;                  1    wreg      void 
  1527 ;; Registers used:
  1528 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1534 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1535 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1536 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1537 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1538 ;;Total ram usage:       11 bytes
  1539 ;; Hardware stack levels used: 1
  1540 ;; Hardware stack levels required when called: 2
  1541 ;; This function calls:
  1542 ;;		___awdiv
  1543 ;;		___awmod
  1544 ;;		_abs
  1545 ;;		_fputc
  1546 ;; This function is called by:
  1547 ;;		_vfprintf
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           	psect	text10
  1552   001032                     __ptext10:
  1553                           	callstack 0
  1554   001032                     _vfpfcnvrt:
  1555                           	callstack 25
  1556   001032                     
  1557                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1558   001032  503A               	movf	vfpfcnvrt@fmt^0,w,c
  1559   001034  6ED9               	movwf	fsr2l,c
  1560   001036  6ADA               	clrf	fsr2h,c
  1561   001038  CFDF FFF6          	movff	indf2,tblptrl
  1562   00103C                     	if	1	;There is more than 1 active tblptr byte
  1563   00103C  0E10               	movlw	high __smallconst
  1564   00103E  6EF7               	movwf	tblptrh,c
  1565   001040                     	endif
  1566   001040                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1567   001040  6AF8               	clrf	tblptru,c
  1568   001042                     	endif
  1569   001042                     	if	0	;tblptru may be non-zero
  1570   001042                     	endif
  1571   001042  0008               	tblrd		*
  1572   001044  50F5               	movf	tablat,w,c
  1573   001046  0A25               	xorlw	37
  1574   001048  A4D8               	btfss	status,2,c
  1575   00104A  EF29  F008         	goto	u1731
  1576   00104E  EF2B  F008         	goto	u1730
  1577   001052                     u1731:
  1578   001052  EFE6  F008         	goto	l2614
  1579   001056                     u1730:
  1580   001056                     
  1581                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1582   001056  503A               	movf	vfpfcnvrt@fmt^0,w,c
  1583   001058  6ED9               	movwf	fsr2l,c
  1584   00105A  6ADA               	clrf	fsr2h,c
  1585   00105C  2ADF               	incf	indf2,f,c
  1586   00105E                     
  1587                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1588   00105E  0E00               	movlw	0
  1589   001060  6E64               	movwf	(_width+1)^0,c
  1590   001062  0E00               	movlw	0
  1591   001064  6E63               	movwf	_width^0,c
  1592   001066  C063  F067         	movff	_width,_flags
  1593   00106A                     
  1594                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1595   00106A  6865               	setf	_prec^0,c
  1596   00106C  6866               	setf	(_prec+1)^0,c
  1597   00106E                     
  1598                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1599   00106E  503A               	movf	vfpfcnvrt@fmt^0,w,c
  1600   001070  6ED9               	movwf	fsr2l,c
  1601   001072  6ADA               	clrf	fsr2h,c
  1602   001074  50DF               	movf	indf2,w,c
  1603   001076  6E3E               	movwf	vfpfcnvrt@cp^0,c
  1604   001078                     
  1605                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1606   001078  C03E  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1607   00107C                     	if	1	;There is more than 1 active tblptr byte
  1608   00107C  0E10               	movlw	high __smallconst
  1609   00107E  6EF7               	movwf	tblptrh,c
  1610   001080                     	endif
  1611   001080                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1612   001080  6AF8               	clrf	tblptru,c
  1613   001082                     	endif
  1614   001082                     	if	0	;tblptru may be non-zero
  1615   001082                     	endif
  1616   001082  0008               	tblrd		*
  1617   001084  50F5               	movf	tablat,w,c
  1618   001086  0A64               	xorlw	100
  1619   001088  B4D8               	btfsc	status,2,c
  1620   00108A  EF49  F008         	goto	u1741
  1621   00108E  EF4B  F008         	goto	u1740
  1622   001092                     u1741:
  1623   001092  EF5A  F008         	goto	l2584
  1624   001096                     u1740:
  1625   001096  C03E  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1626   00109A                     	if	1	;There is more than 1 active tblptr byte
  1627   00109A  0E10               	movlw	high __smallconst
  1628   00109C  6EF7               	movwf	tblptrh,c
  1629   00109E                     	endif
  1630   00109E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1631   00109E  6AF8               	clrf	tblptru,c
  1632   0010A0                     	endif
  1633   0010A0                     	if	0	;tblptru may be non-zero
  1634   0010A0                     	endif
  1635   0010A0  0008               	tblrd		*
  1636   0010A2  50F5               	movf	tablat,w,c
  1637   0010A4  0A69               	xorlw	105
  1638   0010A6  A4D8               	btfss	status,2,c
  1639   0010A8  EF58  F008         	goto	u1751
  1640   0010AC  EF5A  F008         	goto	u1750
  1641   0010B0                     u1751:
  1642   0010B0  EFE0  F008         	goto	l2610
  1643   0010B4                     u1750:
  1644   0010B4                     l2584:
  1645                           
  1646                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1647   0010B4  503B               	movf	vfpfcnvrt@ap^0,w,c
  1648   0010B6  6ED9               	movwf	fsr2l,c
  1649   0010B8  6ADA               	clrf	fsr2h,c
  1650   0010BA  0E02               	movlw	2
  1651   0010BC  26DF               	addwf	indf2,f,c
  1652   0010BE  5CDF               	subwf	indf2,w,c
  1653   0010C0  6ED9               	movwf	fsr2l,c
  1654   0010C2  6ADA               	clrf	fsr2h,c
  1655   0010C4  CFDE F03F          	movff	postinc2,vfpfcnvrt@convarg
  1656   0010C8  CFDE F040          	movff	postinc2,vfpfcnvrt@convarg+1
  1657   0010CC                     
  1658                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1659   0010CC  503A               	movf	vfpfcnvrt@fmt^0,w,c
  1660   0010CE  6ED9               	movwf	fsr2l,c
  1661   0010D0  6ADA               	clrf	fsr2h,c
  1662   0010D2  283E               	incf	vfpfcnvrt@cp^0,w,c
  1663   0010D4  6EDF               	movwf	indf2,c
  1664   0010D6                     
  1665                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1666   0010D6  0E20               	movlw	32
  1667   0010D8  6E43               	movwf	vfpfcnvrt@c^0,c
  1668                           
  1669                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1670   0010DA  BE40               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1671   0010DC  EF72  F008         	goto	u1761
  1672   0010E0  EF75  F008         	goto	u1760
  1673   0010E4                     u1761:
  1674   0010E4  0E01               	movlw	1
  1675   0010E6  EF76  F008         	goto	u1770
  1676   0010EA                     u1760:
  1677   0010EA  0E00               	movlw	0
  1678   0010EC                     u1770:
  1679   0010EC  6E3D               	movwf	vfpfcnvrt@done^0,c
  1680   0010EE                     l2590:
  1681                           
  1682                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1683   0010EE  0643               	decf	vfpfcnvrt@c^0,f,c
  1684   0010F0  5043               	movf	vfpfcnvrt@c^0,w,c
  1685   0010F2  0F80               	addlw	low _dbuf
  1686   0010F4  6ED9               	movwf	fsr2l,c
  1687   0010F6  6ADA               	clrf	fsr2h,c
  1688   0010F8  C03F  F02F         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1689   0010FC  C040  F030         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1690   001100  0E00               	movlw	0
  1691   001102  6E32               	movwf	(___awmod@divisor+1)^0,c
  1692   001104  0E0A               	movlw	10
  1693   001106  6E31               	movwf	___awmod@divisor^0,c
  1694   001108  EC52  F00B         	call	___awmod	;wreg free
  1695   00110C  C02F  F035         	movff	?___awmod,abs@a
  1696   001110  C030  F036         	movff	?___awmod+1,abs@a+1
  1697   001114  ECAF  F00E         	call	_abs	;wreg free
  1698   001118  5035               	movf	?_abs^0,w,c
  1699   00111A  0F30               	addlw	48
  1700   00111C  6EDF               	movwf	indf2,c
  1701   00111E                     
  1702                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1703   00111E  C03F  F02F         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1704   001122  C040  F030         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1705   001126  0E00               	movlw	0
  1706   001128  6E32               	movwf	(___awdiv@divisor+1)^0,c
  1707   00112A  0E0A               	movlw	10
  1708   00112C  6E31               	movwf	___awdiv@divisor^0,c
  1709   00112E  ECF0  F00A         	call	___awdiv	;wreg free
  1710   001132  C02F  F03F         	movff	?___awdiv,vfpfcnvrt@convarg
  1711   001136  C030  F040         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1712   00113A                     
  1713                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1714   00113A  503F               	movf	vfpfcnvrt@convarg^0,w,c
  1715   00113C  1040               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1716   00113E  B4D8               	btfsc	status,2,c
  1717   001140  EFA4  F008         	goto	u1781
  1718   001144  EFA6  F008         	goto	u1780
  1719   001148                     u1781:
  1720   001148  EFAE  F008         	goto	l2598
  1721   00114C                     u1780:
  1722   00114C  5043               	movf	vfpfcnvrt@c^0,w,c
  1723   00114E  A4D8               	btfss	status,2,c
  1724   001150  EFAC  F008         	goto	u1791
  1725   001154  EFAE  F008         	goto	u1790
  1726   001158                     u1791:
  1727   001158  EF77  F008         	goto	l2590
  1728   00115C                     u1790:
  1729   00115C                     l2598:
  1730                           
  1731                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1732   00115C  5043               	movf	vfpfcnvrt@c^0,w,c
  1733   00115E  B4D8               	btfsc	status,2,c
  1734   001160  EFB4  F008         	goto	u1801
  1735   001164  EFB6  F008         	goto	u1800
  1736   001168                     u1801:
  1737   001168  EFD5  F008         	goto	l2608
  1738   00116C                     u1800:
  1739   00116C  503D               	movf	vfpfcnvrt@done^0,w,c
  1740   00116E  B4D8               	btfsc	status,2,c
  1741   001170  EFBC  F008         	goto	u1811
  1742   001174  EFBE  F008         	goto	u1810
  1743   001178                     u1811:
  1744   001178  EFD5  F008         	goto	l2608
  1745   00117C                     u1810:
  1746   00117C                     
  1747                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1748   00117C  0643               	decf	vfpfcnvrt@c^0,f,c
  1749   00117E  5043               	movf	vfpfcnvrt@c^0,w,c
  1750   001180  0F80               	addlw	low _dbuf
  1751   001182  6ED9               	movwf	fsr2l,c
  1752   001184  6ADA               	clrf	fsr2h,c
  1753   001186  0E2D               	movlw	45
  1754   001188  6EDF               	movwf	indf2,c
  1755   00118A  EFD5  F008         	goto	l2608
  1756   00118E                     l2604:
  1757                           
  1758                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1759   00118E  5043               	movf	vfpfcnvrt@c^0,w,c
  1760   001190  0F80               	addlw	low _dbuf
  1761   001192  6ED9               	movwf	fsr2l,c
  1762   001194  6ADA               	clrf	fsr2h,c
  1763   001196  50DF               	movf	indf2,w,c
  1764   001198  6E3C               	movwf	??_vfpfcnvrt^0,c
  1765   00119A  503C               	movf	??_vfpfcnvrt^0,w,c
  1766   00119C  6E2F               	movwf	fputc@c^0,c
  1767   00119E  6A30               	clrf	(fputc@c+1)^0,c
  1768   0011A0  C039  F031         	movff	vfpfcnvrt@fp,fputc@fp
  1769   0011A4  ECAA  F00B         	call	_fputc	;wreg free
  1770   0011A8  2A43               	incf	vfpfcnvrt@c^0,f,c
  1771   0011AA                     l2608:
  1772                           
  1773                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1774   0011AA  0E20               	movlw	32
  1775   0011AC  1843               	xorwf	vfpfcnvrt@c^0,w,c
  1776   0011AE  A4D8               	btfss	status,2,c
  1777   0011B0  EFDC  F008         	goto	u1821
  1778   0011B4  EFDE  F008         	goto	u1820
  1779   0011B8                     u1821:
  1780   0011B8  EFC7  F008         	goto	l2604
  1781   0011BC                     u1820:
  1782   0011BC  EFF8  F008         	goto	l1250
  1783   0011C0                     l2610:
  1784                           
  1785                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1786   0011C0  503A               	movf	vfpfcnvrt@fmt^0,w,c
  1787   0011C2  6ED9               	movwf	fsr2l,c
  1788   0011C4  6ADA               	clrf	fsr2h,c
  1789   0011C6  2ADF               	incf	indf2,f,c
  1790   0011C8  EFF8  F008         	goto	l1250
  1791   0011CC                     l2614:
  1792                           
  1793                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1794   0011CC  503A               	movf	vfpfcnvrt@fmt^0,w,c
  1795   0011CE  6ED9               	movwf	fsr2l,c
  1796   0011D0  6ADA               	clrf	fsr2h,c
  1797   0011D2  CFDF FFF6          	movff	indf2,tblptrl
  1798   0011D6                     	if	1	;There is more than 1 active tblptr byte
  1799   0011D6  0E10               	movlw	high __smallconst
  1800   0011D8  6EF7               	movwf	tblptrh,c
  1801   0011DA                     	endif
  1802   0011DA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1803   0011DA  6AF8               	clrf	tblptru,c
  1804   0011DC                     	endif
  1805   0011DC                     	if	0	;tblptru may be non-zero
  1806   0011DC                     	endif
  1807   0011DC  0008               	tblrd		*
  1808   0011DE  50F5               	movf	tablat,w,c
  1809   0011E0  6E2F               	movwf	fputc@c^0,c
  1810   0011E2  6A30               	clrf	(fputc@c+1)^0,c
  1811   0011E4  C039  F031         	movff	vfpfcnvrt@fp,fputc@fp
  1812   0011E8  ECAA  F00B         	call	_fputc	;wreg free
  1813   0011EC  EFE0  F008         	goto	l2610
  1814   0011F0                     l1250:
  1815   0011F0  0012               	return		;funcret
  1816   0011F2                     __end_of_vfpfcnvrt:
  1817                           	callstack 0
  1818                           
  1819 ;; *************** function _fputc *****************
  1820 ;; Defined at:
  1821 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  1822 ;; Parameters:    Size  Location     Type
  1823 ;;  c               2    0[COMRAM] int 
  1824 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  1825 ;;		 -> sprintf@f(12), 
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;		None
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  2    0[COMRAM] int 
  1830 ;; Registers used:
  1831 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1837 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1839 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1840 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1841 ;;Total ram usage:        8 bytes
  1842 ;; Hardware stack levels used: 1
  1843 ;; Hardware stack levels required when called: 1
  1844 ;; This function calls:
  1845 ;;		_putch
  1846 ;; This function is called by:
  1847 ;;		_vfpfcnvrt
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           	psect	text11
  1852   001754                     __ptext11:
  1853                           	callstack 0
  1854   001754                     _fputc:
  1855                           	callstack 25
  1856   001754  5031               	movf	fputc@fp^0,w,c
  1857   001756  B4D8               	btfsc	status,2,c
  1858   001758  EFB0  F00B         	goto	u1621
  1859   00175C  EFB2  F00B         	goto	u1620
  1860   001760                     u1621:
  1861   001760  EFBA  F00B         	goto	l2510
  1862   001764                     u1620:
  1863   001764  5031               	movf	fputc@fp^0,w,c
  1864   001766  A4D8               	btfss	status,2,c
  1865   001768  EFB8  F00B         	goto	u1631
  1866   00176C  EFBA  F00B         	goto	u1630
  1867   001770                     u1631:
  1868   001770  EFBF  F00B         	goto	l2512
  1869   001774                     u1630:
  1870   001774                     l2510:
  1871   001774  502F               	movf	fputc@c^0,w,c
  1872   001776  EC20  F00F         	call	_putch
  1873   00177A  EFFE  F00B         	goto	l1275
  1874   00177E                     l2512:
  1875   00177E  5031               	movf	fputc@fp^0,w,c
  1876   001780  6ED9               	movwf	fsr2l,c
  1877   001782  6ADA               	clrf	fsr2h,c
  1878   001784  0E0A               	movlw	10
  1879   001786  26D9               	addwf	fsr2l,f,c
  1880   001788  50DE               	movf	postinc2,w,c
  1881   00178A  10DE               	iorwf	postinc2,w,c
  1882   00178C  B4D8               	btfsc	status,2,c
  1883   00178E  EFCB  F00B         	goto	u1641
  1884   001792  EFCD  F00B         	goto	u1640
  1885   001796                     u1641:
  1886   001796  EFE6  F00B         	goto	l2516
  1887   00179A                     u1640:
  1888   00179A  5031               	movf	fputc@fp^0,w,c
  1889   00179C  6ED9               	movwf	fsr2l,c
  1890   00179E  6ADA               	clrf	fsr2h,c
  1891   0017A0  0E0A               	movlw	10
  1892   0017A2  26D9               	addwf	fsr2l,f,c
  1893   0017A4  5031               	movf	fputc@fp^0,w,c
  1894   0017A6  6EE1               	movwf	fsr1l,c
  1895   0017A8  6AE2               	clrf	fsr1h,c
  1896   0017AA  0E03               	movlw	3
  1897   0017AC  26E1               	addwf	fsr1l,f,c
  1898   0017AE  50DE               	movf	postinc2,w,c
  1899   0017B0  5CE6               	subwf	postinc1,w,c
  1900   0017B2  50E6               	movf	postinc1,w,c
  1901   0017B4  0A80               	xorlw	128
  1902   0017B6  6E36               	movwf	(??_fputc+4)^0,c
  1903   0017B8  50DE               	movf	postinc2,w,c
  1904   0017BA  0A80               	xorlw	128
  1905   0017BC  5836               	subwfb	(??_fputc+4)^0,w,c
  1906   0017BE  B0D8               	btfsc	status,0,c
  1907   0017C0  EFE4  F00B         	goto	u1651
  1908   0017C4  EFE6  F00B         	goto	u1650
  1909   0017C8                     u1651:
  1910   0017C8  EFFE  F00B         	goto	l1275
  1911   0017CC                     u1650:
  1912   0017CC                     l2516:
  1913   0017CC  5031               	movf	fputc@fp^0,w,c
  1914   0017CE  6ED9               	movwf	fsr2l,c
  1915   0017D0  6ADA               	clrf	fsr2h,c
  1916   0017D2  0E03               	movlw	3
  1917   0017D4  26D9               	addwf	fsr2l,f,c
  1918   0017D6  50DF               	movf	indf2,w,c
  1919   0017D8  6E32               	movwf	??_fputc^0,c
  1920   0017DA  5031               	movf	fputc@fp^0,w,c
  1921   0017DC  6ED9               	movwf	fsr2l,c
  1922   0017DE  6ADA               	clrf	fsr2h,c
  1923   0017E0  50DF               	movf	indf2,w,c
  1924   0017E2  2432               	addwf	??_fputc^0,w,c
  1925   0017E4  6ED9               	movwf	fsr2l,c
  1926   0017E6  6ADA               	clrf	fsr2h,c
  1927   0017E8  C02F  FFDF         	movff	fputc@c,indf2
  1928   0017EC  5031               	movf	fputc@fp^0,w,c
  1929   0017EE  6ED9               	movwf	fsr2l,c
  1930   0017F0  6ADA               	clrf	fsr2h,c
  1931   0017F2  0E03               	movlw	3
  1932   0017F4  26D9               	addwf	fsr2l,f,c
  1933   0017F6  2ADE               	incf	postinc2,f,c
  1934   0017F8  0E00               	movlw	0
  1935   0017FA  22DD               	addwfc	postdec2,f,c
  1936   0017FC                     l1275:
  1937   0017FC  0012               	return		;funcret
  1938   0017FE                     __end_of_fputc:
  1939                           	callstack 0
  1940                           
  1941 ;; *************** function _putch *****************
  1942 ;; Defined at:
  1943 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;  c               1    wreg     unsigned char 
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;  c               1    0[COMRAM] unsigned char 
  1948 ;; Return value:  Size  Location     Type
  1949 ;;                  1    wreg      void 
  1950 ;; Registers used:
  1951 ;;		wreg
  1952 ;; Tracked objects:
  1953 ;;		On entry : 0/0
  1954 ;;		On exit  : 0/0
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1961 ;;Total ram usage:        0 bytes
  1962 ;; Hardware stack levels used: 1
  1963 ;; This function calls:
  1964 ;;		Nothing
  1965 ;; This function is called by:
  1966 ;;		_fputc
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           	psect	text12
  1971   001E40                     __ptext12:
  1972                           	callstack 0
  1973   001E40                     _putch:
  1974                           	callstack 25
  1975   001E40  0012               	return		;funcret
  1976   001E42                     __end_of_putch:
  1977                           	callstack 0
  1978                           
  1979 ;; *************** function _abs *****************
  1980 ;; Defined at:
  1981 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;  a               2    6[COMRAM] int 
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;		None
  1986 ;; Return value:  Size  Location     Type
  1987 ;;                  2    6[COMRAM] int 
  1988 ;; Registers used:
  1989 ;;		wreg, status,2, status,0
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1995 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1997 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1998 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1999 ;;Total ram usage:        4 bytes
  2000 ;; Hardware stack levels used: 1
  2001 ;; This function calls:
  2002 ;;		Nothing
  2003 ;; This function is called by:
  2004 ;;		_vfpfcnvrt
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           	psect	text13
  2009   001D5E                     __ptext13:
  2010                           	callstack 0
  2011   001D5E                     _abs:
  2012                           	callstack 26
  2013   001D5E  BE36               	btfsc	(abs@a+1)^0,7,c
  2014   001D60  EFB4  F00E         	goto	u1661
  2015   001D64  EFB6  F00E         	goto	u1660
  2016   001D68                     u1661:
  2017   001D68  EFBC  F00E         	goto	l1260
  2018   001D6C                     u1660:
  2019   001D6C  C035  F035         	movff	abs@a,?_abs
  2020   001D70  C036  F036         	movff	abs@a+1,?_abs+1
  2021   001D74  EFC8  F00E         	goto	l1263
  2022   001D78                     l1260:
  2023   001D78  C035  F037         	movff	abs@a,??_abs
  2024   001D7C  C036  F038         	movff	abs@a+1,??_abs+1
  2025   001D80  1E37               	comf	??_abs^0,f,c
  2026   001D82  1E38               	comf	(??_abs+1)^0,f,c
  2027   001D84  4A37               	infsnz	??_abs^0,f,c
  2028   001D86  2A38               	incf	(??_abs+1)^0,f,c
  2029   001D88  C037  F035         	movff	??_abs,?_abs
  2030   001D8C  C038  F036         	movff	??_abs+1,?_abs+1
  2031   001D90                     l1263:
  2032   001D90  0012               	return		;funcret
  2033   001D92                     __end_of_abs:
  2034                           	callstack 0
  2035                           
  2036 ;; *************** function ___awmod *****************
  2037 ;; Defined at:
  2038 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;  dividend        2    0[COMRAM] int 
  2041 ;;  divisor         2    2[COMRAM] int 
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;  sign            1    5[COMRAM] unsigned char 
  2044 ;;  counter         1    4[COMRAM] unsigned char 
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  2    0[COMRAM] int 
  2047 ;; Registers used:
  2048 ;;		wreg, status,2, status,0
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2054 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2055 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2057 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2058 ;;Total ram usage:        6 bytes
  2059 ;; Hardware stack levels used: 1
  2060 ;; This function calls:
  2061 ;;		Nothing
  2062 ;; This function is called by:
  2063 ;;		_vfpfcnvrt
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067                           	psect	text14
  2068   0016A4                     __ptext14:
  2069                           	callstack 0
  2070   0016A4                     ___awmod:
  2071                           	callstack 26
  2072   0016A4  0E00               	movlw	0
  2073   0016A6  6E34               	movwf	___awmod@sign^0,c
  2074   0016A8  BE30               	btfsc	(___awmod@dividend+1)^0,7,c
  2075   0016AA  EF5B  F00B         	goto	u1560
  2076   0016AE  EF59  F00B         	goto	u1561
  2077   0016B2                     u1561:
  2078   0016B2  EF61  F00B         	goto	l2478
  2079   0016B6                     u1560:
  2080   0016B6  6C2F               	negf	___awmod@dividend^0,c
  2081   0016B8  1E30               	comf	(___awmod@dividend+1)^0,f,c
  2082   0016BA  B0D8               	btfsc	status,0,c
  2083   0016BC  2A30               	incf	(___awmod@dividend+1)^0,f,c
  2084   0016BE  0E01               	movlw	1
  2085   0016C0  6E34               	movwf	___awmod@sign^0,c
  2086   0016C2                     l2478:
  2087   0016C2  BE32               	btfsc	(___awmod@divisor+1)^0,7,c
  2088   0016C4  EF68  F00B         	goto	u1570
  2089   0016C8  EF66  F00B         	goto	u1571
  2090   0016CC                     u1571:
  2091   0016CC  EF6C  F00B         	goto	l2482
  2092   0016D0                     u1570:
  2093   0016D0  6C31               	negf	___awmod@divisor^0,c
  2094   0016D2  1E32               	comf	(___awmod@divisor+1)^0,f,c
  2095   0016D4  B0D8               	btfsc	status,0,c
  2096   0016D6  2A32               	incf	(___awmod@divisor+1)^0,f,c
  2097   0016D8                     l2482:
  2098   0016D8  5031               	movf	___awmod@divisor^0,w,c
  2099   0016DA  1032               	iorwf	(___awmod@divisor+1)^0,w,c
  2100   0016DC  B4D8               	btfsc	status,2,c
  2101   0016DE  EF73  F00B         	goto	u1581
  2102   0016E2  EF75  F00B         	goto	u1580
  2103   0016E6                     u1581:
  2104   0016E6  EF99  F00B         	goto	l2498
  2105   0016EA                     u1580:
  2106   0016EA  0E01               	movlw	1
  2107   0016EC  6E33               	movwf	___awmod@counter^0,c
  2108   0016EE  EF7D  F00B         	goto	l2488
  2109   0016F2                     l2486:
  2110   0016F2  90D8               	bcf	status,0,c
  2111   0016F4  3631               	rlcf	___awmod@divisor^0,f,c
  2112   0016F6  3632               	rlcf	(___awmod@divisor+1)^0,f,c
  2113   0016F8  2A33               	incf	___awmod@counter^0,f,c
  2114   0016FA                     l2488:
  2115   0016FA  AE32               	btfss	(___awmod@divisor+1)^0,7,c
  2116   0016FC  EF82  F00B         	goto	u1591
  2117   001700  EF84  F00B         	goto	u1590
  2118   001704                     u1591:
  2119   001704  EF79  F00B         	goto	l2486
  2120   001708                     u1590:
  2121   001708                     l2490:
  2122   001708  5031               	movf	___awmod@divisor^0,w,c
  2123   00170A  5C2F               	subwf	___awmod@dividend^0,w,c
  2124   00170C  5032               	movf	(___awmod@divisor+1)^0,w,c
  2125   00170E  5830               	subwfb	(___awmod@dividend+1)^0,w,c
  2126   001710  A0D8               	btfss	status,0,c
  2127   001712  EF8D  F00B         	goto	u1601
  2128   001716  EF8F  F00B         	goto	u1600
  2129   00171A                     u1601:
  2130   00171A  EF93  F00B         	goto	l2494
  2131   00171E                     u1600:
  2132   00171E  5031               	movf	___awmod@divisor^0,w,c
  2133   001720  5E2F               	subwf	___awmod@dividend^0,f,c
  2134   001722  5032               	movf	(___awmod@divisor+1)^0,w,c
  2135   001724  5A30               	subwfb	(___awmod@dividend+1)^0,f,c
  2136   001726                     l2494:
  2137   001726  90D8               	bcf	status,0,c
  2138   001728  3232               	rrcf	(___awmod@divisor+1)^0,f,c
  2139   00172A  3231               	rrcf	___awmod@divisor^0,f,c
  2140   00172C  2E33               	decfsz	___awmod@counter^0,f,c
  2141   00172E  EF84  F00B         	goto	l2490
  2142   001732                     l2498:
  2143   001732  5034               	movf	___awmod@sign^0,w,c
  2144   001734  B4D8               	btfsc	status,2,c
  2145   001736  EF9F  F00B         	goto	u1611
  2146   00173A  EFA1  F00B         	goto	u1610
  2147   00173E                     u1611:
  2148   00173E  EFA5  F00B         	goto	l2502
  2149   001742                     u1610:
  2150   001742  6C2F               	negf	___awmod@dividend^0,c
  2151   001744  1E30               	comf	(___awmod@dividend+1)^0,f,c
  2152   001746  B0D8               	btfsc	status,0,c
  2153   001748  2A30               	incf	(___awmod@dividend+1)^0,f,c
  2154   00174A                     l2502:
  2155   00174A  C02F  F02F         	movff	___awmod@dividend,?___awmod
  2156   00174E  C030  F030         	movff	___awmod@dividend+1,?___awmod+1
  2157   001752  0012               	return		;funcret
  2158   001754                     __end_of___awmod:
  2159                           	callstack 0
  2160                           
  2161 ;; *************** function ___awdiv *****************
  2162 ;; Defined at:
  2163 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;  dividend        2    0[COMRAM] int 
  2166 ;;  divisor         2    2[COMRAM] int 
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;  quotient        2    6[COMRAM] int 
  2169 ;;  sign            1    5[COMRAM] unsigned char 
  2170 ;;  counter         1    4[COMRAM] unsigned char 
  2171 ;; Return value:  Size  Location     Type
  2172 ;;                  2    0[COMRAM] int 
  2173 ;; Registers used:
  2174 ;;		wreg, status,2, status,0
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2180 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2181 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2183 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2184 ;;Total ram usage:        8 bytes
  2185 ;; Hardware stack levels used: 1
  2186 ;; This function calls:
  2187 ;;		Nothing
  2188 ;; This function is called by:
  2189 ;;		_vfpfcnvrt
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193                           	psect	text15
  2194   0015E0                     __ptext15:
  2195                           	callstack 0
  2196   0015E0                     ___awdiv:
  2197                           	callstack 26
  2198   0015E0  0E00               	movlw	0
  2199   0015E2  6E34               	movwf	___awdiv@sign^0,c
  2200   0015E4  BE32               	btfsc	(___awdiv@divisor+1)^0,7,c
  2201   0015E6  EFF9  F00A         	goto	u1500
  2202   0015EA  EFF7  F00A         	goto	u1501
  2203   0015EE                     u1501:
  2204   0015EE  EFFF  F00A         	goto	l2434
  2205   0015F2                     u1500:
  2206   0015F2  6C31               	negf	___awdiv@divisor^0,c
  2207   0015F4  1E32               	comf	(___awdiv@divisor+1)^0,f,c
  2208   0015F6  B0D8               	btfsc	status,0,c
  2209   0015F8  2A32               	incf	(___awdiv@divisor+1)^0,f,c
  2210   0015FA  0E01               	movlw	1
  2211   0015FC  6E34               	movwf	___awdiv@sign^0,c
  2212   0015FE                     l2434:
  2213   0015FE  BE30               	btfsc	(___awdiv@dividend+1)^0,7,c
  2214   001600  EF06  F00B         	goto	u1510
  2215   001604  EF04  F00B         	goto	u1511
  2216   001608                     u1511:
  2217   001608  EF0C  F00B         	goto	l2440
  2218   00160C                     u1510:
  2219   00160C  6C2F               	negf	___awdiv@dividend^0,c
  2220   00160E  1E30               	comf	(___awdiv@dividend+1)^0,f,c
  2221   001610  B0D8               	btfsc	status,0,c
  2222   001612  2A30               	incf	(___awdiv@dividend+1)^0,f,c
  2223   001614  0E01               	movlw	1
  2224   001616  1A34               	xorwf	___awdiv@sign^0,f,c
  2225   001618                     l2440:
  2226   001618  0E00               	movlw	0
  2227   00161A  6E36               	movwf	(___awdiv@quotient+1)^0,c
  2228   00161C  0E00               	movlw	0
  2229   00161E  6E35               	movwf	___awdiv@quotient^0,c
  2230   001620  5031               	movf	___awdiv@divisor^0,w,c
  2231   001622  1032               	iorwf	(___awdiv@divisor+1)^0,w,c
  2232   001624  B4D8               	btfsc	status,2,c
  2233   001626  EF17  F00B         	goto	u1521
  2234   00162A  EF19  F00B         	goto	u1520
  2235   00162E                     u1521:
  2236   00162E  EF41  F00B         	goto	l2462
  2237   001632                     u1520:
  2238   001632  0E01               	movlw	1
  2239   001634  6E33               	movwf	___awdiv@counter^0,c
  2240   001636  EF21  F00B         	goto	l2448
  2241   00163A                     l2446:
  2242   00163A  90D8               	bcf	status,0,c
  2243   00163C  3631               	rlcf	___awdiv@divisor^0,f,c
  2244   00163E  3632               	rlcf	(___awdiv@divisor+1)^0,f,c
  2245   001640  2A33               	incf	___awdiv@counter^0,f,c
  2246   001642                     l2448:
  2247   001642  AE32               	btfss	(___awdiv@divisor+1)^0,7,c
  2248   001644  EF26  F00B         	goto	u1531
  2249   001648  EF28  F00B         	goto	u1530
  2250   00164C                     u1531:
  2251   00164C  EF1D  F00B         	goto	l2446
  2252   001650                     u1530:
  2253   001650                     l2450:
  2254   001650  90D8               	bcf	status,0,c
  2255   001652  3635               	rlcf	___awdiv@quotient^0,f,c
  2256   001654  3636               	rlcf	(___awdiv@quotient+1)^0,f,c
  2257   001656  5031               	movf	___awdiv@divisor^0,w,c
  2258   001658  5C2F               	subwf	___awdiv@dividend^0,w,c
  2259   00165A  5032               	movf	(___awdiv@divisor+1)^0,w,c
  2260   00165C  5830               	subwfb	(___awdiv@dividend+1)^0,w,c
  2261   00165E  A0D8               	btfss	status,0,c
  2262   001660  EF34  F00B         	goto	u1541
  2263   001664  EF36  F00B         	goto	u1540
  2264   001668                     u1541:
  2265   001668  EF3B  F00B         	goto	l2458
  2266   00166C                     u1540:
  2267   00166C  5031               	movf	___awdiv@divisor^0,w,c
  2268   00166E  5E2F               	subwf	___awdiv@dividend^0,f,c
  2269   001670  5032               	movf	(___awdiv@divisor+1)^0,w,c
  2270   001672  5A30               	subwfb	(___awdiv@dividend+1)^0,f,c
  2271   001674  8035               	bsf	___awdiv@quotient^0,0,c
  2272   001676                     l2458:
  2273   001676  90D8               	bcf	status,0,c
  2274   001678  3232               	rrcf	(___awdiv@divisor+1)^0,f,c
  2275   00167A  3231               	rrcf	___awdiv@divisor^0,f,c
  2276   00167C  2E33               	decfsz	___awdiv@counter^0,f,c
  2277   00167E  EF28  F00B         	goto	l2450
  2278   001682                     l2462:
  2279   001682  5034               	movf	___awdiv@sign^0,w,c
  2280   001684  B4D8               	btfsc	status,2,c
  2281   001686  EF47  F00B         	goto	u1551
  2282   00168A  EF49  F00B         	goto	u1550
  2283   00168E                     u1551:
  2284   00168E  EF4D  F00B         	goto	l2466
  2285   001692                     u1550:
  2286   001692  6C35               	negf	___awdiv@quotient^0,c
  2287   001694  1E36               	comf	(___awdiv@quotient+1)^0,f,c
  2288   001696  B0D8               	btfsc	status,0,c
  2289   001698  2A36               	incf	(___awdiv@quotient+1)^0,f,c
  2290   00169A                     l2466:
  2291   00169A  C035  F02F         	movff	___awdiv@quotient,?___awdiv
  2292   00169E  C036  F030         	movff	___awdiv@quotient+1,?___awdiv+1
  2293   0016A2  0012               	return		;funcret
  2294   0016A4                     __end_of___awdiv:
  2295                           	callstack 0
  2296                           
  2297 ;; *************** function _memset *****************
  2298 ;; Defined at:
  2299 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memset.c"
  2300 ;; Parameters:    Size  Location     Type
  2301 ;;  dest            1    0[COMRAM] PTR void 
  2302 ;;		 -> lcd_counter_txt(4), 
  2303 ;;  c               2    1[COMRAM] int 
  2304 ;;  n               2    3[COMRAM] unsigned int 
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;  p               1    5[COMRAM] PTR unsigned char 
  2307 ;;		 -> lcd_counter_txt(4), 
  2308 ;; Return value:  Size  Location     Type
  2309 ;;                  1    wreg      PTR void 
  2310 ;; Registers used:
  2311 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2312 ;; Tracked objects:
  2313 ;;		On entry : 0/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2317 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2318 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2320 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2321 ;;Total ram usage:        6 bytes
  2322 ;; Hardware stack levels used: 1
  2323 ;; This function calls:
  2324 ;;		Nothing
  2325 ;; This function is called by:
  2326 ;;		_convert_byte_to_string
  2327 ;;		_convert_short_to_string
  2328 ;;		_convert_int_to_string
  2329 ;; This function uses a non-reentrant model
  2330 ;;
  2331                           
  2332                           	psect	text16
  2333   001D92                     __ptext16:
  2334                           	callstack 0
  2335   001D92                     _memset:
  2336                           	callstack 29
  2337   001D92  C02F  F034         	movff	memset@dest,memset@p
  2338   001D96  EFD3  F00E         	goto	l2782
  2339   001D9A                     l2778:
  2340   001D9A  5034               	movf	memset@p^0,w,c
  2341   001D9C  6ED9               	movwf	fsr2l,c
  2342   001D9E  6ADA               	clrf	fsr2h,c
  2343   001DA0  C030  FFDF         	movff	memset@c,indf2
  2344   001DA4  2A34               	incf	memset@p^0,f,c
  2345   001DA6                     l2782:
  2346   001DA6  0632               	decf	memset@n^0,f,c
  2347   001DA8  A0D8               	btfss	status,0,c
  2348   001DAA  0633               	decf	(memset@n+1)^0,f,c
  2349   001DAC  2832               	incf	memset@n^0,w,c
  2350   001DAE  E106               	bnz	u1931
  2351   001DB0  2833               	incf	(memset@n+1)^0,w,c
  2352   001DB2  A4D8               	btfss	status,2,c
  2353   001DB4  EFDE  F00E         	goto	u1931
  2354   001DB8  EFE0  F00E         	goto	u1930
  2355   001DBC                     u1931:
  2356   001DBC  EFCD  F00E         	goto	l2778
  2357   001DC0                     u1930:
  2358   001DC0  0012               	return		;funcret
  2359   001DC2                     __end_of_memset:
  2360                           	callstack 0
  2361                           
  2362 ;; *************** function _Application *****************
  2363 ;; Defined at:
  2364 ;;		line 40 in file "application.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;		None
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;		None
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  1    wreg      void 
  2371 ;; Registers used:
  2372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2382 ;;Total ram usage:        0 bytes
  2383 ;; Hardware stack levels used: 1
  2384 ;; Hardware stack levels required when called: 5
  2385 ;; This function calls:
  2386 ;;		_ecu_layer_initialize
  2387 ;; This function is called by:
  2388 ;;		_main
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392                           	psect	text17
  2393   001E3A                     __ptext17:
  2394                           	callstack 0
  2395   001E3A                     _Application:
  2396                           	callstack 25
  2397   001E3A                     
  2398                           ;application.c: 42:     ecu_layer_initialize();
  2399   001E3A  EC06  F00F         	call	_ecu_layer_initialize	;wreg free
  2400   001E3E  0012               	return		;funcret
  2401   001E40                     __end_of_Application:
  2402                           	callstack 0
  2403                           
  2404 ;; *************** function _ecu_layer_initialize *****************
  2405 ;; Defined at:
  2406 ;;		line 82 in file "ECU_Layer/ecu_layer_init.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;		None
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;		None
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  1    wreg      void 
  2413 ;; Registers used:
  2414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2424 ;;Total ram usage:        0 bytes
  2425 ;; Hardware stack levels used: 1
  2426 ;; Hardware stack levels required when called: 4
  2427 ;; This function calls:
  2428 ;;		_lcd_4bit_initialize
  2429 ;;		_lcd_8bit_initialize
  2430 ;; This function is called by:
  2431 ;;		_Application
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           	psect	text18
  2436   001E0C                     __ptext18:
  2437                           	callstack 0
  2438   001E0C                     _ecu_layer_initialize:
  2439                           	callstack 25
  2440   001E0C                     
  2441                           ;ECU_Layer/ecu_layer_init.c: 84:     ret = lcd_4bit_initialize(&lcd_1);
  2442   001E0C  0E29               	movlw	low _lcd_1
  2443   001E0E  6E3D               	movwf	lcd_4bit_initialize@lcd^0,c
  2444   001E10  EC7D  F00A         	call	_lcd_4bit_initialize	;wreg free
  2445   001E14  6E75               	movwf	_ret^0,c
  2446                           
  2447                           ;ECU_Layer/ecu_layer_init.c: 85:     ret = lcd_8bit_initialize(&lcd_2);
  2448   001E16  0E1F               	movlw	low _lcd_2
  2449   001E18  6E3E               	movwf	lcd_8bit_initialize@lcd^0,c
  2450   001E1A  EC0A  F00A         	call	_lcd_8bit_initialize	;wreg free
  2451   001E1E  6E75               	movwf	_ret^0,c
  2452   001E20  0012               	return		;funcret
  2453   001E22                     __end_of_ecu_layer_initialize:
  2454                           	callstack 0
  2455                           
  2456 ;; *************** function _lcd_8bit_initialize *****************
  2457 ;; Defined at:
  2458 ;;		line 219 in file "ECU_Layer/chr_lcd/ecu_chr_lcd.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  lcd             1   15[COMRAM] PTR const struct .
  2461 ;;		 -> lcd_2(10), 
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;  ret             1   18[COMRAM] unsigned char 
  2464 ;;  l_data_pin_c    1   17[COMRAM] unsigned char 
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  1    wreg      unsigned char 
  2467 ;; Registers used:
  2468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2474 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2475 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2476 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2477 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2478 ;;Total ram usage:        4 bytes
  2479 ;; Hardware stack levels used: 1
  2480 ;; Hardware stack levels required when called: 3
  2481 ;; This function calls:
  2482 ;;		_gpio_pin_intialize
  2483 ;;		_lcd_8bit_send_command
  2484 ;; This function is called by:
  2485 ;;		_ecu_layer_initialize
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489                           	psect	text19
  2490   001414                     __ptext19:
  2491                           	callstack 0
  2492   001414                     _lcd_8bit_initialize:
  2493                           	callstack 25
  2494   001414                     
  2495                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 221:     uint8 l_data_pin_counter = 0X00;
  2496   001414  0E00               	movlw	0
  2497   001416  6E40               	movwf	lcd_8bit_initialize@l_data_pin_counter^0,c
  2498                           
  2499                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 222:     if (((void*)0) == lcd)
  2500   001418  503E               	movf	lcd_8bit_initialize@lcd^0,w,c
  2501   00141A  A4D8               	btfss	status,2,c
  2502   00141C  EF12  F00A         	goto	u1851
  2503   001420  EF14  F00A         	goto	u1850
  2504   001424                     u1851:
  2505   001424  EF18  F00A         	goto	l2668
  2506   001428                     u1850:
  2507   001428                     
  2508                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 223:     {;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 224:      
      +                             ret = (Std_ReturnType)0x00;
  2509   001428  0E00               	movlw	0
  2510   00142A  6E41               	movwf	lcd_8bit_initialize@ret^0,c
  2511                           
  2512                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 225:     }
  2513   00142C  EF7B  F00A         	goto	l2704
  2514   001430                     l2668:
  2515                           
  2516                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 227:     {;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 228:      
      +                             ret = gpio_pin_intialize(&(lcd->lcd_rs));
  2517   001430  C03E  F037         	movff	lcd_8bit_initialize@lcd,gpio_pin_intialize@_pin_config
  2518   001434  EC99  F00D         	call	_gpio_pin_intialize	;wreg free
  2519   001438  6E41               	movwf	lcd_8bit_initialize@ret^0,c
  2520                           
  2521                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 229:         ret = gpio_pin_intialize(&(lcd->lcd_en));
  2522   00143A  283E               	incf	lcd_8bit_initialize@lcd^0,w,c
  2523   00143C  6E37               	movwf	gpio_pin_intialize@_pin_config^0,c
  2524   00143E  EC99  F00D         	call	_gpio_pin_intialize	;wreg free
  2525   001442  6E41               	movwf	lcd_8bit_initialize@ret^0,c
  2526   001444                     
  2527                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 230:         for (l_data_pin_counter = 0X00 ; l_data_p
      +                          in_counter<8 ; l_data_pin_counter++)
  2528   001444  0E00               	movlw	0
  2529   001446  6E40               	movwf	lcd_8bit_initialize@l_data_pin_counter^0,c
  2530   001448                     l2676:
  2531   001448  503E               	movf	lcd_8bit_initialize@lcd^0,w,c
  2532   00144A  2440               	addwf	lcd_8bit_initialize@l_data_pin_counter^0,w,c
  2533   00144C  0F02               	addlw	2
  2534   00144E  6E37               	movwf	gpio_pin_intialize@_pin_config^0,c
  2535   001450  EC99  F00D         	call	_gpio_pin_intialize	;wreg free
  2536   001454                     
  2537                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 233:         }
  2538   001454  2A40               	incf	lcd_8bit_initialize@l_data_pin_counter^0,f,c
  2539   001456  0E07               	movlw	7
  2540   001458  6440               	cpfsgt	lcd_8bit_initialize@l_data_pin_counter^0,c
  2541   00145A  EF31  F00A         	goto	u1861
  2542   00145E  EF33  F00A         	goto	u1860
  2543   001462                     u1861:
  2544   001462  EF24  F00A         	goto	l2676
  2545   001466                     u1860:
  2546   001466                     
  2547                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 234:         _delay((unsigned long)((20)*(8000000UL/40
      +                          00.0)));
  2548   001466  0E34               	movlw	52
  2549   001468  6E3F               	movwf	??_lcd_8bit_initialize^0,c
  2550   00146A  0EF2               	movlw	242
  2551   00146C                     u2497:
  2552   00146C  2EE8               	decfsz	wreg,f,c
  2553   00146E  D7FE               	bra	u2497
  2554   001470  2E3F               	decfsz	??_lcd_8bit_initialize^0,f,c
  2555   001472  D7FC               	bra	u2497
  2556   001474  C03E  F038         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2557   001478  0E38               	movlw	56
  2558   00147A  6E39               	movwf	lcd_8bit_send_command@command^0,c
  2559   00147C  EC27  F00D         	call	_lcd_8bit_send_command	;wreg free
  2560   001480                     
  2561                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 236:         _delay((unsigned long)((5)*(8000000UL/400
      +                          0.0)));
  2562   001480  0E0D               	movlw	13
  2563   001482  6E3F               	movwf	??_lcd_8bit_initialize^0,c
  2564   001484  0EFC               	movlw	252
  2565   001486                     u2507:
  2566   001486  2EE8               	decfsz	wreg,f,c
  2567   001488  D7FE               	bra	u2507
  2568   00148A  2E3F               	decfsz	??_lcd_8bit_initialize^0,f,c
  2569   00148C  D7FC               	bra	u2507
  2570   00148E  C03E  F038         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2571   001492  0E38               	movlw	56
  2572   001494  6E39               	movwf	lcd_8bit_send_command@command^0,c
  2573   001496  EC27  F00D         	call	_lcd_8bit_send_command	;wreg free
  2574   00149A                     
  2575                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 238:         _delay((unsigned long)((150)*(8000000UL/4
      +                          000000.0)));
  2576   00149A  0E64               	movlw	100
  2577   00149C                     u2517:
  2578   00149C  2EE8               	decfsz	wreg,f,c
  2579   00149E  D7FE               	bra	u2517
  2580   0014A0  C03E  F038         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2581   0014A4  0E38               	movlw	56
  2582   0014A6  6E39               	movwf	lcd_8bit_send_command@command^0,c
  2583   0014A8  EC27  F00D         	call	_lcd_8bit_send_command	;wreg free
  2584   0014AC  C03E  F038         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2585   0014B0  0E01               	movlw	1
  2586   0014B2  6E39               	movwf	lcd_8bit_send_command@command^0,c
  2587   0014B4  EC27  F00D         	call	_lcd_8bit_send_command	;wreg free
  2588   0014B8  C03E  F038         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2589   0014BC  0E02               	movlw	2
  2590   0014BE  6E39               	movwf	lcd_8bit_send_command@command^0,c
  2591   0014C0  EC27  F00D         	call	_lcd_8bit_send_command	;wreg free
  2592   0014C4  C03E  F038         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2593   0014C8  0E06               	movlw	6
  2594   0014CA  6E39               	movwf	lcd_8bit_send_command@command^0,c
  2595   0014CC  EC27  F00D         	call	_lcd_8bit_send_command	;wreg free
  2596   0014D0  C03E  F038         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2597   0014D4  0E0C               	movlw	12
  2598   0014D6  6E39               	movwf	lcd_8bit_send_command@command^0,c
  2599   0014D8  EC27  F00D         	call	_lcd_8bit_send_command	;wreg free
  2600   0014DC  C03E  F038         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2601   0014E0  0E38               	movlw	56
  2602   0014E2  6E39               	movwf	lcd_8bit_send_command@command^0,c
  2603   0014E4  EC27  F00D         	call	_lcd_8bit_send_command	;wreg free
  2604   0014E8                     
  2605                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 245:         ret = lcd_8bit_send_command(lcd, 0X80);
  2606   0014E8  C03E  F038         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2607   0014EC  0E80               	movlw	128
  2608   0014EE  6E39               	movwf	lcd_8bit_send_command@command^0,c
  2609   0014F0  EC27  F00D         	call	_lcd_8bit_send_command	;wreg free
  2610   0014F4  6E41               	movwf	lcd_8bit_initialize@ret^0,c
  2611   0014F6                     l2704:
  2612                           
  2613                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 247:     return ret;
  2614   0014F6  5041               	movf	lcd_8bit_initialize@ret^0,w,c
  2615   0014F8  0012               	return		;funcret
  2616   0014FA                     __end_of_lcd_8bit_initialize:
  2617                           	callstack 0
  2618                           
  2619 ;; *************** function _lcd_8bit_send_command *****************
  2620 ;; Defined at:
  2621 ;;		line 257 in file "ECU_Layer/chr_lcd/ecu_chr_lcd.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;  lcd             1    9[COMRAM] PTR const struct .
  2624 ;;		 -> lcd_2(10), 
  2625 ;;  command         1   10[COMRAM] unsigned char 
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;  l_pin_counte    1   14[COMRAM] unsigned char 
  2628 ;;  ret             1   13[COMRAM] unsigned char 
  2629 ;; Return value:  Size  Location     Type
  2630 ;;                  1    wreg      unsigned char 
  2631 ;; Registers used:
  2632 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2633 ;; Tracked objects:
  2634 ;;		On entry : 0/0
  2635 ;;		On exit  : 0/0
  2636 ;;		Unchanged: 0/0
  2637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2638 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2639 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2640 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2641 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2642 ;;Total ram usage:        6 bytes
  2643 ;; Hardware stack levels used: 1
  2644 ;; Hardware stack levels required when called: 2
  2645 ;; This function calls:
  2646 ;;		_gpio_pin_write_logic
  2647 ;;		_lcd_send_8bits_enable_signal
  2648 ;; This function is called by:
  2649 ;;		_lcd_8bit_initialize
  2650 ;;		_lcd_8bit_set_cursor
  2651 ;;		_lcd_8bit_send_custom_char
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655                           	psect	text20
  2656   001A4E                     __ptext20:
  2657                           	callstack 0
  2658   001A4E                     _lcd_8bit_send_command:
  2659                           	callstack 26
  2660   001A4E                     
  2661                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 259:     uint8 l_pin_counter = 0X00;
  2662   001A4E  0E00               	movlw	0
  2663   001A50  6E3D               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
  2664                           
  2665                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 260:     if (((void*)0) == lcd)
  2666   001A52  5038               	movf	lcd_8bit_send_command@lcd^0,w,c
  2667   001A54  A4D8               	btfss	status,2,c
  2668   001A56  EF2F  F00D         	goto	u1701
  2669   001A5A  EF31  F00D         	goto	u1700
  2670   001A5E                     u1701:
  2671   001A5E  EF35  F00D         	goto	l2550
  2672   001A62                     u1700:
  2673   001A62                     
  2674                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 261:     {;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 262:      
      +                             ret = (Std_ReturnType)0x00;
  2675   001A62  0E00               	movlw	0
  2676   001A64  6E3C               	movwf	lcd_8bit_send_command@ret^0,c
  2677                           
  2678                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 263:     }
  2679   001A66  EF60  F00D         	goto	l2566
  2680   001A6A                     l2550:
  2681   001A6A  C038  F02F         	movff	lcd_8bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  2682   001A6E  0E00               	movlw	0
  2683   001A70  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2684   001A72  EC82  F009         	call	_gpio_pin_write_logic	;wreg free
  2685   001A76                     
  2686                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 267:         for (l_pin_counter = 0X00 ; l_pin_counter
      +                          <8 ; l_pin_counter++)
  2687   001A76  0E00               	movlw	0
  2688   001A78  6E3D               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
  2689   001A7A                     l2558:
  2690                           
  2691                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 268:         {;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 269:  
      +                                   ret = gpio_pin_write_logic(&(lcd->lcd_data[l_pin_counter]), ((command >> l_pin_
      +                          counter) & (uint8)0x01));
  2692   001A7A  5038               	movf	lcd_8bit_send_command@lcd^0,w,c
  2693   001A7C  243D               	addwf	lcd_8bit_send_command@l_pin_counter^0,w,c
  2694   001A7E  0F02               	addlw	2
  2695   001A80  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2696   001A82  C03D  F03A         	movff	lcd_8bit_send_command@l_pin_counter,??_lcd_8bit_send_command
  2697   001A86  C039  F03B         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+1
  2698   001A8A  2A3A               	incf	??_lcd_8bit_send_command^0,f,c
  2699   001A8C  EF4A  F00D         	goto	u1714
  2700   001A90                     u1715:
  2701   001A90  90D8               	bcf	status,0,c
  2702   001A92  323B               	rrcf	(??_lcd_8bit_send_command+1)^0,f,c
  2703   001A94                     u1714:
  2704   001A94  2E3A               	decfsz	??_lcd_8bit_send_command^0,f,c
  2705   001A96  EF48  F00D         	goto	u1715
  2706   001A9A  503B               	movf	(??_lcd_8bit_send_command+1)^0,w,c
  2707   001A9C  0B01               	andlw	1
  2708   001A9E  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2709   001AA0  EC82  F009         	call	_gpio_pin_write_logic	;wreg free
  2710   001AA4  6E3C               	movwf	lcd_8bit_send_command@ret^0,c
  2711   001AA6                     
  2712                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 270:         }
  2713   001AA6  2A3D               	incf	lcd_8bit_send_command@l_pin_counter^0,f,c
  2714   001AA8  0E07               	movlw	7
  2715   001AAA  643D               	cpfsgt	lcd_8bit_send_command@l_pin_counter^0,c
  2716   001AAC  EF5A  F00D         	goto	u1721
  2717   001AB0  EF5C  F00D         	goto	u1720
  2718   001AB4                     u1721:
  2719   001AB4  EF3D  F00D         	goto	l2558
  2720   001AB8                     u1720:
  2721   001AB8                     
  2722                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 271:         lcd_send_8bits_enable_signal(lcd);
  2723   001AB8  C038  F037         	movff	lcd_8bit_send_command@lcd,lcd_send_8bits_enable_signal@lcd
  2724   001ABC  EC7A  F00E         	call	_lcd_send_8bits_enable_signal	;wreg free
  2725   001AC0                     l2566:
  2726                           
  2727                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 273:     return ret;
  2728   001AC0  503C               	movf	lcd_8bit_send_command@ret^0,w,c
  2729   001AC2  0012               	return		;funcret
  2730   001AC4                     __end_of_lcd_8bit_send_command:
  2731                           	callstack 0
  2732                           
  2733 ;; *************** function _lcd_send_8bits_enable_signal *****************
  2734 ;; Defined at:
  2735 ;;		line 522 in file "ECU_Layer/chr_lcd/ecu_chr_lcd.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;  lcd             1    8[COMRAM] PTR const struct .
  2738 ;;		 -> lcd_2(10), 
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;  ret             1    0        unsigned char 
  2741 ;; Return value:  Size  Location     Type
  2742 ;;                  1    wreg      unsigned char 
  2743 ;; Registers used:
  2744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2750 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2753 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2754 ;;Total ram usage:        1 bytes
  2755 ;; Hardware stack levels used: 1
  2756 ;; Hardware stack levels required when called: 1
  2757 ;; This function calls:
  2758 ;;		_gpio_pin_write_logic
  2759 ;; This function is called by:
  2760 ;;		_lcd_8bit_send_command
  2761 ;;		_lcd_8bit_send_char_data
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765                           	psect	text21
  2766   001CF4                     __ptext21:
  2767                           	callstack 0
  2768   001CF4                     _lcd_send_8bits_enable_signal:
  2769                           	callstack 26
  2770   001CF4                     
  2771                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 524:     if (((void*)0) == lcd)
  2772   001CF4  5037               	movf	lcd_send_8bits_enable_signal@lcd^0,w,c
  2773   001CF6  A4D8               	btfss	status,2,c
  2774   001CF8  EF80  F00E         	goto	u1491
  2775   001CFC  EF82  F00E         	goto	u1490
  2776   001D00                     u1491:
  2777   001D00  EF84  F00E         	goto	l2418
  2778   001D04                     u1490:
  2779   001D04                     
  2780                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 527:     }
  2781   001D04  EF94  F00E         	goto	l196
  2782   001D08                     l2418:
  2783   001D08  2837               	incf	lcd_send_8bits_enable_signal@lcd^0,w,c
  2784   001D0A  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2785   001D0C  0E01               	movlw	1
  2786   001D0E  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2787   001D10  EC82  F009         	call	_gpio_pin_write_logic	;wreg free
  2788   001D14                     
  2789                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 531:         _delay((unsigned long)((5)*(8000000UL/400
      +                          0000.0)));
  2790   001D14  0E03               	movlw	3
  2791   001D16                     u2527:
  2792   001D16  2EE8               	decfsz	wreg,f,c
  2793   001D18  D7FE               	bra	u2527
  2794   001D1A  0000               	nop	
  2795   001D1C  2837               	incf	lcd_send_8bits_enable_signal@lcd^0,w,c
  2796   001D1E  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2797   001D20  0E00               	movlw	0
  2798   001D22  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2799   001D24  EC82  F009         	call	_gpio_pin_write_logic	;wreg free
  2800   001D28                     l196:
  2801   001D28  0012               	return		;funcret
  2802   001D2A                     __end_of_lcd_send_8bits_enable_signal:
  2803                           	callstack 0
  2804                           
  2805 ;; *************** function _lcd_4bit_initialize *****************
  2806 ;; Defined at:
  2807 ;;		line 23 in file "ECU_Layer/chr_lcd/ecu_chr_lcd.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;  lcd             1   14[COMRAM] PTR const struct .
  2810 ;;		 -> lcd_1(6), 
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;  ret             1   17[COMRAM] unsigned char 
  2813 ;;  l_data_pin_c    1   16[COMRAM] unsigned char 
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  1    wreg      unsigned char 
  2816 ;; Registers used:
  2817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2823 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2824 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2825 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2826 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2827 ;;Total ram usage:        4 bytes
  2828 ;; Hardware stack levels used: 1
  2829 ;; Hardware stack levels required when called: 3
  2830 ;; This function calls:
  2831 ;;		_gpio_pin_intialize
  2832 ;;		_lcd_4bit_send_command
  2833 ;; This function is called by:
  2834 ;;		_ecu_layer_initialize
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838                           	psect	text22
  2839   0014FA                     __ptext22:
  2840                           	callstack 0
  2841   0014FA                     _lcd_4bit_initialize:
  2842                           	callstack 25
  2843   0014FA                     
  2844                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 25:     uint8 l_data_pin_counter = 0X00;
  2845   0014FA  0E00               	movlw	0
  2846   0014FC  6E3F               	movwf	lcd_4bit_initialize@l_data_pin_counter^0,c
  2847                           
  2848                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 26:     if (((void*)0) == lcd)
  2849   0014FE  503D               	movf	lcd_4bit_initialize@lcd^0,w,c
  2850   001500  A4D8               	btfss	status,2,c
  2851   001502  EF85  F00A         	goto	u1831
  2852   001506  EF87  F00A         	goto	u1830
  2853   00150A                     u1831:
  2854   00150A  EF8B  F00A         	goto	l2624
  2855   00150E                     u1830:
  2856   00150E                     
  2857                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 27:     {;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 28:        
      +                           ret = (Std_ReturnType)0x00;
  2858   00150E  0E00               	movlw	0
  2859   001510  6E40               	movwf	lcd_4bit_initialize@ret^0,c
  2860                           
  2861                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 29:     }
  2862   001512  EFEE  F00A         	goto	l2660
  2863   001516                     l2624:
  2864                           
  2865                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 31:     {;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 32:        
      +                           ret = gpio_pin_intialize(&(lcd->lcd_rs));
  2866   001516  C03D  F037         	movff	lcd_4bit_initialize@lcd,gpio_pin_intialize@_pin_config
  2867   00151A  EC99  F00D         	call	_gpio_pin_intialize	;wreg free
  2868   00151E  6E40               	movwf	lcd_4bit_initialize@ret^0,c
  2869                           
  2870                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 33:         ret = gpio_pin_intialize(&(lcd->lcd_en));
  2871   001520  283D               	incf	lcd_4bit_initialize@lcd^0,w,c
  2872   001522  6E37               	movwf	gpio_pin_intialize@_pin_config^0,c
  2873   001524  EC99  F00D         	call	_gpio_pin_intialize	;wreg free
  2874   001528  6E40               	movwf	lcd_4bit_initialize@ret^0,c
  2875   00152A                     
  2876                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 34:         for (l_data_pin_counter = 0X00 ; l_data_pi
      +                          n_counter<4 ; l_data_pin_counter++)
  2877   00152A  0E00               	movlw	0
  2878   00152C  6E3F               	movwf	lcd_4bit_initialize@l_data_pin_counter^0,c
  2879   00152E                     l2632:
  2880   00152E  503D               	movf	lcd_4bit_initialize@lcd^0,w,c
  2881   001530  243F               	addwf	lcd_4bit_initialize@l_data_pin_counter^0,w,c
  2882   001532  0F02               	addlw	2
  2883   001534  6E37               	movwf	gpio_pin_intialize@_pin_config^0,c
  2884   001536  EC99  F00D         	call	_gpio_pin_intialize	;wreg free
  2885   00153A                     
  2886                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 37:         }
  2887   00153A  2A3F               	incf	lcd_4bit_initialize@l_data_pin_counter^0,f,c
  2888   00153C  0E03               	movlw	3
  2889   00153E  643F               	cpfsgt	lcd_4bit_initialize@l_data_pin_counter^0,c
  2890   001540  EFA4  F00A         	goto	u1841
  2891   001544  EFA6  F00A         	goto	u1840
  2892   001548                     u1841:
  2893   001548  EF97  F00A         	goto	l2632
  2894   00154C                     u1840:
  2895   00154C                     
  2896                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 38:         _delay((unsigned long)((20)*(8000000UL/400
      +                          0.0)));
  2897   00154C  0E34               	movlw	52
  2898   00154E  6E3E               	movwf	??_lcd_4bit_initialize^0,c
  2899   001550  0EF2               	movlw	242
  2900   001552                     u2537:
  2901   001552  2EE8               	decfsz	wreg,f,c
  2902   001554  D7FE               	bra	u2537
  2903   001556  2E3E               	decfsz	??_lcd_4bit_initialize^0,f,c
  2904   001558  D7FC               	bra	u2537
  2905   00155A  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2906   00155E  0E38               	movlw	56
  2907   001560  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  2908   001562  ECC8  F00D         	call	_lcd_4bit_send_command	;wreg free
  2909   001566                     
  2910                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 40:         _delay((unsigned long)((5)*(8000000UL/4000
      +                          .0)));
  2911   001566  0E0D               	movlw	13
  2912   001568  6E3E               	movwf	??_lcd_4bit_initialize^0,c
  2913   00156A  0EFC               	movlw	252
  2914   00156C                     u2547:
  2915   00156C  2EE8               	decfsz	wreg,f,c
  2916   00156E  D7FE               	bra	u2547
  2917   001570  2E3E               	decfsz	??_lcd_4bit_initialize^0,f,c
  2918   001572  D7FC               	bra	u2547
  2919   001574  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2920   001578  0E38               	movlw	56
  2921   00157A  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  2922   00157C  ECC8  F00D         	call	_lcd_4bit_send_command	;wreg free
  2923   001580                     
  2924                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 42:         _delay((unsigned long)((150)*(8000000UL/40
      +                          00000.0)));
  2925   001580  0E64               	movlw	100
  2926   001582                     u2557:
  2927   001582  2EE8               	decfsz	wreg,f,c
  2928   001584  D7FE               	bra	u2557
  2929   001586  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2930   00158A  0E38               	movlw	56
  2931   00158C  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  2932   00158E  ECC8  F00D         	call	_lcd_4bit_send_command	;wreg free
  2933   001592  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2934   001596  0E01               	movlw	1
  2935   001598  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  2936   00159A  ECC8  F00D         	call	_lcd_4bit_send_command	;wreg free
  2937   00159E  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2938   0015A2  0E02               	movlw	2
  2939   0015A4  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  2940   0015A6  ECC8  F00D         	call	_lcd_4bit_send_command	;wreg free
  2941   0015AA  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2942   0015AE  0E06               	movlw	6
  2943   0015B0  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  2944   0015B2  ECC8  F00D         	call	_lcd_4bit_send_command	;wreg free
  2945   0015B6  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2946   0015BA  0E0C               	movlw	12
  2947   0015BC  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  2948   0015BE  ECC8  F00D         	call	_lcd_4bit_send_command	;wreg free
  2949   0015C2  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2950   0015C6  0E28               	movlw	40
  2951   0015C8  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  2952   0015CA  ECC8  F00D         	call	_lcd_4bit_send_command	;wreg free
  2953   0015CE                     
  2954                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 49:         ret = lcd_4bit_send_command(lcd, 0X80);
  2955   0015CE  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2956   0015D2  0E80               	movlw	128
  2957   0015D4  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  2958   0015D6  ECC8  F00D         	call	_lcd_4bit_send_command	;wreg free
  2959   0015DA  6E40               	movwf	lcd_4bit_initialize@ret^0,c
  2960   0015DC                     l2660:
  2961                           
  2962                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 52:     return ret;
  2963   0015DC  5040               	movf	lcd_4bit_initialize@ret^0,w,c
  2964   0015DE  0012               	return		;funcret
  2965   0015E0                     __end_of_lcd_4bit_initialize:
  2966                           	callstack 0
  2967                           
  2968 ;; *************** function _lcd_4bit_send_command *****************
  2969 ;; Defined at:
  2970 ;;		line 62 in file "ECU_Layer/chr_lcd/ecu_chr_lcd.c"
  2971 ;; Parameters:    Size  Location     Type
  2972 ;;  lcd             1   11[COMRAM] PTR const struct .
  2973 ;;		 -> lcd_1(6), 
  2974 ;;  command         1   12[COMRAM] unsigned char 
  2975 ;; Auto vars:     Size  Location     Type
  2976 ;;  ret             1   13[COMRAM] unsigned char 
  2977 ;; Return value:  Size  Location     Type
  2978 ;;                  1    wreg      unsigned char 
  2979 ;; Registers used:
  2980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2981 ;; Tracked objects:
  2982 ;;		On entry : 0/0
  2983 ;;		On exit  : 0/0
  2984 ;;		Unchanged: 0/0
  2985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2986 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2987 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2989 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2990 ;;Total ram usage:        3 bytes
  2991 ;; Hardware stack levels used: 1
  2992 ;; Hardware stack levels required when called: 2
  2993 ;; This function calls:
  2994 ;;		_gpio_pin_write_logic
  2995 ;;		_lcd_send_4bits
  2996 ;;		_lcd_send_4bits_enable_signal
  2997 ;; This function is called by:
  2998 ;;		_lcd_4bit_initialize
  2999 ;;		_lcd_4bit_send_custom_char
  3000 ;;		_lcd_4bit_set_cursor
  3001 ;; This function uses a non-reentrant model
  3002 ;;
  3003                           
  3004                           	psect	text23
  3005   001B90                     __ptext23:
  3006                           	callstack 0
  3007   001B90                     _lcd_4bit_send_command:
  3008                           	callstack 25
  3009   001B90                     
  3010                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 64:     if (((void*)0) == lcd)
  3011   001B90  503A               	movf	lcd_4bit_send_command@lcd^0,w,c
  3012   001B92  A4D8               	btfss	status,2,c
  3013   001B94  EFCE  F00D         	goto	u1691
  3014   001B98  EFD0  F00D         	goto	u1690
  3015   001B9C                     u1691:
  3016   001B9C  EFD4  F00D         	goto	l2540
  3017   001BA0                     u1690:
  3018   001BA0                     
  3019                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 65:     {;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 66:        
      +                           ret = (Std_ReturnType)0x00;
  3020   001BA0  0E00               	movlw	0
  3021   001BA2  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  3022                           
  3023                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 67:     }
  3024   001BA4  EFF4  F00D         	goto	l2542
  3025   001BA8                     l2540:
  3026                           
  3027                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 69:     {;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 70:        
      +                           ret = gpio_pin_write_logic(&(lcd->lcd_rs), GPIO_LOW);
  3028   001BA8  C03A  F02F         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  3029   001BAC  0E00               	movlw	0
  3030   001BAE  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  3031   001BB0  EC82  F009         	call	_gpio_pin_write_logic	;wreg free
  3032   001BB4  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  3033                           
  3034                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 72:         ret = lcd_send_4bits(lcd, (command >> 4));
  3035   001BB6  C03A  F037         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  3036   001BBA  383B               	swapf	lcd_4bit_send_command@command^0,w,c
  3037   001BBC  0B0F               	andlw	15
  3038   001BBE  6E38               	movwf	lcd_send_4bits@_data_command^0,c
  3039   001BC0  EC62  F00D         	call	_lcd_send_4bits	;wreg free
  3040   001BC4  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  3041                           
  3042                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 73:         ret = lcd_send_4bits_enable_signal(lcd);
  3043   001BC6  C03A  F037         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits_enable_signal@lcd
  3044   001BCA  EC5B  F00E         	call	_lcd_send_4bits_enable_signal	;wreg free
  3045   001BCE  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  3046                           
  3047                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 74:         ret = lcd_send_4bits(lcd, command);
  3048   001BD0  C03A  F037         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  3049   001BD4  C03B  F038         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
  3050   001BD8  EC62  F00D         	call	_lcd_send_4bits	;wreg free
  3051   001BDC  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  3052                           
  3053                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 75:         ret = lcd_send_4bits_enable_signal(lcd);
  3054   001BDE  C03A  F037         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits_enable_signal@lcd
  3055   001BE2  EC5B  F00E         	call	_lcd_send_4bits_enable_signal	;wreg free
  3056   001BE6  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  3057   001BE8                     l2542:
  3058                           
  3059                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 78:     return ret;
  3060   001BE8  503C               	movf	lcd_4bit_send_command@ret^0,w,c
  3061   001BEA  0012               	return		;funcret
  3062   001BEC                     __end_of_lcd_4bit_send_command:
  3063                           	callstack 0
  3064                           
  3065 ;; *************** function _lcd_send_4bits_enable_signal *****************
  3066 ;; Defined at:
  3067 ;;		line 502 in file "ECU_Layer/chr_lcd/ecu_chr_lcd.c"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;  lcd             1    8[COMRAM] PTR const struct .
  3070 ;;		 -> lcd_1(6), 
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;  ret             1    9[COMRAM] unsigned char 
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  1    wreg      unsigned char 
  3075 ;; Registers used:
  3076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3082 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3083 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3085 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3086 ;;Total ram usage:        2 bytes
  3087 ;; Hardware stack levels used: 1
  3088 ;; Hardware stack levels required when called: 1
  3089 ;; This function calls:
  3090 ;;		_gpio_pin_write_logic
  3091 ;; This function is called by:
  3092 ;;		_lcd_4bit_send_command
  3093 ;;		_lcd_4bit_send_char_data
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           	psect	text24
  3098   001CB6                     __ptext24:
  3099                           	callstack 0
  3100   001CB6                     _lcd_send_4bits_enable_signal:
  3101                           	callstack 25
  3102   001CB6                     
  3103                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 504:     if (((void*)0) == lcd)
  3104   001CB6  5037               	movf	lcd_send_4bits_enable_signal@lcd^0,w,c
  3105   001CB8  A4D8               	btfss	status,2,c
  3106   001CBA  EF61  F00E         	goto	u1481
  3107   001CBE  EF63  F00E         	goto	u1480
  3108   001CC2                     u1481:
  3109   001CC2  EF67  F00E         	goto	l2404
  3110   001CC6                     u1480:
  3111   001CC6                     
  3112                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 505:     {;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 506:      
      +                             ret = (Std_ReturnType)0x00;
  3113   001CC6  0E00               	movlw	0
  3114   001CC8  6E38               	movwf	lcd_send_4bits_enable_signal@ret^0,c
  3115                           
  3116                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 507:     }
  3117   001CCA  EF78  F00E         	goto	l2410
  3118   001CCE                     l2404:
  3119   001CCE  2837               	incf	lcd_send_4bits_enable_signal@lcd^0,w,c
  3120   001CD0  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3121   001CD2  0E01               	movlw	1
  3122   001CD4  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  3123   001CD6  EC82  F009         	call	_gpio_pin_write_logic	;wreg free
  3124   001CDA                     
  3125                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 511:         _delay((unsigned long)((5)*(8000000UL/400
      +                          0000.0)));
  3126   001CDA  0E03               	movlw	3
  3127   001CDC                     u2567:
  3128   001CDC  2EE8               	decfsz	wreg,f,c
  3129   001CDE  D7FE               	bra	u2567
  3130   001CE0  0000               	nop	
  3131   001CE2                     
  3132                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 512:         ret = gpio_pin_write_logic(&(lcd->lcd_en)
      +                          , GPIO_LOW);
  3133   001CE2  2837               	incf	lcd_send_4bits_enable_signal@lcd^0,w,c
  3134   001CE4  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3135   001CE6  0E00               	movlw	0
  3136   001CE8  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  3137   001CEA  EC82  F009         	call	_gpio_pin_write_logic	;wreg free
  3138   001CEE  6E38               	movwf	lcd_send_4bits_enable_signal@ret^0,c
  3139   001CF0                     l2410:
  3140                           
  3141                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 514:     return ret;
  3142   001CF0  5038               	movf	lcd_send_4bits_enable_signal@ret^0,w,c
  3143   001CF2  0012               	return		;funcret
  3144   001CF4                     __end_of_lcd_send_4bits_enable_signal:
  3145                           	callstack 0
  3146                           
  3147 ;; *************** function _lcd_send_4bits *****************
  3148 ;; Defined at:
  3149 ;;		line 479 in file "ECU_Layer/chr_lcd/ecu_chr_lcd.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;  lcd             1    8[COMRAM] PTR const struct .
  3152 ;;		 -> lcd_1(6), 
  3153 ;;  _data_comman    1    9[COMRAM] unsigned char 
  3154 ;; Auto vars:     Size  Location     Type
  3155 ;;  ret             1   10[COMRAM] unsigned char 
  3156 ;; Return value:  Size  Location     Type
  3157 ;;                  1    wreg      unsigned char 
  3158 ;; Registers used:
  3159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3160 ;; Tracked objects:
  3161 ;;		On entry : 0/0
  3162 ;;		On exit  : 0/0
  3163 ;;		Unchanged: 0/0
  3164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3165 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3166 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3168 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3169 ;;Total ram usage:        3 bytes
  3170 ;; Hardware stack levels used: 1
  3171 ;; Hardware stack levels required when called: 1
  3172 ;; This function calls:
  3173 ;;		_gpio_pin_write_logic
  3174 ;; This function is called by:
  3175 ;;		_lcd_4bit_send_command
  3176 ;;		_lcd_4bit_send_char_data
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180                           	psect	text25
  3181   001AC4                     __ptext25:
  3182                           	callstack 0
  3183   001AC4                     _lcd_send_4bits:
  3184                           	callstack 25
  3185   001AC4                     
  3186                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 481:     if (((void*)0) == lcd)
  3187   001AC4  5037               	movf	lcd_send_4bits@lcd^0,w,c
  3188   001AC6  A4D8               	btfss	status,2,c
  3189   001AC8  EF68  F00D         	goto	u1471
  3190   001ACC  EF6A  F00D         	goto	u1470
  3191   001AD0                     u1471:
  3192   001AD0  EF6E  F00D         	goto	l2394
  3193   001AD4                     u1470:
  3194   001AD4                     
  3195                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 482:     {;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 483:      
      +                             ret = (Std_ReturnType)0x00;
  3196   001AD4  0E00               	movlw	0
  3197   001AD6  6E39               	movwf	lcd_send_4bits@ret^0,c
  3198                           
  3199                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 484:     }
  3200   001AD8  EF97  F00D         	goto	l2396
  3201   001ADC                     l2394:
  3202                           
  3203                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 486:     {;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 487:      
      +                             ret = gpio_pin_write_logic(&(lcd->lcd_data[0]), ((_data_command >> 0) & (uint8)0x01))
      +                          ;
  3204   001ADC  5037               	movf	lcd_send_4bits@lcd^0,w,c
  3205   001ADE  0F02               	addlw	2
  3206   001AE0  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3207   001AE2  5038               	movf	lcd_send_4bits@_data_command^0,w,c
  3208   001AE4  0B01               	andlw	1
  3209   001AE6  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  3210   001AE8  EC82  F009         	call	_gpio_pin_write_logic	;wreg free
  3211   001AEC  6E39               	movwf	lcd_send_4bits@ret^0,c
  3212                           
  3213                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 488:         ret = gpio_pin_write_logic(&(lcd->lcd_dat
      +                          a[1]), ((_data_command >> 1) & (uint8)0x01));
  3214   001AEE  5037               	movf	lcd_send_4bits@lcd^0,w,c
  3215   001AF0  0F03               	addlw	3
  3216   001AF2  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3217   001AF4  90D8               	bcf	status,0,c
  3218   001AF6  3038               	rrcf	lcd_send_4bits@_data_command^0,w,c
  3219   001AF8  0B01               	andlw	1
  3220   001AFA  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  3221   001AFC  EC82  F009         	call	_gpio_pin_write_logic	;wreg free
  3222   001B00  6E39               	movwf	lcd_send_4bits@ret^0,c
  3223                           
  3224                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 489:         ret = gpio_pin_write_logic(&(lcd->lcd_dat
      +                          a[2]), ((_data_command >> 2) & (uint8)0x01));
  3225   001B02  5037               	movf	lcd_send_4bits@lcd^0,w,c
  3226   001B04  0F04               	addlw	4
  3227   001B06  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3228   001B08  4038               	rrncf	lcd_send_4bits@_data_command^0,w,c
  3229   001B0A  42E8               	rrncf	wreg,f,c
  3230   001B0C  0B3F               	andlw	63
  3231   001B0E  0B01               	andlw	1
  3232   001B10  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  3233   001B12  EC82  F009         	call	_gpio_pin_write_logic	;wreg free
  3234   001B16  6E39               	movwf	lcd_send_4bits@ret^0,c
  3235                           
  3236                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 490:         ret = gpio_pin_write_logic(&(lcd->lcd_dat
      +                          a[3]), ((_data_command >> 3) & (uint8)0x01));
  3237   001B18  5037               	movf	lcd_send_4bits@lcd^0,w,c
  3238   001B1A  0F05               	addlw	5
  3239   001B1C  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3240   001B1E  3838               	swapf	lcd_send_4bits@_data_command^0,w,c
  3241   001B20  46E8               	rlncf	wreg,f,c
  3242   001B22  0B1F               	andlw	31
  3243   001B24  0B01               	andlw	1
  3244   001B26  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  3245   001B28  EC82  F009         	call	_gpio_pin_write_logic	;wreg free
  3246   001B2C  6E39               	movwf	lcd_send_4bits@ret^0,c
  3247   001B2E                     l2396:
  3248                           
  3249                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 492:     return ret;
  3250   001B2E  5039               	movf	lcd_send_4bits@ret^0,w,c
  3251   001B30  0012               	return		;funcret
  3252   001B32                     __end_of_lcd_send_4bits:
  3253                           	callstack 0
  3254                           
  3255 ;; *************** function _gpio_pin_intialize *****************
  3256 ;; Defined at:
  3257 ;;		line 167 in file "MCAL_Layer/GPIO/hal_gpio.c"
  3258 ;; Parameters:    Size  Location     Type
  3259 ;;  _pin_config     1    8[COMRAM] PTR const struct .
  3260 ;;		 -> lcd_2$lcd_data(8), lcd_2(10), lcd_1$lcd_data(4), lcd_1(6), 
  3261 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;  ret             1   10[COMRAM] unsigned char 
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  1    wreg      unsigned char 
  3266 ;; Registers used:
  3267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3273 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3274 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3275 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3276 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3277 ;;Total ram usage:        3 bytes
  3278 ;; Hardware stack levels used: 1
  3279 ;; Hardware stack levels required when called: 1
  3280 ;; This function calls:
  3281 ;;		_gpio_pin_direction_intialize
  3282 ;;		_gpio_pin_write_logic
  3283 ;; This function is called by:
  3284 ;;		_lcd_4bit_initialize
  3285 ;;		_lcd_8bit_initialize
  3286 ;;		_seven_segment_intialize
  3287 ;;		_dc_motor_initialize
  3288 ;;		_keypad_initialize
  3289 ;;		_led_initialize
  3290 ;;		_relay_initialize
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           	psect	text26
  3295   001B32                     __ptext26:
  3296                           	callstack 0
  3297   001B32                     _gpio_pin_intialize:
  3298                           	callstack 26
  3299   001B32                     
  3300                           ;MCAL_Layer/GPIO/hal_gpio.c: 169:     if (((void*)0) == _pin_config || _pin_config->pin 
      +                          > 8 -1)
  3301   001B32  5037               	movf	gpio_pin_intialize@_pin_config^0,w,c
  3302   001B34  B4D8               	btfsc	status,2,c
  3303   001B36  EF9F  F00D         	goto	u1671
  3304   001B3A  EFA1  F00D         	goto	u1670
  3305   001B3E                     u1671:
  3306   001B3E  EFB1  F00D         	goto	l2528
  3307   001B42                     u1670:
  3308   001B42  5037               	movf	gpio_pin_intialize@_pin_config^0,w,c
  3309   001B44  6ED9               	movwf	fsr2l,c
  3310   001B46  6ADA               	clrf	fsr2h,c
  3311   001B48  30DF               	rrcf	223,w,c
  3312   001B4A  32E8               	rrcf	wreg,f,c
  3313   001B4C  32E8               	rrcf	wreg,f,c
  3314   001B4E  0B07               	andlw	7
  3315   001B50  6E38               	movwf	??_gpio_pin_intialize^0,c
  3316   001B52  0E07               	movlw	7
  3317   001B54  6438               	cpfsgt	??_gpio_pin_intialize^0,c
  3318   001B56  EFAF  F00D         	goto	u1681
  3319   001B5A  EFB1  F00D         	goto	u1680
  3320   001B5E                     u1681:
  3321   001B5E  EFB5  F00D         	goto	l2530
  3322   001B62                     u1680:
  3323   001B62                     l2528:
  3324                           
  3325                           ;MCAL_Layer/GPIO/hal_gpio.c: 170:     {;MCAL_Layer/GPIO/hal_gpio.c: 171:         ret = (
      +                          Std_ReturnType)0x00;
  3326   001B62  0E00               	movlw	0
  3327   001B64  6E39               	movwf	gpio_pin_intialize@ret^0,c
  3328                           
  3329                           ;MCAL_Layer/GPIO/hal_gpio.c: 172:     }
  3330   001B66  EFC6  F00D         	goto	l2532
  3331   001B6A                     l2530:
  3332                           
  3333                           ;MCAL_Layer/GPIO/hal_gpio.c: 174:     {;MCAL_Layer/GPIO/hal_gpio.c: 175:         ret = g
      +                          pio_pin_direction_intialize(_pin_config);
  3334   001B6A  C037  F02F         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
  3335   001B6E  ECF9  F008         	call	_gpio_pin_direction_intialize	;wreg free
  3336   001B72  6E39               	movwf	gpio_pin_intialize@ret^0,c
  3337                           
  3338                           ;MCAL_Layer/GPIO/hal_gpio.c: 176:         ret = gpio_pin_write_logic(_pin_config , _pin_
      +                          config->logic);
  3339   001B74  C037  F02F         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
  3340   001B78  5037               	movf	gpio_pin_intialize@_pin_config^0,w,c
  3341   001B7A  6ED9               	movwf	fsr2l,c
  3342   001B7C  6ADA               	clrf	fsr2h,c
  3343   001B7E  0E00               	movlw	0
  3344   001B80  BEDF               	btfsc	indf2,7,c
  3345   001B82  0E01               	movlw	1
  3346   001B84  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  3347   001B86  EC82  F009         	call	_gpio_pin_write_logic	;wreg free
  3348   001B8A  6E39               	movwf	gpio_pin_intialize@ret^0,c
  3349   001B8C                     l2532:
  3350                           
  3351                           ;MCAL_Layer/GPIO/hal_gpio.c: 179:     return ret;
  3352   001B8C  5039               	movf	gpio_pin_intialize@ret^0,w,c
  3353   001B8E  0012               	return		;funcret
  3354   001B90                     __end_of_gpio_pin_intialize:
  3355                           	callstack 0
  3356                           
  3357 ;; *************** function _gpio_pin_write_logic *****************
  3358 ;; Defined at:
  3359 ;;		line 84 in file "MCAL_Layer/GPIO/hal_gpio.c"
  3360 ;; Parameters:    Size  Location     Type
  3361 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  3362 ;;		 -> lcd_2$lcd_data(8), lcd_2(10), lcd_1$lcd_data(4), lcd_1(6), 
  3363 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), relay_initialize@pin_obj(1), led_turn_off@pin_obj(1), 
  3364 ;;		 -> led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  3365 ;;  logic           1    1[COMRAM] enum E2981
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;  ret             1    7[COMRAM] unsigned char 
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  1    wreg      unsigned char 
  3370 ;; Registers used:
  3371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3377 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3378 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3379 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3380 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3381 ;;Total ram usage:        8 bytes
  3382 ;; Hardware stack levels used: 1
  3383 ;; This function calls:
  3384 ;;		Nothing
  3385 ;; This function is called by:
  3386 ;;		_lcd_4bit_send_command
  3387 ;;		_lcd_8bit_send_command
  3388 ;;		_lcd_8bit_send_char_data
  3389 ;;		_lcd_send_4bits
  3390 ;;		_lcd_send_4bits_enable_signal
  3391 ;;		_lcd_send_8bits_enable_signal
  3392 ;;		_gpio_pin_intialize
  3393 ;;		_seven_segment_write_number
  3394 ;;		_lcd_4bit_send_char_data
  3395 ;;		_dc_motor_move_right
  3396 ;;		_dc_motor_move_left
  3397 ;;		_dc_motor_stop
  3398 ;;		_keypad_get_value
  3399 ;;		_led_turn_on
  3400 ;;		_led_turn_off
  3401 ;;		_relay_turn_on
  3402 ;;		_relay_turn_off
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406                           	psect	text27
  3407   001304                     __ptext27:
  3408                           	callstack 0
  3409   001304                     _gpio_pin_write_logic:
  3410                           	callstack 26
  3411   001304                     
  3412                           ;MCAL_Layer/GPIO/hal_gpio.c: 85:     Std_ReturnType ret = (Std_ReturnType)0x01;
  3413   001304  0E01               	movlw	1
  3414   001306  6E36               	movwf	gpio_pin_write_logic@ret^0,c
  3415                           
  3416                           ;MCAL_Layer/GPIO/hal_gpio.c: 86:     if (((void*)0) == _pin_config || _pin_config->pin >
      +                           8 -1)
  3417   001308  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3418   00130A  B4D8               	btfsc	status,2,c
  3419   00130C  EF8A  F009         	goto	u1381
  3420   001310  EF8C  F009         	goto	u1380
  3421   001314                     u1381:
  3422   001314  EF9C  F009         	goto	l2354
  3423   001318                     u1380:
  3424   001318  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3425   00131A  6ED9               	movwf	fsr2l,c
  3426   00131C  6ADA               	clrf	fsr2h,c
  3427   00131E  30DF               	rrcf	223,w,c
  3428   001320  32E8               	rrcf	wreg,f,c
  3429   001322  32E8               	rrcf	wreg,f,c
  3430   001324  0B07               	andlw	7
  3431   001326  6E31               	movwf	??_gpio_pin_write_logic^0,c
  3432   001328  0E07               	movlw	7
  3433   00132A  6431               	cpfsgt	??_gpio_pin_write_logic^0,c
  3434   00132C  EF9A  F009         	goto	u1391
  3435   001330  EF9C  F009         	goto	u1390
  3436   001334                     u1391:
  3437   001334  EFF3  F009         	goto	l2362
  3438   001338                     u1390:
  3439   001338                     l2354:
  3440                           
  3441                           ;MCAL_Layer/GPIO/hal_gpio.c: 87:     {;MCAL_Layer/GPIO/hal_gpio.c: 88:         ret = (St
      +                          d_ReturnType)0x00;
  3442   001338  0E00               	movlw	0
  3443   00133A  6E36               	movwf	gpio_pin_write_logic@ret^0,c
  3444                           
  3445                           ;MCAL_Layer/GPIO/hal_gpio.c: 89:     }
  3446   00133C  EF08  F00A         	goto	l2364
  3447   001340                     l2356:
  3448                           
  3449                           ;MCAL_Layer/GPIO/hal_gpio.c: 95:                 (*lat_registers[_pin_config->port] &= ~
      +                          ((uint8)1<<_pin_config->pin));
  3450   001340  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3451   001342  6ED9               	movwf	fsr2l,c
  3452   001344  6ADA               	clrf	fsr2h,c
  3453   001346  30DF               	rrcf	223,w,c
  3454   001348  32E8               	rrcf	wreg,f,c
  3455   00134A  32E8               	rrcf	wreg,f,c
  3456   00134C  0B07               	andlw	7
  3457   00134E  6E31               	movwf	??_gpio_pin_write_logic^0,c
  3458   001350  0E01               	movlw	1
  3459   001352  6E32               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3460   001354  2A31               	incf	??_gpio_pin_write_logic^0,f,c
  3461   001356  EFAF  F009         	goto	u1404
  3462   00135A                     u1405:
  3463   00135A  90D8               	bcf	status,0,c
  3464   00135C  3632               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3465   00135E                     u1404:
  3466   00135E  2E31               	decfsz	??_gpio_pin_write_logic^0,f,c
  3467   001360  EFAD  F009         	goto	u1405
  3468   001364  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3469   001366  0AFF               	xorlw	255
  3470   001368  6E33               	movwf	(??_gpio_pin_write_logic+2)^0,c
  3471   00136A  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3472   00136C  6ED9               	movwf	fsr2l,c
  3473   00136E  6ADA               	clrf	fsr2h,c
  3474   001370  50DF               	movf	223,w,c
  3475   001372  0B07               	andlw	7
  3476   001374  0D02               	mullw	2
  3477   001376  50F3               	movf	243,w,c
  3478   001378  0F0B               	addlw	low _lat_registers
  3479   00137A  6ED9               	movwf	fsr2l,c
  3480   00137C  6ADA               	clrf	fsr2h,c
  3481   00137E  CFDE F034          	movff	postinc2,??_gpio_pin_write_logic+3
  3482   001382  CFDD F035          	movff	postdec2,??_gpio_pin_write_logic+4
  3483   001386  C034  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  3484   00138A  C035  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  3485   00138E  5033               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  3486   001390  16DF               	andwf	indf2,f,c
  3487                           
  3488                           ;MCAL_Layer/GPIO/hal_gpio.c: 96:                 break;
  3489   001392  EF08  F00A         	goto	l2364
  3490   001396                     l2358:
  3491                           
  3492                           ;MCAL_Layer/GPIO/hal_gpio.c: 98:                 (*lat_registers[_pin_config->port] |= (
      +                          (uint8)1<<_pin_config->pin));
  3493   001396  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3494   001398  6ED9               	movwf	fsr2l,c
  3495   00139A  6ADA               	clrf	fsr2h,c
  3496   00139C  30DF               	rrcf	223,w,c
  3497   00139E  32E8               	rrcf	wreg,f,c
  3498   0013A0  32E8               	rrcf	wreg,f,c
  3499   0013A2  0B07               	andlw	7
  3500   0013A4  6E31               	movwf	??_gpio_pin_write_logic^0,c
  3501   0013A6  0E01               	movlw	1
  3502   0013A8  6E32               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3503   0013AA  2A31               	incf	??_gpio_pin_write_logic^0,f,c
  3504   0013AC  EFDA  F009         	goto	u1414
  3505   0013B0                     u1415:
  3506   0013B0  90D8               	bcf	status,0,c
  3507   0013B2  3632               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3508   0013B4                     u1414:
  3509   0013B4  2E31               	decfsz	??_gpio_pin_write_logic^0,f,c
  3510   0013B6  EFD8  F009         	goto	u1415
  3511   0013BA  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3512   0013BC  6ED9               	movwf	fsr2l,c
  3513   0013BE  6ADA               	clrf	fsr2h,c
  3514   0013C0  50DF               	movf	223,w,c
  3515   0013C2  0B07               	andlw	7
  3516   0013C4  0D02               	mullw	2
  3517   0013C6  50F3               	movf	243,w,c
  3518   0013C8  0F0B               	addlw	low _lat_registers
  3519   0013CA  6ED9               	movwf	fsr2l,c
  3520   0013CC  6ADA               	clrf	fsr2h,c
  3521   0013CE  CFDE F033          	movff	postinc2,??_gpio_pin_write_logic+2
  3522   0013D2  CFDD F034          	movff	postdec2,??_gpio_pin_write_logic+3
  3523   0013D6  C033  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  3524   0013DA  C034  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  3525   0013DE  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3526   0013E0  12DF               	iorwf	indf2,f,c
  3527                           
  3528                           ;MCAL_Layer/GPIO/hal_gpio.c: 99:                 break;
  3529   0013E2  EF08  F00A         	goto	l2364
  3530   0013E6                     l2362:
  3531   0013E6  5030               	movf	gpio_pin_write_logic@logic^0,w,c
  3532   0013E8  6E31               	movwf	??_gpio_pin_write_logic^0,c
  3533   0013EA  6A32               	clrf	(??_gpio_pin_write_logic+1)^0,c
  3534                           
  3535                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3536                           ; Switch size 1, requested type "simple"
  3537                           ; Number of cases is 1, Range of values is 0 to 0
  3538                           ; switch strategies available:
  3539                           ; Name         Instructions Cycles
  3540                           ; simple_byte            4     3 (average)
  3541                           ;	Chosen strategy is simple_byte
  3542   0013EC  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3543   0013EE  0A00               	xorlw	0	; case 0
  3544   0013F0  B4D8               	btfsc	status,2,c
  3545   0013F2  EFFD  F009         	goto	l3268
  3546   0013F6  EF9C  F009         	goto	l2354
  3547   0013FA                     l3268:
  3548                           
  3549                           ; Switch size 1, requested type "simple"
  3550                           ; Number of cases is 2, Range of values is 0 to 1
  3551                           ; switch strategies available:
  3552                           ; Name         Instructions Cycles
  3553                           ; simple_byte            7     4 (average)
  3554                           ;	Chosen strategy is simple_byte
  3555   0013FA  5031               	movf	??_gpio_pin_write_logic^0,w,c
  3556   0013FC  0A00               	xorlw	0	; case 0
  3557   0013FE  B4D8               	btfsc	status,2,c
  3558   001400  EFA0  F009         	goto	l2356
  3559   001404  0A01               	xorlw	1	; case 1
  3560   001406  B4D8               	btfsc	status,2,c
  3561   001408  EFCB  F009         	goto	l2358
  3562   00140C  EF9C  F009         	goto	l2354
  3563   001410                     l2364:
  3564                           
  3565                           ;MCAL_Layer/GPIO/hal_gpio.c: 105:     return ret;
  3566   001410  5036               	movf	gpio_pin_write_logic@ret^0,w,c
  3567   001412  0012               	return		;funcret
  3568   001414                     __end_of_gpio_pin_write_logic:
  3569                           	callstack 0
  3570                           
  3571 ;; *************** function _gpio_pin_direction_intialize *****************
  3572 ;; Defined at:
  3573 ;;		line 27 in file "MCAL_Layer/GPIO/hal_gpio.c"
  3574 ;; Parameters:    Size  Location     Type
  3575 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  3576 ;;		 -> lcd_2$lcd_data(8), lcd_2(10), lcd_1$lcd_data(4), lcd_1(6), 
  3577 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;  ret             1    6[COMRAM] unsigned char 
  3580 ;; Return value:  Size  Location     Type
  3581 ;;                  1    wreg      unsigned char 
  3582 ;; Registers used:
  3583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3584 ;; Tracked objects:
  3585 ;;		On entry : 0/0
  3586 ;;		On exit  : 0/0
  3587 ;;		Unchanged: 0/0
  3588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3589 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3590 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3591 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3592 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3593 ;;Total ram usage:        7 bytes
  3594 ;; Hardware stack levels used: 1
  3595 ;; This function calls:
  3596 ;;		Nothing
  3597 ;; This function is called by:
  3598 ;;		_gpio_pin_intialize
  3599 ;;		_button_initialize
  3600 ;;		_keypad_initialize
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604                           	psect	text28
  3605   0011F2                     __ptext28:
  3606                           	callstack 0
  3607   0011F2                     _gpio_pin_direction_intialize:
  3608                           	callstack 26
  3609   0011F2                     
  3610                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:     Std_ReturnType ret = (Std_ReturnType)0x01;
  3611   0011F2  0E01               	movlw	1
  3612   0011F4  6E35               	movwf	gpio_pin_direction_intialize@ret^0,c
  3613                           
  3614                           ;MCAL_Layer/GPIO/hal_gpio.c: 29:     if (((void*)0) == _pin_config || _pin_config->pin >
      +                           8 -1)
  3615   0011F6  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  3616   0011F8  B4D8               	btfsc	status,2,c
  3617   0011FA  EF01  F009         	goto	u1421
  3618   0011FE  EF03  F009         	goto	u1420
  3619   001202                     u1421:
  3620   001202  EF13  F009         	goto	l2376
  3621   001206                     u1420:
  3622   001206  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  3623   001208  6ED9               	movwf	fsr2l,c
  3624   00120A  6ADA               	clrf	fsr2h,c
  3625   00120C  30DF               	rrcf	223,w,c
  3626   00120E  32E8               	rrcf	wreg,f,c
  3627   001210  32E8               	rrcf	wreg,f,c
  3628   001212  0B07               	andlw	7
  3629   001214  6E30               	movwf	??_gpio_pin_direction_intialize^0,c
  3630   001216  0E07               	movlw	7
  3631   001218  6430               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  3632   00121A  EF11  F009         	goto	u1431
  3633   00121E  EF13  F009         	goto	u1430
  3634   001222                     u1431:
  3635   001222  EF6A  F009         	goto	l2384
  3636   001226                     u1430:
  3637   001226                     l2376:
  3638                           
  3639                           ;MCAL_Layer/GPIO/hal_gpio.c: 30:     {;MCAL_Layer/GPIO/hal_gpio.c: 31:         ret = (St
      +                          d_ReturnType)0x00;
  3640   001226  0E00               	movlw	0
  3641   001228  6E35               	movwf	gpio_pin_direction_intialize@ret^0,c
  3642                           
  3643                           ;MCAL_Layer/GPIO/hal_gpio.c: 32:     }
  3644   00122A  EF80  F009         	goto	l2386
  3645   00122E                     l2378:
  3646                           
  3647                           ;MCAL_Layer/GPIO/hal_gpio.c: 38:                 (*tris_registers[_pin_config->port] &= 
      +                          ~((uint8)1<<_pin_config->pin));
  3648   00122E  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  3649   001230  6ED9               	movwf	fsr2l,c
  3650   001232  6ADA               	clrf	fsr2h,c
  3651   001234  30DF               	rrcf	223,w,c
  3652   001236  32E8               	rrcf	wreg,f,c
  3653   001238  32E8               	rrcf	wreg,f,c
  3654   00123A  0B07               	andlw	7
  3655   00123C  6E30               	movwf	??_gpio_pin_direction_intialize^0,c
  3656   00123E  0E01               	movlw	1
  3657   001240  6E31               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  3658   001242  2A30               	incf	??_gpio_pin_direction_intialize^0,f,c
  3659   001244  EF26  F009         	goto	u1444
  3660   001248                     u1445:
  3661   001248  90D8               	bcf	status,0,c
  3662   00124A  3631               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  3663   00124C                     u1444:
  3664   00124C  2E30               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  3665   00124E  EF24  F009         	goto	u1445
  3666   001252  5031               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  3667   001254  0AFF               	xorlw	255
  3668   001256  6E32               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  3669   001258  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  3670   00125A  6ED9               	movwf	fsr2l,c
  3671   00125C  6ADA               	clrf	fsr2h,c
  3672   00125E  50DF               	movf	223,w,c
  3673   001260  0B07               	andlw	7
  3674   001262  0D02               	mullw	2
  3675   001264  50F3               	movf	243,w,c
  3676   001266  0F15               	addlw	low _tris_registers
  3677   001268  6ED9               	movwf	fsr2l,c
  3678   00126A  6ADA               	clrf	fsr2h,c
  3679   00126C  CFDE F033          	movff	postinc2,??_gpio_pin_direction_intialize+3
  3680   001270  CFDD F034          	movff	postdec2,??_gpio_pin_direction_intialize+4
  3681   001274  C033  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  3682   001278  C034  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  3683   00127C  5032               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  3684   00127E  16DF               	andwf	indf2,f,c
  3685                           
  3686                           ;MCAL_Layer/GPIO/hal_gpio.c: 39:                 break;
  3687   001280  EF80  F009         	goto	l2386
  3688   001284                     l2380:
  3689                           
  3690                           ;MCAL_Layer/GPIO/hal_gpio.c: 41:                 (*tris_registers[_pin_config->port] |= 
      +                          ((uint8)1<<_pin_config->pin));
  3691   001284  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  3692   001286  6ED9               	movwf	fsr2l,c
  3693   001288  6ADA               	clrf	fsr2h,c
  3694   00128A  30DF               	rrcf	223,w,c
  3695   00128C  32E8               	rrcf	wreg,f,c
  3696   00128E  32E8               	rrcf	wreg,f,c
  3697   001290  0B07               	andlw	7
  3698   001292  6E30               	movwf	??_gpio_pin_direction_intialize^0,c
  3699   001294  0E01               	movlw	1
  3700   001296  6E31               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  3701   001298  2A30               	incf	??_gpio_pin_direction_intialize^0,f,c
  3702   00129A  EF51  F009         	goto	u1454
  3703   00129E                     u1455:
  3704   00129E  90D8               	bcf	status,0,c
  3705   0012A0  3631               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  3706   0012A2                     u1454:
  3707   0012A2  2E30               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  3708   0012A4  EF4F  F009         	goto	u1455
  3709   0012A8  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  3710   0012AA  6ED9               	movwf	fsr2l,c
  3711   0012AC  6ADA               	clrf	fsr2h,c
  3712   0012AE  50DF               	movf	223,w,c
  3713   0012B0  0B07               	andlw	7
  3714   0012B2  0D02               	mullw	2
  3715   0012B4  50F3               	movf	243,w,c
  3716   0012B6  0F15               	addlw	low _tris_registers
  3717   0012B8  6ED9               	movwf	fsr2l,c
  3718   0012BA  6ADA               	clrf	fsr2h,c
  3719   0012BC  CFDE F032          	movff	postinc2,??_gpio_pin_direction_intialize+2
  3720   0012C0  CFDD F033          	movff	postdec2,??_gpio_pin_direction_intialize+3
  3721   0012C4  C032  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
  3722   0012C8  C033  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
  3723   0012CC  5031               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  3724   0012CE  12DF               	iorwf	indf2,f,c
  3725                           
  3726                           ;MCAL_Layer/GPIO/hal_gpio.c: 42:                 break;
  3727   0012D0  EF80  F009         	goto	l2386
  3728   0012D4                     l2384:
  3729   0012D4  502F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  3730   0012D6  6ED9               	movwf	fsr2l,c
  3731   0012D8  6ADA               	clrf	fsr2h,c
  3732   0012DA  BCDF               	btfsc	indf2,6,c
  3733   0012DC  EF72  F009         	goto	u1461
  3734   0012E0  EF75  F009         	goto	u1460
  3735   0012E4                     u1461:
  3736   0012E4  0E01               	movlw	1
  3737   0012E6  EF76  F009         	goto	u1466
  3738   0012EA                     u1460:
  3739   0012EA  0E00               	movlw	0
  3740   0012EC                     u1466:
  3741                           
  3742                           ; Switch size 1, requested type "simple"
  3743                           ; Number of cases is 2, Range of values is 0 to 1
  3744                           ; switch strategies available:
  3745                           ; Name         Instructions Cycles
  3746                           ; simple_byte            7     4 (average)
  3747                           ;	Chosen strategy is simple_byte
  3748   0012EC  0A00               	xorlw	0	; case 0
  3749   0012EE  B4D8               	btfsc	status,2,c
  3750   0012F0  EF17  F009         	goto	l2378
  3751   0012F4  0A01               	xorlw	1	; case 1
  3752   0012F6  B4D8               	btfsc	status,2,c
  3753   0012F8  EF42  F009         	goto	l2380
  3754   0012FC  EF13  F009         	goto	l2376
  3755   001300                     l2386:
  3756                           
  3757                           ;MCAL_Layer/GPIO/hal_gpio.c: 46:     return ret;
  3758   001300  5035               	movf	gpio_pin_direction_intialize@ret^0,w,c
  3759   001302  0012               	return		;funcret
  3760   001304                     __end_of_gpio_pin_direction_intialize:
  3761                           	callstack 0
  3762                           
  3763                           	psect	rparam
  3764   000000                     
  3765                           	psect	config
  3766                           
  3767                           ; Padding undefined space
  3768   300000                     	org	3145728
  3769   300000  FF                 	db	255
  3770                           
  3771                           ;Config register CONFIG1H @ 0x300001
  3772                           ;	Oscillator Selection bits
  3773                           ;	OSC = HS, HS oscillator
  3774                           ;	Fail-Safe Clock Monitor Enable bit
  3775                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3776                           ;	Internal/External Oscillator Switchover bit
  3777                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3778   300001                     	org	3145729
  3779   300001  02                 	db	2
  3780                           
  3781                           ;Config register CONFIG2L @ 0x300002
  3782                           ;	Power-up Timer Enable bit
  3783                           ;	PWRT = OFF, PWRT disabled
  3784                           ;	Brown-out Reset Enable bits
  3785                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3786                           ;	Brown Out Reset Voltage bits
  3787                           ;	BORV = 1, 
  3788   300002                     	org	3145730
  3789   300002  09                 	db	9
  3790                           
  3791                           ;Config register CONFIG2H @ 0x300003
  3792                           ;	Watchdog Timer Enable bit
  3793                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3794                           ;	Watchdog Timer Postscale Select bits
  3795                           ;	WDTPS = 32768, 1:32768
  3796   300003                     	org	3145731
  3797   300003  1E                 	db	30
  3798                           
  3799                           ; Padding undefined space
  3800   300004                     	org	3145732
  3801   300004  FF                 	db	255
  3802                           
  3803                           ;Config register CONFIG3H @ 0x300005
  3804                           ;	CCP2 MUX bit
  3805                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3806                           ;	PORTB A/D Enable bit
  3807                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3808                           ;	Low-Power Timer1 Oscillator Enable bit
  3809                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3810                           ;	MCLR Pin Enable bit
  3811                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3812   300005                     	org	3145733
  3813   300005  81                 	db	129
  3814                           
  3815                           ;Config register CONFIG4L @ 0x300006
  3816                           ;	Stack Full/Underflow Reset Enable bit
  3817                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3818                           ;	Single-Supply ICSP Enable bit
  3819                           ;	LVP = OFF, Single-Supply ICSP disabled
  3820                           ;	Extended Instruction Set Enable bit
  3821                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3822                           ;	Background Debugger Enable bit
  3823                           ;	DEBUG = 0x1, unprogrammed default
  3824   300006                     	org	3145734
  3825   300006  81                 	db	129
  3826                           
  3827                           ; Padding undefined space
  3828   300007                     	org	3145735
  3829   300007  FF                 	db	255
  3830                           
  3831                           ;Config register CONFIG5L @ 0x300008
  3832                           ;	Code Protection bit
  3833                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3834                           ;	Code Protection bit
  3835                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3836                           ;	Code Protection bit
  3837                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3838                           ;	Code Protection bit
  3839                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3840   300008                     	org	3145736
  3841   300008  0F                 	db	15
  3842                           
  3843                           ;Config register CONFIG5H @ 0x300009
  3844                           ;	Boot Block Code Protection bit
  3845                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3846                           ;	Data EEPROM Code Protection bit
  3847                           ;	CPD = OFF, Data EEPROM not code-protected
  3848   300009                     	org	3145737
  3849   300009  C0                 	db	192
  3850                           
  3851                           ;Config register CONFIG6L @ 0x30000A
  3852                           ;	Write Protection bit
  3853                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3854                           ;	Write Protection bit
  3855                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3856                           ;	Write Protection bit
  3857                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3858                           ;	Write Protection bit
  3859                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3860   30000A                     	org	3145738
  3861   30000A  0F                 	db	15
  3862                           
  3863                           ;Config register CONFIG6H @ 0x30000B
  3864                           ;	Configuration Register Write Protection bit
  3865                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3866                           ;	Boot Block Write Protection bit
  3867                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3868                           ;	Data EEPROM Write Protection bit
  3869                           ;	WRTD = OFF, Data EEPROM not write-protected
  3870   30000B                     	org	3145739
  3871   30000B  E0                 	db	224
  3872                           
  3873                           ;Config register CONFIG7L @ 0x30000C
  3874                           ;	Table Read Protection bit
  3875                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3876                           ;	Table Read Protection bit
  3877                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3878                           ;	Table Read Protection bit
  3879                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3880                           ;	Table Read Protection bit
  3881                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3882   30000C                     	org	3145740
  3883   30000C  0F                 	db	15
  3884                           
  3885                           ;Config register CONFIG7H @ 0x30000D
  3886                           ;	Boot Block Table Read Protection bit
  3887                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3888   30000D                     	org	3145741
  3889   30000D  40                 	db	64
  3890                           tosu	equ	0xFFF
  3891                           tosh	equ	0xFFE
  3892                           tosl	equ	0xFFD
  3893                           stkptr	equ	0xFFC
  3894                           pclatu	equ	0xFFB
  3895                           pclath	equ	0xFFA
  3896                           pcl	equ	0xFF9
  3897                           tblptru	equ	0xFF8
  3898                           tblptrh	equ	0xFF7
  3899                           tblptrl	equ	0xFF6
  3900                           tablat	equ	0xFF5
  3901                           prodh	equ	0xFF4
  3902                           prodl	equ	0xFF3
  3903                           indf0	equ	0xFEF
  3904                           postinc0	equ	0xFEE
  3905                           postdec0	equ	0xFED
  3906                           preinc0	equ	0xFEC
  3907                           plusw0	equ	0xFEB
  3908                           fsr0h	equ	0xFEA
  3909                           fsr0l	equ	0xFE9
  3910                           wreg	equ	0xFE8
  3911                           indf1	equ	0xFE7
  3912                           postinc1	equ	0xFE6
  3913                           postdec1	equ	0xFE5
  3914                           preinc1	equ	0xFE4
  3915                           plusw1	equ	0xFE3
  3916                           fsr1h	equ	0xFE2
  3917                           fsr1l	equ	0xFE1
  3918                           bsr	equ	0xFE0
  3919                           indf2	equ	0xFDF
  3920                           postinc2	equ	0xFDE
  3921                           postdec2	equ	0xFDD
  3922                           preinc2	equ	0xFDC
  3923                           plusw2	equ	0xFDB
  3924                           fsr2h	equ	0xFDA
  3925                           fsr2l	equ	0xFD9
  3926                           status	equ	0xFD8

Data Sizes:
    Strings     31
    Constant    16
    Data        46
    BSS         56
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     46     117
    BANK0           128      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    convert_byte_to_string@str	PTR unsigned char  size(1) Largest target is 4
		 -> lcd_counter_txt(COMRAM[4]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    funcs	PTR FTN()void [3] size(2) Largest target is 0

    __funcs_on_exit@func	PTR FTN()void  size(2) Largest target is 0

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), 
		 -> led_initialize@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_intialize@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), 
		 -> led_initialize@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), 
		 -> led_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 
		 -> relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_8bit_initialize@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_command@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 16
		 -> lcd_counter_txt(COMRAM[4]), STR_4(CODE[12]), STR_5(CODE[16]), 

    lcd_8bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_send_4bits@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_send_4bits_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_send_8bits_enable_signal@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    memset@dest	PTR void  size(1) Largest target is 4
		 -> lcd_counter_txt(COMRAM[4]), 

    memset@p	PTR unsigned char  size(1) Largest target is 4
		 -> lcd_counter_txt(COMRAM[4]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    S1284$buffer	PTR unsigned char  size(2) Largest target is 0

    S1284$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(1) Largest target is 4
		 -> lcd_counter_txt(COMRAM[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 4
		 -> lcd_counter_txt(COMRAM[4]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_convert_byte_to_string
    _lcd_8bit_send_string_pos->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_lcd_8bit_send_command
    _lcd_8bit_send_char_data->_lcd_send_8bits_enable_signal
    _exit->__Exit
    _convert_byte_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _ecu_layer_initialize->_lcd_8bit_initialize
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_send_8bits_enable_signal
    _lcd_send_8bits_enable_signal->_gpio_pin_write_logic
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits_enable_signal->_gpio_pin_write_logic
    _lcd_send_4bits->_gpio_pin_write_logic
    _gpio_pin_intialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   74442
                                             45 COMRAM     1     1      0
                        _Application
             _convert_byte_to_string
                               _exit
           _lcd_8bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_string_pos                             6     1      5   25026
                                             19 COMRAM     6     1      5
            _lcd_8bit_send_char_data
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_set_cursor                                  4     1      3   13066
                                             15 COMRAM     4     1      3
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_char_data                              6     4      2   10845
                                              9 COMRAM     6     4      2
               _gpio_pin_write_logic
       _lcd_send_8bits_enable_signal
 ---------------------------------------------------------------------------------
 (1) _exit                                                 2     0      2     174
                                              2 COMRAM     2     0      2
                              __Exit
                    ___funcs_on_exit
 ---------------------------------------------------------------------------------
 (2) ___funcs_on_exit                                      2     2      0       0
 ---------------------------------------------------------------------------------
 (2) __Exit                                                2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _convert_byte_to_string                               3     2      1    4559
                                             42 COMRAM     3     2      1
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    15      4    3591
                                             25 COMRAM    17    13      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    2936
                                             21 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           11     8      3    2586
                                             10 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     782
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     1      5     780
                                              0 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (1) _Application                                          0     0      0   44683
               _ecu_layer_initialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_initialize                                 0     0      0   44683
                _lcd_4bit_initialize
                _lcd_8bit_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_initialize                                  4     3      1   19406
                                             15 COMRAM     4     3      1
                 _gpio_pin_intialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_command                                6     4      2   12365
                                              9 COMRAM     6     4      2
               _gpio_pin_write_logic
       _lcd_send_8bits_enable_signal
 ---------------------------------------------------------------------------------
 (4) _lcd_send_8bits_enable_signal                         2     1      1    5119
                                              8 COMRAM     1     0      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_initialize                                  4     3      1   25277
                                             14 COMRAM     4     3      1
                 _gpio_pin_intialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_command                                3     1      2   18236
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
                     _lcd_send_4bits
       _lcd_send_4bits_enable_signal
 ---------------------------------------------------------------------------------
 (5) _lcd_send_4bits_enable_signal                         2     1      1    5287
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _lcd_send_4bits                                       3     1      2    5725
                                              8 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_intialize                                   3     2      1    6574
                                              8 COMRAM     3     2      1
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 8     6      2    4891
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_intialize                         7     6      1     407
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Application
     _ecu_layer_initialize
       _lcd_4bit_initialize
         _gpio_pin_intialize
           _gpio_pin_direction_intialize
           _gpio_pin_write_logic
         _lcd_4bit_send_command
           _gpio_pin_write_logic
           _lcd_send_4bits
             _gpio_pin_write_logic
           _lcd_send_4bits_enable_signal
             _gpio_pin_write_logic
       _lcd_8bit_initialize
         _gpio_pin_intialize
         _lcd_8bit_send_command
           _gpio_pin_write_logic
           _lcd_send_8bits_enable_signal
             _gpio_pin_write_logic
   _convert_byte_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _exit
     __Exit
     ___funcs_on_exit
   _lcd_8bit_send_string_pos
     _lcd_8bit_send_char_data
       _gpio_pin_write_logic
       _lcd_send_8bits_enable_signal
     _lcd_8bit_set_cursor
       _lcd_8bit_send_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      20       5       25.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2E      75       1       92.1%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      95      39        0.0%
DATA                 0      0      95       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Aug 23 15:05:44 2024

                        ?_lcd_send_4bits 0037                                       l71 15DE  
                                     l76 1BEA                             ___awdiv@sign 0034  
                                    l120 14F8                                      l134 1A4C  
                                    l127 1AC2                                      l208 19D6  
                                    l171 1C36                                      l191 1CF2  
                                    l159 18A4                                      l416 1412  
                                    l186 1B30                                      l196 1D28  
                                    l437 1B8E                                      l349 1E20  
                                    l397 1302                                      l733 16A2  
                                    l746 1752                                      l499 1E3E  
                                    u570 1E0A                                      u571 1E06  
                                    _abs 1D5E                                      _ret 0075  
                           ___awmod@sign 0034                      led_initialize@F3061 0070  
              ?_lcd_8bit_send_string_pos 0042                                      wreg 0FE8  
                  relay_initialize@F3055 006C              __end_of_lcd_8bit_set_cursor 19D8  
            lcd_send_4bits@_data_command 0038                                     ?_abs 0035  
                                   l1212 1D5C                                     l1205 1DC0  
                                   l1250 11F0                                     l1260 1D78  
                                   l1180 1E32                                     l1263 1D90  
                                   l1183 1E34                                     l2400 1CB6  
                                   l1256 1C76                                     l2410 1CF0  
                                   l2402 1CC6                                     l1275 17FC  
                                   l1195 1E0A                                     l2404 1CCE  
                                   l2420 1D14                                     l2500 1742  
                                   l2350 1304                                     l2406 1CDA  
                                   l2422 1D1C                                     l2414 1CF4  
                                   l2430 15F2                                     l2502 174A  
                                   l1286 1E40                                     l2510 1774  
                                   l2352 1318                                     l2408 1CE2  
                                   l2416 1D04                                     l2440 1618  
                                   l2432 15FA                                     l2520 1D5E  
                                   l2512 177E                                     l2600 116C  
                                   l2362 13E6                                     l2354 1338  
                                   l2530 1B6A                                     l2418 1D08  
                                   l2450 1650                                     l2442 1620  
                                   l2434 15FE                                     l2426 15E0  
                                   l2522 1D6C                                     l2514 179A  
                                   l2506 1754                                     l2602 117C  
                                   l2610 11C0                                     l3250 18C8  
                                   l2380 1284                                     l2372 11F2  
                                   l2356 1340                                     l2364 1410  
                                   l2532 1B8C                                     l2524 1B32  
                                   l2540 1BA8                                     l2620 14FA  
                                   l2700 14DC                                     l2460 167C  
                                   l2452 1656                                     l2444 1632  
                                   l2436 160C                                     l2428 15E4  
                                   l2516 17CC                                     l2508 1764  
                                   l2604 118E                                     l1740 1DF6  
                                   l3260 192A                                     l3252 18D4  
                                   l2374 1206                                     l2358 1396  
                                   l2526 1B42                                     l2390 1AC4  
                                   l2542 1BE8                                     l2622 150E  
                                   l2550 1A6A                                     l2702 14E8  
                                   l2454 166C                                     l2446 163A  
                                   l2462 1682                                     l2438 1614  
                                   l2470 16A4                                     l2606 11A8  
                                   l2614 11CC                                     l2710 1C40  
                                   l3262 193A                                     l3254 18EC  
                                   l3246 18A6                                     l2384 12D4  
                                   l2376 1226                                     l2528 1B62  
                                   l2392 1AD4                                     l2536 1B90  
                                   l2640 155A                                     l2632 152E  
                                   l2624 1516                                     l2560 1AA6  
                                   l2552 1A76                                     l2704 14F6  
                                   l2464 1692                                     l2456 1674  
                                   l2448 1642                                     l2480 16D0  
                                   l2472 16A8                                     l2608 11AA  
                                   l2712 1C50                                     l1736 1DF0  
                                   l3256 18FA                                     l3248 18AA  
                                   l2378 122E                                     l2386 1300  
                                   l2394 1ADC                                     l2538 1BA0  
                                   l2650 159E                                     l2642 1566  
                                   l2634 153A                                     l2626 152A  
                                   l2562 1AA8                                     l2546 1A4E  
                                   l2466 169A                                     l2458 1676  
                                   l2490 1708                                     l2482 16D8  
                                   l2474 16B6                                     l2570 1032  
                                   l2714 1C6E                                     l1738 1DF4  
                                   l2730 19D8                                     l3258 190C  
                                   l3268 13FA                                     l2396 1B2E  
                                   l2652 15AA                                     l2644 1580  
                                   l2636 153C                                     l2660 15DC  
                                   l2564 1AB8                                     l2548 1A62  
                                   l2492 171E                                     l2484 16EA  
                                   l2476 16BE                                     l2580 1078  
                                   l2572 1056                                     l2708 1C38  
                                   l2732 19EC                                     l2654 15B6  
                                   l2646 1586                                     l2638 154C  
                                   l2558 1A7A                                     l2566 1AC0  
                                   l2670 1444                                     l2494 1726  
                                   l2486 16F2                                     l2478 16C2  
                                   l2590 10EE                                     l2582 1096  
                                   l2574 105E                                     l2742 1A04  
                                   l2750 1A4A                                     l2734 19F4  
                                   l2830 183E                                     l2822 17FE  
                                   l2656 15C2                                     l2648 1592  
                                   l2680 1456                                     l2664 1414  
                                   l2496 172C                                     l2488 16FA  
                                   l2592 111E                                     l2584 10B4  
                                   l2576 106A                                     l2840 1BEE  
                                   l2744 1A30                                     l2736 1A00  
                                   l2760 1966                                     l2832 186C  
                                   l2824 180E                                     l2658 15CE  
                                   l2690 14A0                                     l2682 1466  
                                   l2666 1428                                     l2498 1732  
                                   l2594 113A                                     l2586 10CC  
                                   l2578 106E                                     l2850 1C34  
                                   l2842 1BF2                                     l2746 1A32  
                                   l2762 1978                                     l2770 19AE  
                                   l2754 1944                                     l2834 1870  
                                   l2826 1820                                     l2692 14AC  
                                   l2684 1474                                     l2676 1448  
                                   l2668 1430                                     l2780 1DA4  
                                   l2596 114C                                     l2588 10D6  
                                   l2844 1C02                                     l2748 1A42  
                                   l2764 198A                                     l2772 19D4  
                                   l2756 1958                                     l2836 18A2  
                                   l2828 1828                                     l2694 14B8  
                                   l2686 1480                                     l2678 1454  
                                   l2854 1E3A                                     l2782 1DA6  
                                   l2598 115C                                     l2790 1D42  
                                   l2846 1C0A                                     l2766 199C  
                                   l2758 1960                                     l2696 14C4  
                                   l2688 149A                                     l2776 1D92  
                                   l2792 1D52                                     l2784 1D2A  
                                   l2848 1C22                                     l2856 1E22  
                                   l2698 14D0                                     l2778 1D9A  
                                   l2786 1D32                                     l2858 1E26  
                                   l2796 1E0C                                     l2788 1D3A  
                                   STR_1 102D                                     STR_4 1021  
                                   STR_5 1011                                     u2000 18A2  
                                   u2001 189E                                     u2010 1C02  
                                   u2011 1BFE       lcd_8bit_send_command@l_pin_counter 003D  
                                   u1420 1206                                     u1404 135E  
                                   u1500 15F2                                     u1421 1202  
                                   u1405 135A                                     u1501 15EE  
                                   _LATA 0F89                                     u1430 1226  
                                   u1414 13B4                                     u1510 160C  
                                   _LATB 0F8A                                     u1431 1222  
                                   u1415 13B0                                     u1511 1608  
                                   _LATC 0F8B                                     u1520 1632  
                                   u1600 171E                                     _LATD 0F8C  
                                   u1521 162E                                     u1601 171A  
                                   _LATE 0F8D                                     u1530 1650  
                                   u1610 1742                                     u1531 164C  
                                   u1611 173E                                     u1460 12EA  
                                   u1444 124C                                     u1380 1318  
                                   u1700 1A62                                     u1540 166C  
                                   u1620 1764                                     u1461 12E4  
                                   u1445 1248                                     u1381 1314  
                                   u1701 1A5E                                     u1541 1668  
                                   u1621 1760                                     u1454 12A2  
                                   u1390 1338                                     u1470 1AD4  
                                   u1550 1692                                     u1630 1774  
                                   u1455 129E                                     u1391 1334  
                                   u1471 1AD0                                     u1551 168E  
                                   u1631 1770                                     u1480 1CC6  
                                   u1720 1AB8                                     u1560 16B6  
                                   u1640 179A                                     u1800 116C  
                                   u1481 1CC2                                     u1721 1AB4  
                                   u1561 16B2                                     u1641 1796  
                                   u1801 1168                                     u1466 12EC  
                                   u1490 1D04                                     u1714 1A94  
                                   u1570 16D0                                     u1650 17CC  
                                   u1810 117C                                     u1730 1056  
                                   u1491 1D00                                     u1715 1A90  
                                   u2507 1486                                     u1571 16CC  
                                   u1651 17C8                                     u1811 1178  
                                   u1731 1052                                     u1580 16EA  
                                   u1660 1D6C                                     u1820 11BC  
                                   u1740 1096                                     u2517 149C  
                                   u1581 16E6                                     u1661 1D68  
                                   u1821 11B8                                     u1741 1092  
                                   u1670 1B42                                     u1830 150E  
                                   u1590 1708                                     u1750 10B4  
                                   u1910 1A42                                     u2470 190C  
                                   u1671 1B3E                                     u1831 150A  
                                   u2527 1D16                                     u1591 1704  
                                   u1751 10B0                                     u1911 1A3E  
                                   u2471 1908                                     u1680 1B62  
                                   u1840 154C                                     u1760 10EA  
                                   u1904 1A1E                                     u1920 1958  
                                   u1681 1B5E                                     u2537 1552  
                                   u1841 1548                                     u1761 10E4  
                                   u1905 1A1A                                     u1921 1954  
                                   u1690 1BA0                                     u1850 1428  
                                   u1930 1DC0                                     u1770 10EC  
                                   u1691 1B9C                                     u2547 156C  
                                   u1851 1424                                     u1931 1DBC  
                                   u1860 1466                                     u1780 114C  
                                   u2557 1582                                     u1861 1462  
                                   u1781 1148                                     u1790 115C  
                                   u1870 1C6E                                     u2567 1CDC  
                                   u1791 1158                                     u1871 1C6A  
                                   u2487 18F2                                     u1960 180E  
                                   u2497 146C                                     u1961 180A  
                                   u1890 19EC                                     u1970 1820  
                                   u1891 19E8                                     u1971 181C  
                                   u1980 1864                                     u1990 1892  
                                   u1987 185A                                     u1997 1888  
                                   abs@a 0035                                     _dbuf 0080  
                                   _main 18A6                                     _exit 1E22  
                                   _prec 0065                                     fsr0h 0FEA  
                                   fsr1h 0FE2                                     indf0 0FEF  
                                   fsr2h 0FDA                                     fsr0l 0FE9  
                                   indf2 0FDF                                     fsr1l 0FE1  
                                   fsr2l 0FD9                                     prodl 0FF3  
                                   start 0000            __end_of_lcd_8bit_send_command 1AC4  
                    __end_of_Application 1E40                             ___param_bank 0000  
                  _lcd_4bit_send_command 1B90                                    ??_abs 0037  
                   _gpio_pin_write_logic 1304                                    ?_main 002F  
                                  ?_exit 0031                          __end_of___awdiv 16A4  
                        __end_of___awmod 1754                          ___awdiv@divisor 0031  
                        ___awdiv@counter 0033                      relay_turn_off@F3065 006A  
                           vfpfcnvrt@fmt 003A                                    _PORTA 0F80  
                                  _PORTB 0F81                                    _PORTC 0F82  
                                  _PORTD 0F83                                    _PORTE 0F84  
                                  _TRISA 0F92                                    _TRISB 0F93  
                                  _TRISC 0F94                                    _TRISD 0F95  
                                  _TRISE 0F96                                    __Exit 1E34  
                                  _lcd_1 0029                                    _lcd_2 001F  
                                  _flags 0067                                    _count 0068  
                                  _funcs 005D                                    _fputc 1754  
               ?_lcd_8bit_send_char_data 0038                                    _width 0063  
                                  _putch 1E40                                    tablat 0FF5  
                                  status 0FD8                          __end_of_sprintf 1D5E  
                        __initialization 1C78                             __end_of_main 1944  
                           __end_of_exit 1E34                    ?_gpio_pin_write_logic 002F  
                 lcd_8bit_set_cursor@lcd 003E                   lcd_8bit_set_cursor@ret 0041  
                 lcd_8bit_set_cursor@row 003F                            _lat_registers 000B  
                                 ??_main 005C                                   ??_exit 0033  
                          __activetblptr 0003                         led_turn_on@F3066 006F  
                                 ?__Exit 002F                                   ?_fputc 002F  
                       ___awdiv@dividend 002F                                   ?_putch 002F  
                          vfpfcnvrt@done 003D                              _Application 1E3A  
                 ?_lcd_4bit_send_command 003A          lcd_send_4bits_enable_signal@lcd 0037  
        lcd_send_4bits_enable_signal@ret 0038                             vfprintf@cfmt 0047  
                              ??___awdiv 0033                                ??___awmod 0033  
                                 _memset 1D92                                   clear_0 1C9E  
                                 clear_1 1CAA                         ___awdiv@quotient 0035  
                        ___awmod@divisor 0031                                   isa$std 0001  
                        ___awmod@counter 0033              lcd_8bit_send_string_pos@lcd 0042  
            lcd_8bit_send_string_pos@ret 0047              lcd_8bit_send_string_pos@row 0043  
            lcd_8bit_send_string_pos@str 0045  gpio_pin_direction_intialize@_pin_config 002F  
                                 fputc@c 002F                             __pdataCOMRAM 0001  
                           __mediumconst 0000                                   tblptrh 0FF7  
                                 tblptrl 0FF6                                   tblptru 0FF8  
                                 putch@c 002F                         __end_of_vfprintf 1C78  
                              ??_sprintf 004C                               __accesstop 0080  
                __end_of__initialization 1CB0                 ??_convert_byte_to_string 005A  
                          ___rparam_used 0001                         ??_lcd_send_4bits 0039  
                 ??_gpio_pin_write_logic 0031                           __pcstackCOMRAM 002F  
                          __end_of__Exit 1E3A                            __end_of_fputc 17FE  
                          __end_of_putch 1E42                 lcd_4bit_send_command@lcd 003A  
               lcd_4bit_send_command@ret 003C                        ??___funcs_on_exit 002F  
                                ??__Exit 0031                                  ??_fputc 0032  
                                ??_putch 002F                               __pbssBANK0 0080  
                             __pnvCOMRAM 0075                   lcd_8bit_initialize@lcd 003E  
                 lcd_8bit_initialize@ret 0041                        led_turn_off@F3071 006E  
                                ?_memset 002F                     led_turn_toggle@F3076 006D  
  lcd_8bit_initialize@l_data_pin_counter 0040    lcd_4bit_initialize@l_data_pin_counter 003F  
                             _btn_values 1001                           _tris_registers 0015  
                                __Hparam 0000                                  __Lparam 0000  
                  _lcd_8bit_send_command 1A4E                                  ___awdiv 15E0  
                                ___awmod 16A4                                ?_vfprintf 0044  
                           __psmallconst 1000               __end_of_gpio_pin_intialize 1B90  
                                __pcinit 1C78     __end_of_lcd_send_4bits_enable_signal 1CF4  
           _lcd_send_4bits_enable_signal 1CB6                                  __ramtop 1000  
               _lcd_8bit_send_string_pos 17FE                                  __ptext0 18A6  
                                __ptext1 17FE                                  __ptext2 1944  
                                __ptext3 19D8                                  __ptext4 1E22  
                                __ptext5 1DF0                                  __ptext6 1E34  
                                __ptext7 1BEC                                  __ptext8 1D2A  
                                __ptext9 1C38                         ___awmod@dividend 002F  
                                _sprintf 1D2A                     end_of_initialization 1CB0  
                      lcd_send_4bits@lcd 0037                        lcd_send_4bits@ret 0039  
                                fputc@fp 0031                             ?_Application 002F  
                                memset@c 0030                                  memset@n 0032  
                                memset@p 0034                  ??_lcd_4bit_send_command 003C  
                  gpio_pin_intialize@ret 0039                        __end_of_vfpfcnvrt 11F2  
                                postdec1 0FE5                                  postdec2 0FDD  
                                postinc0 0FEE                                  postinc1 0FE6  
                                postinc2 0FDE                         vfpfcnvrt@convarg 003F  
                             ??_vfprintf 0047                      _lcd_4bit_initialize 14FA  
                 _convert_byte_to_string 1BEC            ?_lcd_send_4bits_enable_signal 0037  
          gpio_pin_intialize@_pin_config 0037     __end_of_gpio_pin_direction_intialize 1304  
           _gpio_pin_direction_intialize 11F2                     ?_lcd_4bit_initialize 003D  
                     relay_turn_on@F3060 006B                   ?_lcd_8bit_send_command 0038  
                        ___funcs_on_exit 1DF0           lcd_8bit_send_string_pos@coulmn 0044  
        lcd_send_8bits_enable_signal@lcd 0037                              vfpfcnvrt@ap 003B  
                            vfpfcnvrt@cp 003E                              vfpfcnvrt@fp 0039  
                          __pidataCOMRAM 1DC2                           __end_of_memset 1DC2  
                    start_initialization 1C78                      _lcd_8bit_initialize 1414  
                            __end_of_abs 1D92            ?_gpio_pin_direction_intialize 002F  
                  ??_lcd_4bit_initialize 003E                     ?_lcd_8bit_initialize 003E  
                _lcd_8bit_send_char_data 19D8                              vfprintf@fmt 0045  
              convert_byte_to_string@ret 005B                convert_byte_to_string@str 0059  
                               ??_memset 0034             __end_of_ecu_layer_initialize 1E22  
                    _lcd_8bit_set_cursor 1944                               memset@dest 002F  
           lcd_4bit_send_command@command 003B                 lcd_8bit_send_command@lcd 0038  
               lcd_8bit_send_command@ret 003C              convert_byte_to_string@value 005A  
                            __pbssCOMRAM 005D           ??_lcd_send_4bits_enable_signal 0038  
                   ?_lcd_8bit_set_cursor 003E          gpio_pin_direction_intialize@ret 0035  
                __end_of___funcs_on_exit 1E0C                    ??_lcd_8bit_initialize 003F  
             ??_lcd_8bit_send_string_pos 0047              lcd_8bit_send_char_data@data 0039  
        gpio_pin_write_logic@_pin_config 002F                                 ?___awdiv 002F  
                               ?___awmod 002F                          _lcd_counter_txt 0071  
              gpio_pin_write_logic@logic 0030                              __smallconst 1000  
                               ?_sprintf 0048                       _gpio_pin_intialize 1B32  
                  ??_lcd_8bit_set_cursor 0041           ??_gpio_pin_direction_intialize 0030  
              ??_lcd_8bit_send_char_data 003A                      ?_gpio_pin_intialize 0037  
                            _lcd_counter 0069            __end_of_lcd_4bit_send_command 1BEC  
                ?_convert_byte_to_string 0059     lcd_8bit_send_char_data@l_pin_counter 003D  
                              _vfpfcnvrt 1032     __end_of_lcd_send_8bits_enable_signal 1D2A  
           _lcd_send_8bits_enable_signal 1CF4                     ??_gpio_pin_intialize 0038  
              lcd_8bit_set_cursor@coulmn 0040                               vfpfcnvrt@c 0043  
                gpio_pin_write_logic@ret 0036                                copy_data0 1C8C  
                   _ecu_layer_initialize 1E0C                  ??_lcd_8bit_send_command 003A  
                       ?___funcs_on_exit 002F                                 __Exit@ec 002F  
                               __Hrparam 0000                               vfprintf@ap 0046  
                               __Lrparam 0000                               vfprintf@fp 0044  
         __end_of_convert_byte_to_string 1C38                               ?_vfpfcnvrt 0039  
        __end_of_lcd_8bit_send_char_data 1A4E                       __end_of_btn_values 1011  
          ?_lcd_send_8bits_enable_signal 0037                               sprintf@fmt 0049  
             lcd_8bit_send_char_data@lcd 0038               lcd_8bit_send_char_data@ret 003C  
                               __ptext10 1032                                 __ptext11 1754  
                               __ptext20 1A4E                                 __ptext12 1E40  
                               __ptext21 1CF4                                 __ptext13 1D5E  
                               __ptext22 14FA                                 __ptext14 16A4  
                               __ptext23 1B90                                 __ptext15 15E0  
                               __ptext24 1CB6                                 __ptext16 1D92  
                               __ptext25 1AC4                                 __ptext17 1E3A  
                               __ptext26 1B32                                 __ptext18 1E0C  
                               __ptext27 1304                                 __ptext19 1414  
                               __ptext28 11F2                    ?_ecu_layer_initialize 002F  
       __end_of_lcd_8bit_send_string_pos 18A6                                 isa$xinst 0000  
                               _vfprintf 1C38                           _lcd_send_4bits 1AC4  
            __end_of_lcd_4bit_initialize 15E0                                 exit@code 0031  
           __end_of_gpio_pin_write_logic 1414                                sprintf@ap 004C  
                 __end_of_lcd_send_4bits 1B32                              ??_vfpfcnvrt 003C  
                               sprintf@f 004D                                 sprintf@s 0048  
                         _port_registers 0001           ??_lcd_send_8bits_enable_signal 0038  
                 ??_ecu_layer_initialize 0042              __end_of_lcd_8bit_initialize 14FA  
                          ??_Application 0042             lcd_8bit_send_command@command 0039  
                 lcd_4bit_initialize@lcd 003D                   lcd_4bit_initialize@ret 0040  
