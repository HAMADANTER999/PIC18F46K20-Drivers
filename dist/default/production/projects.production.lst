

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Aug 31 15:08:13 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,inline
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,inline
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,inline
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35   000000                     
    36                           ; Generated 12/10/2023 GMT
    37                           ; 
    38                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F46K20 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70   000000                     
    71                           	psect	idataCOMRAM
    72   001414                     __pidataCOMRAM:
    73                           	callstack 0
    74                           
    75                           ;initializer for _port_registers
    76   001414  80                 	db	128
    77   001415  0F                 	db	15
    78   001416  81                 	db	129
    79   001417  0F                 	db	15
    80   001418  82                 	db	130
    81   001419  0F                 	db	15
    82   00141A  83                 	db	131
    83   00141B  0F                 	db	15
    84   00141C  84                 	db	132
    85   00141D  0F                 	db	15
    86                           
    87                           ;initializer for _lat_registers
    88   00141E  89                 	db	137
    89   00141F  0F                 	db	15
    90   001420  8A                 	db	138
    91   001421  0F                 	db	15
    92   001422  8B                 	db	139
    93   001423  0F                 	db	15
    94   001424  8C                 	db	140
    95   001425  0F                 	db	15
    96   001426  8D                 	db	141
    97   001427  0F                 	db	15
    98                           
    99                           ;initializer for _tris_registers
   100   001428  92                 	db	146
   101   001429  0F                 	db	15
   102   00142A  93                 	db	147
   103   00142B  0F                 	db	15
   104   00142C  94                 	db	148
   105   00142D  0F                 	db	15
   106   00142E  95                 	db	149
   107   00142F  0F                 	db	15
   108   001430  96                 	db	150
   109   001431  0F                 	db	15
   110                           
   111                           ;initializer for _RB7_Flag
   112   001432  01                 	db	1
   113                           
   114                           ;initializer for _RB6_Flag
   115   001433  01                 	db	1
   116                           
   117                           ;initializer for _RB5_Flag
   118   001434  01                 	db	1
   119                           
   120                           ;initializer for _RB4_Flag
   121   001435  01                 	db	1
   122                           
   123                           ;initializer for _adc_1
   124   001436  00                 	db	0
   125   001437  00                 	db	0
   126   001438  05                 	db	5
   127   001439  05                 	db	5
   128   00143A  00                 	db	0
   129   00143B  02                 	db	2
   130                           
   131                           	psect	smallconst
   132   001000                     __psmallconst:
   133                           	callstack 0
   134   001000  00                 	db	0
   135   001001                     _btn_values:
   136                           	callstack 0
   137   001001  37                 	db	55
   138   001002  38                 	db	56
   139   001003  39                 	db	57
   140   001004  2F                 	db	47
   141   001005  34                 	db	52
   142   001006  35                 	db	53
   143   001007  36                 	db	54
   144   001008  37                 	db	55
   145   001009  31                 	db	49
   146   00100A  32                 	db	50
   147   00100B  33                 	db	51
   148   00100C  34                 	db	52
   149   00100D  23                 	db	35
   150   00100E  30                 	db	48
   151   00100F  3D                 	db	61
   152   001010  2B                 	db	43
   153   001011                     __end_of_btn_values:
   154                           	callstack 0
   155   000000                     _ADCON1bits	set	4033
   156   000000                     _ADRESL	set	4035
   157   000000                     _ADRESH	set	4036
   158   000000                     _INTCON2bits	set	4081
   159   000000                     _EECON2	set	4007
   160   001011                     STR_1:
   161   001011  25                 	db	37
   162   001012  69                 	db	105	;'i'
   163   001013  00                 	db	0
   164   001014  00                 	db	0	; dummy byte at the end
   165   000000                     
   166                           	psect	nvCOMRAM
   167   00005B                     __pnvCOMRAM:
   168                           	callstack 0
   169   00005B                     _ret:
   170                           	callstack 0
   171   00005B                     	ds	1
   172   000000                     _PORTBbits	set	3969
   173   000000                     _EECON1bits	set	4006
   174   000000                     _EEDATA	set	4008
   175   000000                     _EEADR	set	4009
   176   000000                     _EEADRH	set	4010
   177   000000                     _INTCONbits	set	4082
   178   000000                     _PORTA	set	3968
   179   000000                     _LATA	set	3977
   180   000000                     _TRISA	set	3986
   181   000000                     _ADCON2bits	set	4032
   182   000000                     _ADCON0bits	set	4034
   183   000000                     _INTCON3bits	set	4080
   184   000000                     _TRISE	set	3990
   185   000000                     _TRISD	set	3989
   186   000000                     _TRISC	set	3988
   187   000000                     _TRISB	set	3987
   188   000000                     _LATE	set	3981
   189   000000                     _LATD	set	3980
   190   000000                     _LATC	set	3979
   191   000000                     _LATB	set	3978
   192   000000                     _PORTE	set	3972
   193   000000                     _PORTD	set	3971
   194   000000                     _PORTC	set	3970
   195   000000                     _PORTB	set	3969
   196                           
   197                           ; #config settings
   198                           
   199                           	psect	cinit
   200   0013DE                     __pcinit:
   201                           	callstack 0
   202   0013DE                     start_initialization:
   203                           	callstack 0
   204   0013DE                     __initialization:
   205                           	callstack 0
   206                           
   207                           ; Initialize objects allocated to COMRAM (40 bytes)
   208                           ; load TBLPTR registers with __pidataCOMRAM
   209   0013DE  0E14               	movlw	low __pidataCOMRAM
   210   0013E0  6EF6               	movwf	tblptrl,c
   211   0013E2  0E14               	movlw	high __pidataCOMRAM
   212   0013E4  6EF7               	movwf	tblptrh,c
   213   0013E6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   214   0013E8  6EF8               	movwf	tblptru,c
   215   0013EA  EE00  F001         	lfsr	0,__pdataCOMRAM
   216   0013EE  EE10 F028          	lfsr	1,40
   217   0013F2                     copy_data0:
   218   0013F2  0009               	tblrd		*+
   219   0013F4  CFF5 FFEE          	movff	tablat,postinc0
   220   0013F8  50E5               	movf	postdec1,w,c
   221   0013FA  50E1               	movf	fsr1l,w,c
   222   0013FC  E1FA               	bnz	copy_data0
   223                           
   224                           ; Clear objects allocated to COMRAM (37 bytes)
   225   0013FE  EE00  F029         	lfsr	0,__pbssCOMRAM
   226   001402  0E25               	movlw	37
   227   001404                     clear_0:
   228   001404  6AEE               	clrf	postinc0,c
   229   001406  06E8               	decf	wreg,f,c
   230   001408  E1FD               	bnz	clear_0
   231   00140A                     end_of_initialization:
   232                           	callstack 0
   233   00140A                     __end_of__initialization:
   234                           	callstack 0
   235   00140A  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   236   00140C  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   237   00140E  0100               	movlb	0
   238   001410  EF7F  F009         	goto	_main	;jump to C main() function
   239                           
   240                           	psect	bssCOMRAM
   241   000029                     __pbssCOMRAM:
   242                           	callstack 0
   243   000029                     _RB7_InterruptHandler_LOW:
   244                           	callstack 0
   245   000029                     	ds	2
   246   00002B                     _RB7_InterruptHandler_HIGH:
   247                           	callstack 0
   248   00002B                     	ds	2
   249   00002D                     _RB6_InterruptHandler_LOW:
   250                           	callstack 0
   251   00002D                     	ds	2
   252   00002F                     _RB6_InterruptHandler_HIGH:
   253                           	callstack 0
   254   00002F                     	ds	2
   255   000031                     _RB5_InterruptHandler_LOW:
   256                           	callstack 0
   257   000031                     	ds	2
   258   000033                     _RB5_InterruptHandler_HIGH:
   259                           	callstack 0
   260   000033                     	ds	2
   261   000035                     _RB4_InterruptHandler_LOW:
   262                           	callstack 0
   263   000035                     	ds	2
   264   000037                     _RB4_InterruptHandler_HIGH:
   265                           	callstack 0
   266   000037                     	ds	2
   267   000039                     _INT2_InterruptHandler:
   268                           	callstack 0
   269   000039                     	ds	2
   270   00003B                     _INT1_InterruptHandler:
   271                           	callstack 0
   272   00003B                     	ds	2
   273   00003D                     _INT0_InterruptHandler:
   274                           	callstack 0
   275   00003D                     	ds	2
   276   00003F                     relay_turn_off@F3314:
   277                           	callstack 0
   278   00003F                     	ds	1
   279   000040                     relay_turn_on@F3309:
   280                           	callstack 0
   281   000040                     	ds	1
   282   000041                     relay_initialize@F3304:
   283                           	callstack 0
   284   000041                     	ds	1
   285   000042                     led_turn_toggle@F3325:
   286                           	callstack 0
   287   000042                     	ds	1
   288   000043                     led_turn_off@F3320:
   289                           	callstack 0
   290   000043                     	ds	1
   291   000044                     led_turn_on@F3315:
   292                           	callstack 0
   293   000044                     	ds	1
   294   000045                     led_initialize@F3310:
   295                           	callstack 0
   296   000045                     	ds	1
   297   000046                     _res_4:
   298                           	callstack 0
   299   000046                     	ds	2
   300   000048                     _res_3:
   301                           	callstack 0
   302   000048                     	ds	2
   303   00004A                     _res_2:
   304                           	callstack 0
   305   00004A                     	ds	2
   306   00004C                     _res_1:
   307                           	callstack 0
   308   00004C                     	ds	2
   309                           
   310                           	psect	dataCOMRAM
   311   000001                     __pdataCOMRAM:
   312                           	callstack 0
   313   000001                     _port_registers:
   314                           	callstack 0
   315   000001                     	ds	10
   316   00000B                     _lat_registers:
   317                           	callstack 0
   318   00000B                     	ds	10
   319   000015                     _tris_registers:
   320                           	callstack 0
   321   000015                     	ds	10
   322   00001F                     _RB7_Flag:
   323                           	callstack 0
   324   00001F                     	ds	1
   325   000020                     _RB6_Flag:
   326                           	callstack 0
   327   000020                     	ds	1
   328   000021                     _RB5_Flag:
   329                           	callstack 0
   330   000021                     	ds	1
   331   000022                     _RB4_Flag:
   332                           	callstack 0
   333   000022                     	ds	1
   334   000023                     _adc_1:
   335                           	callstack 0
   336   000023                     	ds	6
   337                           
   338                           	psect	cstackCOMRAM
   339   00004E                     __pcstackCOMRAM:
   340                           	callstack 0
   341   00004E                     RB4_ISR@RB4_source:
   342                           	callstack 0
   343   00004E                     RB5_ISR@RB5_source:
   344                           	callstack 0
   345   00004E                     RB6_ISR@RB6_source:
   346                           	callstack 0
   347   00004E                     RB7_ISR@RB7_source:
   348                           	callstack 0
   349                           
   350                           ; 1 bytes @ 0x0
   351   00004E                     	ds	1
   352   00004F                     ??_adc_input_channel_port_configure:
   353   00004F                     ADC_StartConversion@_adc:
   354                           	callstack 0
   355   00004F                     ADC_GetConversionResult@_adc:
   356                           	callstack 0
   357   00004F                     select_result_format@_adc:
   358                           	callstack 0
   359   00004F                     configure_voltage_reference@_adc:
   360                           	callstack 0
   361                           
   362                           ; 1 bytes @ 0x1
   363   00004F                     	ds	1
   364   000050                     ADC_StartConversion@ret:
   365                           	callstack 0
   366   000050                     ADC_GetConversionResult@conversion_result:
   367                           	callstack 0
   368                           
   369                           ; 1 bytes @ 0x2
   370   000050                     	ds	1
   371   000051                     ??_ADC_GetConversionResult:
   372   000051                     adc_input_channel_port_configure@channel:
   373                           	callstack 0
   374                           
   375                           ; 1 bytes @ 0x3
   376   000051                     	ds	1
   377   000052                     ADC_Init@_adc:
   378                           	callstack 0
   379   000052                     ADC_SelectChannel@_adc:
   380                           	callstack 0
   381                           
   382                           ; 1 bytes @ 0x4
   383   000052                     	ds	1
   384   000053                     ??_ADC_Init:
   385   000053                     ADC_SelectChannel@channel:
   386                           	callstack 0
   387                           
   388                           ; 1 bytes @ 0x5
   389   000053                     	ds	1
   390   000054                     ??_ADC_SelectChannel:
   391   000054                     ADC_Init@ret:
   392                           	callstack 0
   393   000054                     ADC_GetConversionResult@ret:
   394                           	callstack 0
   395                           
   396                           ; 1 bytes @ 0x6
   397   000054                     	ds	1
   398   000055                     ADC_SelectChannel@ret:
   399                           	callstack 0
   400                           
   401                           ; 1 bytes @ 0x7
   402   000055                     	ds	1
   403   000056                     ADC_GetConversion_Blocking@_adc:
   404                           	callstack 0
   405                           
   406                           ; 1 bytes @ 0x8
   407   000056                     	ds	1
   408   000057                     ADC_GetConversion_Blocking@channel:
   409                           	callstack 0
   410                           
   411                           ; 1 bytes @ 0x9
   412   000057                     	ds	1
   413   000058                     ADC_GetConversion_Blocking@conversion_result:
   414                           	callstack 0
   415                           
   416                           ; 1 bytes @ 0xA
   417   000058                     	ds	1
   418   000059                     ADC_GetConversion_Blocking@l_conversion_status:
   419                           	callstack 0
   420                           
   421                           ; 1 bytes @ 0xB
   422   000059                     	ds	1
   423   00005A                     ADC_GetConversion_Blocking@ret:
   424                           	callstack 0
   425                           
   426                           ; 1 bytes @ 0xC
   427   00005A                     	ds	1
   428   00005B                     
   429                           ; 1 bytes @ 0xD
   430 ;;
   431 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   432 ;;
   433 ;; *************** function _main *****************
   434 ;; Defined at:
   435 ;;		line 28 in file "application.c"
   436 ;; Parameters:    Size  Location     Type
   437 ;;		None
   438 ;; Auto vars:     Size  Location     Type
   439 ;;		None
   440 ;; Return value:  Size  Location     Type
   441 ;;                  2  768[None  ] int 
   442 ;; Registers used:
   443 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   444 ;; Tracked objects:
   445 ;;		On entry : 0/0
   446 ;;		On exit  : 0/0
   447 ;;		Unchanged: 0/0
   448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   453 ;;Total ram usage:        0 bytes
   454 ;; Hardware stack levels required when called: 5
   455 ;; This function calls:
   456 ;;		_ADC_GetConversion_Blocking
   457 ;;		_Application
   458 ;; This function is called by:
   459 ;;		Startup code after reset
   460 ;; This function uses a non-reentrant model
   461 ;;
   462                           
   463                           	psect	text0
   464   0012FE                     __ptext0:
   465                           	callstack 0
   466   0012FE                     _main:
   467                           	callstack 26
   468   0012FE                     
   469                           ;application.c: 30:     Application ();
   470   0012FE  EC63  F00A         	call	_Application	;wreg free
   471   001302                     l769:
   472                           
   473                           ;application.c: 32:     {;application.c: 33:         ret = ADC_GetConversion_Blocking (&
      +                          adc_1, ADC_CHANNEL_AN0, &res_1);
   474   001302  0E23               	movlw	low _adc_1
   475   001304  6E56               	movwf	ADC_GetConversion_Blocking@_adc^0,c
   476   001306  0E00               	movlw	0
   477   001308  6E57               	movwf	ADC_GetConversion_Blocking@channel^0,c
   478   00130A  0E4C               	movlw	low _res_1
   479   00130C  6E58               	movwf	ADC_GetConversion_Blocking@conversion_result^0,c
   480   00130E  EC20  F009         	call	_ADC_GetConversion_Blocking	;wreg free
   481   001312  6E5B               	movwf	_ret^0,c
   482                           
   483                           ;application.c: 34:         ret = ADC_GetConversion_Blocking (&adc_1, ADC_CHANNEL_AN1, &
      +                          res_2);
   484   001314  0E23               	movlw	low _adc_1
   485   001316  6E56               	movwf	ADC_GetConversion_Blocking@_adc^0,c
   486   001318  0E01               	movlw	1
   487   00131A  6E57               	movwf	ADC_GetConversion_Blocking@channel^0,c
   488   00131C  0E4A               	movlw	low _res_2
   489   00131E  6E58               	movwf	ADC_GetConversion_Blocking@conversion_result^0,c
   490   001320  EC20  F009         	call	_ADC_GetConversion_Blocking	;wreg free
   491   001324  6E5B               	movwf	_ret^0,c
   492                           
   493                           ;application.c: 35:         ret = ADC_GetConversion_Blocking (&adc_1, ADC_CHANNEL_AN2, &
      +                          res_3);
   494   001326  0E23               	movlw	low _adc_1
   495   001328  6E56               	movwf	ADC_GetConversion_Blocking@_adc^0,c
   496   00132A  0E02               	movlw	2
   497   00132C  6E57               	movwf	ADC_GetConversion_Blocking@channel^0,c
   498   00132E  0E48               	movlw	low _res_3
   499   001330  6E58               	movwf	ADC_GetConversion_Blocking@conversion_result^0,c
   500   001332  EC20  F009         	call	_ADC_GetConversion_Blocking	;wreg free
   501   001336  6E5B               	movwf	_ret^0,c
   502                           
   503                           ;application.c: 36:         ret = ADC_GetConversion_Blocking (&adc_1, ADC_CHANNEL_AN3, &
      +                          res_4);
   504   001338  0E23               	movlw	low _adc_1
   505   00133A  6E56               	movwf	ADC_GetConversion_Blocking@_adc^0,c
   506   00133C  0E03               	movlw	3
   507   00133E  6E57               	movwf	ADC_GetConversion_Blocking@channel^0,c
   508   001340  0E46               	movlw	low _res_4
   509   001342  6E58               	movwf	ADC_GetConversion_Blocking@conversion_result^0,c
   510   001344  EC20  F009         	call	_ADC_GetConversion_Blocking	;wreg free
   511   001348  6E5B               	movwf	_ret^0,c
   512   00134A  EF81  F009         	goto	l769
   513   00134E  EF47  F001         	goto	start
   514   001352                     __end_of_main:
   515                           	callstack 0
   516                           
   517 ;; *************** function _Application *****************
   518 ;; Defined at:
   519 ;;		line 41 in file "application.c"
   520 ;; Parameters:    Size  Location     Type
   521 ;;		None
   522 ;; Auto vars:     Size  Location     Type
   523 ;;		None
   524 ;; Return value:  Size  Location     Type
   525 ;;                  1    wreg      void 
   526 ;; Registers used:
   527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   528 ;; Tracked objects:
   529 ;;		On entry : 0/0
   530 ;;		On exit  : 0/0
   531 ;;		Unchanged: 0/0
   532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   537 ;;Total ram usage:        0 bytes
   538 ;; Hardware stack levels used: 1
   539 ;; Hardware stack levels required when called: 4
   540 ;; This function calls:
   541 ;;		_ADC_Init
   542 ;;		_ecu_layer_initialize
   543 ;; This function is called by:
   544 ;;		_main
   545 ;; This function uses a non-reentrant model
   546 ;;
   547                           
   548                           	psect	text1
   549   0014C6                     __ptext1:
   550                           	callstack 0
   551   0014C6                     _Application:
   552                           	callstack 26
   553   0014C6                     
   554                           ;application.c: 43:     ret = ADC_Init(&adc_1);
   555   0014C6  0E23               	movlw	low _adc_1
   556   0014C8  6E52               	movwf	ADC_Init@_adc^0,c
   557   0014CA  ECD5  F008         	call	_ADC_Init	;wreg free
   558   0014CE  6E5B               	movwf	_ret^0,c
   559   0014D0                     
   560                           ;application.c: 44:     ecu_layer_initialize();
   561   0014D0  EC71  F00A         	call	_ecu_layer_initialize	;wreg free
   562   0014D4  0012               	return		;funcret
   563   0014D6                     __end_of_Application:
   564                           	callstack 0
   565                           
   566 ;; *************** function _ecu_layer_initialize *****************
   567 ;; Defined at:
   568 ;;		line 12 in file "ECU_Layer/ecu_layer_init.c"
   569 ;; Parameters:    Size  Location     Type
   570 ;;		None
   571 ;; Auto vars:     Size  Location     Type
   572 ;;		None
   573 ;; Return value:  Size  Location     Type
   574 ;;                  1    wreg      void 
   575 ;; Registers used:
   576 ;;		None
   577 ;; Tracked objects:
   578 ;;		On entry : 0/0
   579 ;;		On exit  : 0/0
   580 ;;		Unchanged: 0/0
   581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   586 ;;Total ram usage:        0 bytes
   587 ;; Hardware stack levels used: 1
   588 ;; Hardware stack levels required when called: 2
   589 ;; This function calls:
   590 ;;		Nothing
   591 ;; This function is called by:
   592 ;;		_Application
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596                           	psect	text2
   597   0014E2                     __ptext2:
   598                           	callstack 0
   599   0014E2                     _ecu_layer_initialize:
   600                           	callstack 27
   601   0014E2  0012               	return		;funcret
   602   0014E4                     __end_of_ecu_layer_initialize:
   603                           	callstack 0
   604                           
   605 ;; *************** function _ADC_Init *****************
   606 ;; Defined at:
   607 ;;		line 26 in file "MCAL_Layer/ADC/hal_adc.c"
   608 ;; Parameters:    Size  Location     Type
   609 ;;  _adc            1    4[COMRAM] PTR const struct .
   610 ;;		 -> adc_1(6), 
   611 ;; Auto vars:     Size  Location     Type
   612 ;;  ret             1    6[COMRAM] unsigned char 
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      unsigned char 
   615 ;; Registers used:
   616 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   622 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   623 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   624 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   625 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   626 ;;Total ram usage:        3 bytes
   627 ;; Hardware stack levels used: 1
   628 ;; Hardware stack levels required when called: 3
   629 ;; This function calls:
   630 ;;		_adc_input_channel_port_configure
   631 ;;		_configure_voltage_reference
   632 ;;		_select_result_format
   633 ;; This function is called by:
   634 ;;		_Application
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638                           	psect	text3
   639   0011AA                     __ptext3:
   640                           	callstack 0
   641   0011AA                     _ADC_Init:
   642                           	callstack 26
   643   0011AA                     
   644                           ;MCAL_Layer/ADC/hal_adc.c: 27:     Std_ReturnType ret = (Std_ReturnType)0x01;
   645   0011AA  0E01               	movlw	1
   646   0011AC  6E54               	movwf	ADC_Init@ret^0,c
   647                           
   648                           ;MCAL_Layer/ADC/hal_adc.c: 28:     if (((void*)0) == _adc)
   649   0011AE  5052               	movf	ADC_Init@_adc^0,w,c
   650   0011B0  A4D8               	btfss	status,2,c
   651   0011B2  EFDD  F008         	goto	u1971
   652   0011B6  EFDF  F008         	goto	u1970
   653   0011BA                     u1971:
   654   0011BA  EFE3  F008         	goto	l800
   655   0011BE                     u1970:
   656   0011BE                     
   657                           ;MCAL_Layer/ADC/hal_adc.c: 29:     {;MCAL_Layer/ADC/hal_adc.c: 30:         ret = (Std_Re
      +                          turnType)0x00;
   658   0011BE  0E00               	movlw	0
   659   0011C0  6E54               	movwf	ADC_Init@ret^0,c
   660                           
   661                           ;MCAL_Layer/ADC/hal_adc.c: 31:     }
   662   0011C2  EF1E  F009         	goto	l3063
   663   0011C6                     l800:
   664                           
   665                           ;MCAL_Layer/ADC/hal_adc.c: 33:     {;MCAL_Layer/ADC/hal_adc.c: 35:         (ADCON0bits.A
      +                          DON = 0);
   666   0011C6  90C2               	bcf	194,0,c	;volatile
   667   0011C8                     
   668                           ;MCAL_Layer/ADC/hal_adc.c: 37:         ADCON2bits.ACQT = _adc->Acquisition_time;
   669   0011C8  5052               	movf	ADC_Init@_adc^0,w,c
   670   0011CA  6ED9               	movwf	fsr2l,c
   671   0011CC  6ADA               	clrf	fsr2h,c
   672   0011CE  0E02               	movlw	2
   673   0011D0  26D9               	addwf	fsr2l,f,c
   674   0011D2  50DF               	movf	indf2,w,c
   675   0011D4  6E53               	movwf	??_ADC_Init^0,c
   676   0011D6  4653               	rlncf	??_ADC_Init^0,f,c
   677   0011D8  4653               	rlncf	??_ADC_Init^0,f,c
   678   0011DA  4653               	rlncf	??_ADC_Init^0,f,c
   679   0011DC  50C0               	movf	192,w,c	;volatile
   680   0011DE  1853               	xorwf	??_ADC_Init^0,w,c
   681   0011E0  0BC7               	andlw	-57
   682   0011E2  1853               	xorwf	??_ADC_Init^0,w,c
   683   0011E4  6EC0               	movwf	192,c	;volatile
   684                           
   685                           ;MCAL_Layer/ADC/hal_adc.c: 39:         ADCON2bits.ADCS = _adc->convertion_clock;
   686   0011E6  5052               	movf	ADC_Init@_adc^0,w,c
   687   0011E8  6ED9               	movwf	fsr2l,c
   688   0011EA  6ADA               	clrf	fsr2h,c
   689   0011EC  0E03               	movlw	3
   690   0011EE  26D9               	addwf	fsr2l,f,c
   691   0011F0  50DF               	movf	indf2,w,c
   692   0011F2  6E53               	movwf	??_ADC_Init^0,c
   693   0011F4  50C0               	movf	192,w,c	;volatile
   694   0011F6  1853               	xorwf	??_ADC_Init^0,w,c
   695   0011F8  0BF8               	andlw	-8
   696   0011FA  1853               	xorwf	??_ADC_Init^0,w,c
   697   0011FC  6EC0               	movwf	192,c	;volatile
   698                           
   699                           ;MCAL_Layer/ADC/hal_adc.c: 41:         ADCON0bits.CHS = _adc->adc_channel;
   700   0011FE  5052               	movf	ADC_Init@_adc^0,w,c
   701   001200  6ED9               	movwf	fsr2l,c
   702   001202  6ADA               	clrf	fsr2h,c
   703   001204  0E04               	movlw	4
   704   001206  26D9               	addwf	fsr2l,f,c
   705   001208  50DF               	movf	indf2,w,c
   706   00120A  6E53               	movwf	??_ADC_Init^0,c
   707   00120C  4653               	rlncf	??_ADC_Init^0,f,c
   708   00120E  4653               	rlncf	??_ADC_Init^0,f,c
   709   001210  50C2               	movf	194,w,c	;volatile
   710   001212  1853               	xorwf	??_ADC_Init^0,w,c
   711   001214  0BC3               	andlw	-61
   712   001216  1853               	xorwf	??_ADC_Init^0,w,c
   713   001218  6EC2               	movwf	194,c	;volatile
   714   00121A                     
   715                           ;MCAL_Layer/ADC/hal_adc.c: 42:         adc_input_channel_port_configure(_adc->adc_channe
      +                          l);
   716   00121A  5052               	movf	ADC_Init@_adc^0,w,c
   717   00121C  6ED9               	movwf	fsr2l,c
   718   00121E  6ADA               	clrf	fsr2h,c
   719   001220  0E04               	movlw	4
   720   001222  26D9               	addwf	fsr2l,f,c
   721   001224  50DF               	movf	indf2,w,c
   722   001226  EC0B  F008         	call	_adc_input_channel_port_configure
   723   00122A                     
   724                           ;MCAL_Layer/ADC/hal_adc.c: 46:         select_result_format(_adc);
   725   00122A  C052  F04F         	movff	ADC_Init@_adc,select_result_format@_adc
   726   00122E  ECA9  F009         	call	_select_result_format	;wreg free
   727   001232                     
   728                           ;MCAL_Layer/ADC/hal_adc.c: 48:         configure_voltage_reference(_adc);
   729   001232  C052  F04F         	movff	ADC_Init@_adc,configure_voltage_reference@_adc
   730   001236  EC52  F009         	call	_configure_voltage_reference	;wreg free
   731   00123A                     
   732                           ;MCAL_Layer/ADC/hal_adc.c: 50:         (ADCON0bits.ADON = 1);
   733   00123A  80C2               	bsf	194,0,c	;volatile
   734   00123C                     l3063:
   735                           
   736                           ;MCAL_Layer/ADC/hal_adc.c: 52:     return ret;
   737   00123C  5054               	movf	ADC_Init@ret^0,w,c
   738   00123E  0012               	return		;funcret
   739   001240                     __end_of_ADC_Init:
   740                           	callstack 0
   741                           
   742 ;; *************** function _select_result_format *****************
   743 ;; Defined at:
   744 ;;		line 240 in file "MCAL_Layer/ADC/hal_adc.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;  _adc            1    1[COMRAM] PTR const struct .
   747 ;;		 -> adc_1(6), 
   748 ;; Auto vars:     Size  Location     Type
   749 ;;  ret             1    0        unsigned char 
   750 ;; Return value:  Size  Location     Type
   751 ;;                  1    wreg      unsigned char 
   752 ;; Registers used:
   753 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   754 ;; Tracked objects:
   755 ;;		On entry : 0/0
   756 ;;		On exit  : 0/0
   757 ;;		Unchanged: 0/0
   758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   759 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   762 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   763 ;;Total ram usage:        1 bytes
   764 ;; Hardware stack levels used: 1
   765 ;; Hardware stack levels required when called: 2
   766 ;; This function calls:
   767 ;;		Nothing
   768 ;; This function is called by:
   769 ;;		_ADC_Init
   770 ;; This function uses a non-reentrant model
   771 ;;
   772                           
   773                           	psect	text4
   774   001352                     __ptext4:
   775                           	callstack 0
   776   001352                     _select_result_format:
   777                           	callstack 26
   778   001352                     
   779                           ;MCAL_Layer/ADC/hal_adc.c: 242:     if (((void*)0) == _adc)
   780   001352  504F               	movf	select_result_format@_adc^0,w,c
   781   001354  A4D8               	btfss	status,2,c
   782   001356  EFAF  F009         	goto	u1911
   783   00135A  EFB1  F009         	goto	u1910
   784   00135E                     u1911:
   785   00135E  EFB3  F009         	goto	l3033
   786   001362                     u1910:
   787   001362                     
   788                           ;MCAL_Layer/ADC/hal_adc.c: 245:     }
   789   001362  EFD2  F009         	goto	l873
   790   001366                     l3033:
   791                           
   792                           ;MCAL_Layer/ADC/hal_adc.c: 247:     {;MCAL_Layer/ADC/hal_adc.c: 248:         if (0X01U =
      +                          = _adc->result_format)
   793   001366  504F               	movf	select_result_format@_adc^0,w,c
   794   001368  6ED9               	movwf	fsr2l,c
   795   00136A  6ADA               	clrf	fsr2h,c
   796   00136C  0E05               	movlw	5
   797   00136E  26D9               	addwf	fsr2l,f,c
   798   001370  A2DF               	btfss	indf2,1,c
   799   001372  EFBD  F009         	goto	u1921
   800   001376  EFBF  F009         	goto	u1920
   801   00137A                     u1921:
   802   00137A  EFC2  F009         	goto	l3037
   803   00137E                     u1920:
   804   00137E                     
   805                           ;MCAL_Layer/ADC/hal_adc.c: 249:         {;MCAL_Layer/ADC/hal_adc.c: 250:             (AD
      +                          CON2bits.ADFM = 1);
   806   00137E  8EC0               	bsf	192,7,c	;volatile
   807                           
   808                           ;MCAL_Layer/ADC/hal_adc.c: 251:         }
   809   001380  EFD2  F009         	goto	l873
   810   001384                     l3037:
   811   001384  504F               	movf	select_result_format@_adc^0,w,c
   812   001386  6ED9               	movwf	fsr2l,c
   813   001388  6ADA               	clrf	fsr2h,c
   814   00138A  0E05               	movlw	5
   815   00138C  26D9               	addwf	fsr2l,f,c
   816   00138E  B2DF               	btfsc	indf2,1,c
   817   001390  EFCC  F009         	goto	u1931
   818   001394  EFCE  F009         	goto	u1930
   819   001398                     u1931:
   820   001398  EFD1  F009         	goto	l871
   821   00139C                     u1930:
   822   00139C                     
   823                           ;MCAL_Layer/ADC/hal_adc.c: 253:         {;MCAL_Layer/ADC/hal_adc.c: 254:             (AD
      +                          CON2bits.ADFM = 0);
   824   00139C  9EC0               	bcf	192,7,c	;volatile
   825                           
   826                           ;MCAL_Layer/ADC/hal_adc.c: 255:         }
   827   00139E  EFD2  F009         	goto	l873
   828   0013A2                     l871:
   829                           
   830                           ;MCAL_Layer/ADC/hal_adc.c: 257:         {;MCAL_Layer/ADC/hal_adc.c: 258:             (AD
      +                          CON2bits.ADFM = 1);
   831   0013A2  8EC0               	bsf	192,7,c	;volatile
   832   0013A4                     l873:
   833   0013A4  0012               	return		;funcret
   834   0013A6                     __end_of_select_result_format:
   835                           	callstack 0
   836                           
   837 ;; *************** function _configure_voltage_reference *****************
   838 ;; Defined at:
   839 ;;		line 264 in file "MCAL_Layer/ADC/hal_adc.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;  _adc            1    1[COMRAM] PTR const struct .
   842 ;;		 -> adc_1(6), 
   843 ;; Auto vars:     Size  Location     Type
   844 ;;  ret             1    0        unsigned char 
   845 ;; Return value:  Size  Location     Type
   846 ;;                  1    wreg      unsigned char 
   847 ;; Registers used:
   848 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   849 ;; Tracked objects:
   850 ;;		On entry : 0/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   854 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   857 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   858 ;;Total ram usage:        1 bytes
   859 ;; Hardware stack levels used: 1
   860 ;; Hardware stack levels required when called: 2
   861 ;; This function calls:
   862 ;;		Nothing
   863 ;; This function is called by:
   864 ;;		_ADC_Init
   865 ;; This function uses a non-reentrant model
   866 ;;
   867                           
   868                           	psect	text5
   869   0012A4                     __ptext5:
   870                           	callstack 0
   871   0012A4                     _configure_voltage_reference:
   872                           	callstack 26
   873   0012A4                     
   874                           ;MCAL_Layer/ADC/hal_adc.c: 266:     if (((void*)0) == _adc)
   875   0012A4  504F               	movf	configure_voltage_reference@_adc^0,w,c
   876   0012A6  A4D8               	btfss	status,2,c
   877   0012A8  EF58  F009         	goto	u1941
   878   0012AC  EF5A  F009         	goto	u1940
   879   0012B0                     u1941:
   880   0012B0  EF5C  F009         	goto	l3045
   881   0012B4                     u1940:
   882   0012B4                     
   883                           ;MCAL_Layer/ADC/hal_adc.c: 269:     }
   884   0012B4  EF7E  F009         	goto	l888
   885   0012B8                     l3045:
   886                           
   887                           ;MCAL_Layer/ADC/hal_adc.c: 271:     {;MCAL_Layer/ADC/hal_adc.c: 272:         if (0X01U =
      +                          = _adc->voltage_reference)
   888   0012B8  504F               	movf	configure_voltage_reference@_adc^0,w,c
   889   0012BA  6ED9               	movwf	fsr2l,c
   890   0012BC  6ADA               	clrf	fsr2h,c
   891   0012BE  0E05               	movlw	5
   892   0012C0  26D9               	addwf	fsr2l,f,c
   893   0012C2  A0DF               	btfss	indf2,0,c
   894   0012C4  EF66  F009         	goto	u1951
   895   0012C8  EF68  F009         	goto	u1950
   896   0012CC                     u1951:
   897   0012CC  EF6C  F009         	goto	l3047
   898   0012D0                     u1950:
   899   0012D0  8AC1               	bsf	193,5,c	;volatile
   900   0012D2  88C1               	bsf	193,4,c	;volatile
   901   0012D4  EF7E  F009         	goto	l888
   902   0012D8                     l3047:
   903   0012D8  504F               	movf	configure_voltage_reference@_adc^0,w,c
   904   0012DA  6ED9               	movwf	fsr2l,c
   905   0012DC  6ADA               	clrf	fsr2h,c
   906   0012DE  0E05               	movlw	5
   907   0012E0  26D9               	addwf	fsr2l,f,c
   908   0012E2  B0DF               	btfsc	indf2,0,c
   909   0012E4  EF76  F009         	goto	u1961
   910   0012E8  EF78  F009         	goto	u1960
   911   0012EC                     u1961:
   912   0012EC  EF7C  F009         	goto	l886
   913   0012F0                     u1960:
   914   0012F0  9AC1               	bcf	193,5,c	;volatile
   915   0012F2  98C1               	bcf	193,4,c	;volatile
   916   0012F4  EF7E  F009         	goto	l888
   917   0012F8                     l886:
   918   0012F8  9AC1               	bcf	193,5,c	;volatile
   919   0012FA  98C1               	bcf	193,4,c	;volatile
   920   0012FC                     l888:
   921   0012FC  0012               	return		;funcret
   922   0012FE                     __end_of_configure_voltage_reference:
   923                           	callstack 0
   924                           
   925 ;; *************** function _ADC_GetConversion_Blocking *****************
   926 ;; Defined at:
   927 ;;		line 196 in file "MCAL_Layer/ADC/hal_adc.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;  _adc            1    8[COMRAM] PTR const struct .
   930 ;;		 -> adc_1(6), 
   931 ;;  channel         1    9[COMRAM] enum E3294
   932 ;;  conversion_r    1   10[COMRAM] PTR unsigned short 
   933 ;;		 -> res_4(2), res_3(2), res_2(2), res_1(2), 
   934 ;; Auto vars:     Size  Location     Type
   935 ;;  ret             1   12[COMRAM] unsigned char 
   936 ;;  l_conversion    1   11[COMRAM] unsigned char 
   937 ;; Return value:  Size  Location     Type
   938 ;;                  1    wreg      unsigned char 
   939 ;; Registers used:
   940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   946 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   947 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   949 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   950 ;;Total ram usage:        5 bytes
   951 ;; Hardware stack levels used: 1
   952 ;; Hardware stack levels required when called: 4
   953 ;; This function calls:
   954 ;;		_ADC_GetConversionResult
   955 ;;		_ADC_SelectChannel
   956 ;;		_ADC_StartConversion
   957 ;; This function is called by:
   958 ;;		_main
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           	psect	text6
   963   001240                     __ptext6:
   964                           	callstack 0
   965   001240                     _ADC_GetConversion_Blocking:
   966                           	callstack 26
   967   001240                     
   968                           ;MCAL_Layer/ADC/hal_adc.c: 199:     uint8 l_conversion_status = 0X00;
   969   001240  0E00               	movlw	0
   970   001242  6E59               	movwf	ADC_GetConversion_Blocking@l_conversion_status^0,c
   971                           
   972                           ;MCAL_Layer/ADC/hal_adc.c: 200:     if ((((void*)0) == _adc) || (((void*)0) == conversio
      +                          n_result))
   973   001244  5056               	movf	ADC_GetConversion_Blocking@_adc^0,w,c
   974   001246  B4D8               	btfsc	status,2,c
   975   001248  EF28  F009         	goto	u2051
   976   00124C  EF2A  F009         	goto	u2050
   977   001250                     u2051:
   978   001250  EF32  F009         	goto	l3115
   979   001254                     u2050:
   980   001254  5058               	movf	ADC_GetConversion_Blocking@conversion_result^0,w,c
   981   001256  A4D8               	btfss	status,2,c
   982   001258  EF30  F009         	goto	u2061
   983   00125C  EF32  F009         	goto	u2060
   984   001260                     u2061:
   985   001260  EF36  F009         	goto	l3117
   986   001264                     u2060:
   987   001264                     l3115:
   988                           
   989                           ;MCAL_Layer/ADC/hal_adc.c: 201:     {;MCAL_Layer/ADC/hal_adc.c: 202:         ret = (Std_
      +                          ReturnType)0x00;
   990   001264  0E00               	movlw	0
   991   001266  6E5A               	movwf	ADC_GetConversion_Blocking@ret^0,c
   992                           
   993                           ;MCAL_Layer/ADC/hal_adc.c: 203:     }
   994   001268  EF50  F009         	goto	l3121
   995   00126C                     l3117:
   996                           
   997                           ;MCAL_Layer/ADC/hal_adc.c: 205:     {;MCAL_Layer/ADC/hal_adc.c: 207:         ret = ADC_S
      +                          electChannel (_adc, channel);
   998   00126C  C056  F052         	movff	ADC_GetConversion_Blocking@_adc,ADC_SelectChannel@_adc
   999   001270  C057  F053         	movff	ADC_GetConversion_Blocking@channel,ADC_SelectChannel@channel
  1000   001274  ECD3  F009         	call	_ADC_SelectChannel	;wreg free
  1001   001278  6E5A               	movwf	ADC_GetConversion_Blocking@ret^0,c
  1002                           
  1003                           ;MCAL_Layer/ADC/hal_adc.c: 209:         ret |= ADC_StartConversion (_adc);
  1004   00127A  C056  F04F         	movff	ADC_GetConversion_Blocking@_adc,ADC_StartConversion@_adc
  1005   00127E  EC1E  F00A         	call	_ADC_StartConversion	;wreg free
  1006   001282  125A               	iorwf	ADC_GetConversion_Blocking@ret^0,f,c
  1007   001284                     l842:
  1008   001284  B2C2               	btfsc	194,1,c	;volatile
  1009   001286  EF47  F009         	goto	u2071
  1010   00128A  EF49  F009         	goto	u2070
  1011   00128E                     u2071:
  1012   00128E  EF42  F009         	goto	l842
  1013   001292                     u2070:
  1014   001292                     
  1015                           ;MCAL_Layer/ADC/hal_adc.c: 212:         ret = ADC_GetConversionResult(_adc, conversion_r
      +                          esult);
  1016   001292  C056  F04F         	movff	ADC_GetConversion_Blocking@_adc,ADC_GetConversionResult@_adc
  1017   001296  C058  F050         	movff	ADC_GetConversion_Blocking@conversion_result,ADC_GetConversionResult@conversion_r
      +                          esult
  1018   00129A  EC79  F008         	call	_ADC_GetConversionResult	;wreg free
  1019   00129E  6E5A               	movwf	ADC_GetConversion_Blocking@ret^0,c
  1020   0012A0                     l3121:
  1021                           
  1022                           ;MCAL_Layer/ADC/hal_adc.c: 215:     return ret;
  1023   0012A0  505A               	movf	ADC_GetConversion_Blocking@ret^0,w,c
  1024   0012A2  0012               	return		;funcret
  1025   0012A4                     __end_of_ADC_GetConversion_Blocking:
  1026                           	callstack 0
  1027                           
  1028 ;; *************** function _ADC_StartConversion *****************
  1029 ;; Defined at:
  1030 ;;		line 110 in file "MCAL_Layer/ADC/hal_adc.c"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;  _adc            1    1[COMRAM] PTR const struct .
  1033 ;;		 -> adc_1(6), 
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;  ret             1    2[COMRAM] unsigned char 
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  1    wreg      unsigned char 
  1038 ;; Registers used:
  1039 ;;		wreg, status,2
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1045 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1046 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1048 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1049 ;;Total ram usage:        2 bytes
  1050 ;; Hardware stack levels used: 1
  1051 ;; Hardware stack levels required when called: 2
  1052 ;; This function calls:
  1053 ;;		Nothing
  1054 ;; This function is called by:
  1055 ;;		_ADC_GetConversion_Blocking
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           	psect	text7
  1060   00143C                     __ptext7:
  1061                           	callstack 0
  1062   00143C                     _ADC_StartConversion:
  1063                           	callstack 27
  1064   00143C                     
  1065                           ;MCAL_Layer/ADC/hal_adc.c: 111:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1066   00143C  0E01               	movlw	1
  1067   00143E  6E50               	movwf	ADC_StartConversion@ret^0,c
  1068                           
  1069                           ;MCAL_Layer/ADC/hal_adc.c: 112:     if (((void*)0) == _adc)
  1070   001440  504F               	movf	ADC_StartConversion@_adc^0,w,c
  1071   001442  A4D8               	btfss	status,2,c
  1072   001444  EF26  F00A         	goto	u1991
  1073   001448  EF28  F00A         	goto	u1990
  1074   00144C                     u1991:
  1075   00144C  EF2C  F00A         	goto	l815
  1076   001450                     u1990:
  1077   001450                     
  1078                           ;MCAL_Layer/ADC/hal_adc.c: 113:     {;MCAL_Layer/ADC/hal_adc.c: 114:         ret = (Std_
      +                          ReturnType)0x00;
  1079   001450  0E00               	movlw	0
  1080   001452  6E50               	movwf	ADC_StartConversion@ret^0,c
  1081                           
  1082                           ;MCAL_Layer/ADC/hal_adc.c: 115:     }
  1083   001454  EF2D  F00A         	goto	l3083
  1084   001458                     l815:
  1085                           
  1086                           ;MCAL_Layer/ADC/hal_adc.c: 117:     {;MCAL_Layer/ADC/hal_adc.c: 118:         (ADCON0bits
      +                          .GO_nDONE = 1);
  1087   001458  82C2               	bsf	194,1,c	;volatile
  1088   00145A                     l3083:
  1089                           
  1090                           ;MCAL_Layer/ADC/hal_adc.c: 120:     return ret;
  1091   00145A  5050               	movf	ADC_StartConversion@ret^0,w,c
  1092   00145C  0012               	return		;funcret
  1093   00145E                     __end_of_ADC_StartConversion:
  1094                           	callstack 0
  1095                           
  1096 ;; *************** function _ADC_SelectChannel *****************
  1097 ;; Defined at:
  1098 ;;		line 88 in file "MCAL_Layer/ADC/hal_adc.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;  _adc            1    4[COMRAM] PTR const struct .
  1101 ;;		 -> adc_1(6), 
  1102 ;;  channel         1    5[COMRAM] enum E3294
  1103 ;; Auto vars:     Size  Location     Type
  1104 ;;  ret             1    7[COMRAM] unsigned char 
  1105 ;; Return value:  Size  Location     Type
  1106 ;;                  1    wreg      unsigned char 
  1107 ;; Registers used:
  1108 ;;		wreg, status,2, status,0, cstack
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1114 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1115 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1116 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1117 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1118 ;;Total ram usage:        4 bytes
  1119 ;; Hardware stack levels used: 1
  1120 ;; Hardware stack levels required when called: 3
  1121 ;; This function calls:
  1122 ;;		_adc_input_channel_port_configure
  1123 ;; This function is called by:
  1124 ;;		_ADC_GetConversion_Blocking
  1125 ;; This function uses a non-reentrant model
  1126 ;;
  1127                           
  1128                           	psect	text8
  1129   0013A6                     __ptext8:
  1130                           	callstack 0
  1131   0013A6                     _ADC_SelectChannel:
  1132                           	callstack 26
  1133   0013A6                     
  1134                           ;MCAL_Layer/ADC/hal_adc.c: 89:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1135   0013A6  0E01               	movlw	1
  1136   0013A8  6E55               	movwf	ADC_SelectChannel@ret^0,c
  1137                           
  1138                           ;MCAL_Layer/ADC/hal_adc.c: 90:     if (((void*)0) == _adc)
  1139   0013AA  5052               	movf	ADC_SelectChannel@_adc^0,w,c
  1140   0013AC  A4D8               	btfss	status,2,c
  1141   0013AE  EFDB  F009         	goto	u1981
  1142   0013B2  EFDD  F009         	goto	u1980
  1143   0013B6                     u1981:
  1144   0013B6  EFE1  F009         	goto	l3071
  1145   0013BA                     u1980:
  1146   0013BA                     
  1147                           ;MCAL_Layer/ADC/hal_adc.c: 91:     {;MCAL_Layer/ADC/hal_adc.c: 92:         ret = (Std_Re
      +                          turnType)0x00;
  1148   0013BA  0E00               	movlw	0
  1149   0013BC  6E55               	movwf	ADC_SelectChannel@ret^0,c
  1150                           
  1151                           ;MCAL_Layer/ADC/hal_adc.c: 93:     }
  1152   0013BE  EFED  F009         	goto	l3075
  1153   0013C2                     l3071:
  1154                           
  1155                           ;MCAL_Layer/ADC/hal_adc.c: 95:     {;MCAL_Layer/ADC/hal_adc.c: 96:         ADCON0bits.CH
      +                          S = channel;
  1156   0013C2  C053  F054         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  1157   0013C6  4654               	rlncf	??_ADC_SelectChannel^0,f,c
  1158   0013C8  4654               	rlncf	??_ADC_SelectChannel^0,f,c
  1159   0013CA  50C2               	movf	194,w,c	;volatile
  1160   0013CC  1854               	xorwf	??_ADC_SelectChannel^0,w,c
  1161   0013CE  0BC3               	andlw	-61
  1162   0013D0  1854               	xorwf	??_ADC_SelectChannel^0,w,c
  1163   0013D2  6EC2               	movwf	194,c	;volatile
  1164   0013D4                     
  1165                           ;MCAL_Layer/ADC/hal_adc.c: 97:         adc_input_channel_port_configure(channel);
  1166   0013D4  5053               	movf	ADC_SelectChannel@channel^0,w,c
  1167   0013D6  EC0B  F008         	call	_adc_input_channel_port_configure
  1168   0013DA                     l3075:
  1169                           
  1170                           ;MCAL_Layer/ADC/hal_adc.c: 99:     return ret;
  1171   0013DA  5055               	movf	ADC_SelectChannel@ret^0,w,c
  1172   0013DC  0012               	return		;funcret
  1173   0013DE                     __end_of_ADC_SelectChannel:
  1174                           	callstack 0
  1175                           
  1176 ;; *************** function _adc_input_channel_port_configure *****************
  1177 ;; Defined at:
  1178 ;;		line 218 in file "MCAL_Layer/ADC/hal_adc.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;  channel         1    wreg     enum E3294
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;  channel         1    3[COMRAM] enum E3294
  1183 ;;  ret             1    0        unsigned char 
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  1    wreg      unsigned char 
  1186 ;; Registers used:
  1187 ;;		wreg, status,2, status,0
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1194 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1195 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1196 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1197 ;;Total ram usage:        3 bytes
  1198 ;; Hardware stack levels used: 1
  1199 ;; Hardware stack levels required when called: 2
  1200 ;; This function calls:
  1201 ;;		Nothing
  1202 ;; This function is called by:
  1203 ;;		_ADC_Init
  1204 ;;		_ADC_SelectChannel
  1205 ;; This function uses a non-reentrant model
  1206 ;;
  1207                           
  1208                           	psect	text9
  1209   001016                     __ptext9:
  1210                           	callstack 0
  1211   001016                     _adc_input_channel_port_configure:
  1212                           	callstack 26
  1213                           
  1214                           ;incstack = 0
  1215                           ;adc_input_channel_port_configure@channel stored from wreg
  1216   001016  6E51               	movwf	adc_input_channel_port_configure@channel^0,c
  1217   001018                     
  1218                           ;MCAL_Layer/ADC/hal_adc.c: 220:     switch (channel)
  1219   001018  EF37  F008         	goto	l1607
  1220   00101C                     l1579:
  1221   00101C  8092               	bsf	146,0,c	;volatile
  1222   00101E  EF78  F008         	goto	l864
  1223   001022                     l1581:
  1224   001022  8292               	bsf	146,1,c	;volatile
  1225   001024  EF78  F008         	goto	l864
  1226   001028                     l1583:
  1227   001028  8492               	bsf	146,2,c	;volatile
  1228   00102A  EF78  F008         	goto	l864
  1229   00102E                     l1585:
  1230   00102E  8692               	bsf	146,3,c	;volatile
  1231   001030  EF78  F008         	goto	l864
  1232   001034                     l1587:
  1233   001034  8A92               	bsf	146,5,c	;volatile
  1234   001036  EF78  F008         	goto	l864
  1235   00103A                     l1589:
  1236   00103A  8096               	bsf	150,0,c	;volatile
  1237   00103C  EF78  F008         	goto	l864
  1238   001040                     l1591:
  1239   001040  8296               	bsf	150,1,c	;volatile
  1240   001042  EF78  F008         	goto	l864
  1241   001046                     l1593:
  1242   001046  8496               	bsf	150,2,c	;volatile
  1243   001048  EF78  F008         	goto	l864
  1244   00104C                     l1595:
  1245   00104C  8493               	bsf	147,2,c	;volatile
  1246   00104E  EF78  F008         	goto	l864
  1247   001052                     l1597:
  1248   001052  8693               	bsf	147,3,c	;volatile
  1249   001054  EF78  F008         	goto	l864
  1250   001058                     l1599:
  1251   001058  8293               	bsf	147,1,c	;volatile
  1252   00105A  EF78  F008         	goto	l864
  1253   00105E                     l1601:
  1254   00105E  8893               	bsf	147,4,c	;volatile
  1255   001060  EF78  F008         	goto	l864
  1256   001064                     l1603:
  1257   001064  8093               	bsf	147,0,c	;volatile
  1258   001066  EF78  F008         	goto	l864
  1259   00106A                     l1605:
  1260                           
  1261                           ;MCAL_Layer/ADC/hal_adc.c: 236:     }
  1262   00106A  EF78  F008         	goto	l864
  1263   00106E                     l1607:
  1264   00106E  5051               	movf	adc_input_channel_port_configure@channel^0,w,c
  1265   001070  6E4F               	movwf	??_adc_input_channel_port_configure^0,c
  1266   001072  6A50               	clrf	(??_adc_input_channel_port_configure+1)^0,c
  1267                           
  1268                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1269                           ; Switch size 1, requested type "simple"
  1270                           ; Number of cases is 1, Range of values is 0 to 0
  1271                           ; switch strategies available:
  1272                           ; Name         Instructions Cycles
  1273                           ; simple_byte            4     3 (average)
  1274                           ;	Chosen strategy is simple_byte
  1275   001074  5050               	movf	(??_adc_input_channel_port_configure+1)^0,w,c
  1276   001076  0A00               	xorlw	0	; case 0
  1277   001078  B4D8               	btfsc	status,2,c
  1278   00107A  EF41  F008         	goto	l3131
  1279   00107E  EF35  F008         	goto	l1605
  1280   001082                     l3131:
  1281                           
  1282                           ; Switch size 1, requested type "simple"
  1283                           ; Number of cases is 13, Range of values is 0 to 12
  1284                           ; switch strategies available:
  1285                           ; Name         Instructions Cycles
  1286                           ; simple_byte           40    21 (average)
  1287                           ;	Chosen strategy is simple_byte
  1288   001082  504F               	movf	??_adc_input_channel_port_configure^0,w,c
  1289   001084  0A00               	xorlw	0	; case 0
  1290   001086  B4D8               	btfsc	status,2,c
  1291   001088  EF0E  F008         	goto	l1579
  1292   00108C  0A01               	xorlw	1	; case 1
  1293   00108E  B4D8               	btfsc	status,2,c
  1294   001090  EF11  F008         	goto	l1581
  1295   001094  0A03               	xorlw	3	; case 2
  1296   001096  B4D8               	btfsc	status,2,c
  1297   001098  EF14  F008         	goto	l1583
  1298   00109C  0A01               	xorlw	1	; case 3
  1299   00109E  B4D8               	btfsc	status,2,c
  1300   0010A0  EF17  F008         	goto	l1585
  1301   0010A4  0A07               	xorlw	7	; case 4
  1302   0010A6  B4D8               	btfsc	status,2,c
  1303   0010A8  EF1A  F008         	goto	l1587
  1304   0010AC  0A01               	xorlw	1	; case 5
  1305   0010AE  B4D8               	btfsc	status,2,c
  1306   0010B0  EF1D  F008         	goto	l1589
  1307   0010B4  0A03               	xorlw	3	; case 6
  1308   0010B6  B4D8               	btfsc	status,2,c
  1309   0010B8  EF20  F008         	goto	l1591
  1310   0010BC  0A01               	xorlw	1	; case 7
  1311   0010BE  B4D8               	btfsc	status,2,c
  1312   0010C0  EF23  F008         	goto	l1593
  1313   0010C4  0A0F               	xorlw	15	; case 8
  1314   0010C6  B4D8               	btfsc	status,2,c
  1315   0010C8  EF26  F008         	goto	l1595
  1316   0010CC  0A01               	xorlw	1	; case 9
  1317   0010CE  B4D8               	btfsc	status,2,c
  1318   0010D0  EF29  F008         	goto	l1597
  1319   0010D4  0A03               	xorlw	3	; case 10
  1320   0010D6  B4D8               	btfsc	status,2,c
  1321   0010D8  EF2C  F008         	goto	l1599
  1322   0010DC  0A01               	xorlw	1	; case 11
  1323   0010DE  B4D8               	btfsc	status,2,c
  1324   0010E0  EF2F  F008         	goto	l1601
  1325   0010E4  0A07               	xorlw	7	; case 12
  1326   0010E6  B4D8               	btfsc	status,2,c
  1327   0010E8  EF32  F008         	goto	l1603
  1328   0010EC  EF35  F008         	goto	l1605
  1329   0010F0                     l864:
  1330   0010F0  0012               	return		;funcret
  1331   0010F2                     __end_of_adc_input_channel_port_configure:
  1332                           	callstack 0
  1333                           
  1334 ;; *************** function _ADC_GetConversionResult *****************
  1335 ;; Defined at:
  1336 ;;		line 161 in file "MCAL_Layer/ADC/hal_adc.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;  _adc            1    1[COMRAM] PTR const struct .
  1339 ;;		 -> adc_1(6), 
  1340 ;;  conversion_r    1    2[COMRAM] PTR unsigned short 
  1341 ;;		 -> res_4(2), res_3(2), res_2(2), res_1(2), 
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;  ret             1    6[COMRAM] unsigned char 
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  1    wreg      unsigned char 
  1346 ;; Registers used:
  1347 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1353 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1354 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1355 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1356 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1357 ;;Total ram usage:        6 bytes
  1358 ;; Hardware stack levels used: 1
  1359 ;; Hardware stack levels required when called: 2
  1360 ;; This function calls:
  1361 ;;		Nothing
  1362 ;; This function is called by:
  1363 ;;		_ADC_GetConversion_Blocking
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           	psect	text10
  1368   0010F2                     __ptext10:
  1369                           	callstack 0
  1370   0010F2                     _ADC_GetConversionResult:
  1371                           	callstack 27
  1372   0010F2                     
  1373                           ;MCAL_Layer/ADC/hal_adc.c: 162:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1374   0010F2  0E01               	movlw	1
  1375   0010F4  6E54               	movwf	ADC_GetConversionResult@ret^0,c
  1376                           
  1377                           ;MCAL_Layer/ADC/hal_adc.c: 163:     if ((((void*)0) == _adc) || (((void*)0) == conversio
      +                          n_result))
  1378   0010F6  504F               	movf	ADC_GetConversionResult@_adc^0,w,c
  1379   0010F8  B4D8               	btfsc	status,2,c
  1380   0010FA  EF81  F008         	goto	u2001
  1381   0010FE  EF83  F008         	goto	u2000
  1382   001102                     u2001:
  1383   001102  EF8B  F008         	goto	l3091
  1384   001106                     u2000:
  1385   001106  5050               	movf	ADC_GetConversionResult@conversion_result^0,w,c
  1386   001108  A4D8               	btfss	status,2,c
  1387   00110A  EF89  F008         	goto	u2011
  1388   00110E  EF8B  F008         	goto	u2010
  1389   001112                     u2011:
  1390   001112  EF8F  F008         	goto	l3093
  1391   001116                     u2010:
  1392   001116                     l3091:
  1393                           
  1394                           ;MCAL_Layer/ADC/hal_adc.c: 164:     {;MCAL_Layer/ADC/hal_adc.c: 165:         ret = (Std_
      +                          ReturnType)0x00;
  1395   001116  0E00               	movlw	0
  1396   001118  6E54               	movwf	ADC_GetConversionResult@ret^0,c
  1397                           
  1398                           ;MCAL_Layer/ADC/hal_adc.c: 166:     }
  1399   00111A  EFD3  F008         	goto	l3103
  1400   00111E                     l3093:
  1401                           
  1402                           ;MCAL_Layer/ADC/hal_adc.c: 168:     {;MCAL_Layer/ADC/hal_adc.c: 169:         if (0X01U =
      +                          = _adc->result_format)
  1403   00111E  504F               	movf	ADC_GetConversionResult@_adc^0,w,c
  1404   001120  6ED9               	movwf	fsr2l,c
  1405   001122  6ADA               	clrf	fsr2h,c
  1406   001124  0E05               	movlw	5
  1407   001126  26D9               	addwf	fsr2l,f,c
  1408   001128  A2DF               	btfss	indf2,1,c
  1409   00112A  EF99  F008         	goto	u2021
  1410   00112E  EF9B  F008         	goto	u2020
  1411   001132                     u2021:
  1412   001132  EFAE  F008         	goto	l3097
  1413   001136                     u2020:
  1414   001136                     l3095:
  1415                           
  1416                           ;MCAL_Layer/ADC/hal_adc.c: 170:         {;MCAL_Layer/ADC/hal_adc.c: 171:             *co
      +                          nversion_result = (adc_result_t)((ADRESH << 8) + ADRESL );
  1417   001136  50C3               	movf	195,w,c	;volatile
  1418   001138  CFC4 F051          	movff	4036,??_ADC_GetConversionResult	;volatile
  1419   00113C  6A52               	clrf	(??_ADC_GetConversionResult+1)^0,c
  1420   00113E  C051  F052         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  1421   001142  6A51               	clrf	??_ADC_GetConversionResult^0,c
  1422   001144  2651               	addwf	??_ADC_GetConversionResult^0,f,c
  1423   001146  0E00               	movlw	0
  1424   001148  2252               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  1425   00114A  5050               	movf	ADC_GetConversionResult@conversion_result^0,w,c
  1426   00114C  6ED9               	movwf	fsr2l,c
  1427   00114E  6ADA               	clrf	fsr2h,c
  1428   001150  C051  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  1429   001154  C052  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  1430                           
  1431                           ;MCAL_Layer/ADC/hal_adc.c: 172:         }
  1432   001158  EFD3  F008         	goto	l3103
  1433   00115C                     l3097:
  1434   00115C  504F               	movf	ADC_GetConversionResult@_adc^0,w,c
  1435   00115E  6ED9               	movwf	fsr2l,c
  1436   001160  6ADA               	clrf	fsr2h,c
  1437   001162  0E05               	movlw	5
  1438   001164  26D9               	addwf	fsr2l,f,c
  1439   001166  B2DF               	btfsc	indf2,1,c
  1440   001168  EFB8  F008         	goto	u2031
  1441   00116C  EFBA  F008         	goto	u2030
  1442   001170                     u2031:
  1443   001170  EF9B  F008         	goto	l3095
  1444   001174                     u2030:
  1445   001174                     
  1446                           ;MCAL_Layer/ADC/hal_adc.c: 174:         {;MCAL_Layer/ADC/hal_adc.c: 175:             *co
      +                          nversion_result = (adc_result_t)(((ADRESH << 8) + ADRESL ) >> 6 ) ;
  1447   001174  50C3               	movf	195,w,c	;volatile
  1448   001176  CFC4 F051          	movff	4036,??_ADC_GetConversionResult	;volatile
  1449   00117A  6A52               	clrf	(??_ADC_GetConversionResult+1)^0,c
  1450   00117C  C051  F052         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  1451   001180  6A51               	clrf	??_ADC_GetConversionResult^0,c
  1452   001182  2651               	addwf	??_ADC_GetConversionResult^0,f,c
  1453   001184  0E00               	movlw	0
  1454   001186  2252               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  1455   001188  0E06               	movlw	6
  1456   00118A  6E53               	movwf	(??_ADC_GetConversionResult+2)^0,c
  1457   00118C                     u2045:
  1458   00118C  3452               	rlcf	(??_ADC_GetConversionResult+1)^0,w,c
  1459   00118E  3252               	rrcf	(??_ADC_GetConversionResult+1)^0,f,c
  1460   001190  3251               	rrcf	??_ADC_GetConversionResult^0,f,c
  1461   001192  2E53               	decfsz	(??_ADC_GetConversionResult+2)^0,f,c
  1462   001194  EFC6  F008         	goto	u2045
  1463   001198  5050               	movf	ADC_GetConversionResult@conversion_result^0,w,c
  1464   00119A  6ED9               	movwf	fsr2l,c
  1465   00119C  6ADA               	clrf	fsr2h,c
  1466   00119E  C051  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  1467   0011A2  C052  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  1468   0011A6                     l3103:
  1469                           
  1470                           ;MCAL_Layer/ADC/hal_adc.c: 182:     return ret;
  1471   0011A6  5054               	movf	ADC_GetConversionResult@ret^0,w,c
  1472   0011A8  0012               	return		;funcret
  1473   0011AA                     __end_of_ADC_GetConversionResult:
  1474                           	callstack 0
  1475                           
  1476 ;; *************** function _InterruptManager *****************
  1477 ;; Defined at:
  1478 ;;		line 35 in file "MCAL_Layer/interrupt/mcal_interrupt_manager.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;		None
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;		None
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  1    wreg      void 
  1485 ;; Registers used:
  1486 ;;		wreg, status,2, status,0, cstack
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1496 ;;Total ram usage:        0 bytes
  1497 ;; Hardware stack levels used: 1
  1498 ;; Hardware stack levels required when called: 1
  1499 ;; This function calls:
  1500 ;;		_INT0_ISR
  1501 ;;		_INT1_ISR
  1502 ;;		_INT2_ISR
  1503 ;;		_RB4_ISR
  1504 ;;		_RB5_ISR
  1505 ;;		_RB6_ISR
  1506 ;;		_RB7_ISR
  1507 ;; This function is called by:
  1508 ;;		Interrupt level 2
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512                           	psect	intcode
  1513   000008                     __pintcode:
  1514                           	callstack 0
  1515   000008                     _InterruptManager:
  1516                           	callstack 26
  1517                           
  1518                           ;incstack = 0
  1519   000008  825C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1520   00000A                     
  1521                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 38:     if ((INTCONbits.INT0IE == 1) && 
      +                          (INTCONbits.INT0IF == 1))
  1522   00000A  A8F2               	btfss	242,4,c	;volatile
  1523   00000C  EF0A  F000         	goto	i2u132_41
  1524   000010  EF0C  F000         	goto	i2u132_40
  1525   000014                     i2u132_41:
  1526   000014  EF15  F000         	goto	i2l517
  1527   000018                     i2u132_40:
  1528   000018  A2F2               	btfss	242,1,c	;volatile
  1529   00001A  EF11  F000         	goto	i2u133_41
  1530   00001E  EF13  F000         	goto	i2u133_40
  1531   000022                     i2u133_41:
  1532   000022  EF15  F000         	goto	i2l517
  1533   000026                     i2u133_40:
  1534   000026                     
  1535                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 39:     {;MCAL_Layer/interrupt/mcal_inte
      +                          rrupt_manager.c: 40:         INT0_ISR();
  1536   000026  EC6F  F00A         	call	_INT0_ISR	;wreg free
  1537   00002A                     i2l517:
  1538                           
  1539                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 43:     if ((INTCON3bits.INT1IE == 1) &&
      +                           (INTCON3bits.INT1IF == 1))
  1540   00002A  A6F0               	btfss	240,3,c	;volatile
  1541   00002C  EF1A  F000         	goto	i2u134_41
  1542   000030  EF1C  F000         	goto	i2u134_40
  1543   000034                     i2u134_41:
  1544   000034  EF25  F000         	goto	i2l519
  1545   000038                     i2u134_40:
  1546   000038  A0F0               	btfss	240,0,c	;volatile
  1547   00003A  EF21  F000         	goto	i2u135_41
  1548   00003E  EF23  F000         	goto	i2u135_40
  1549   000042                     i2u135_41:
  1550   000042  EF25  F000         	goto	i2l519
  1551   000046                     i2u135_40:
  1552   000046                     
  1553                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 44:     {;MCAL_Layer/interrupt/mcal_inte
      +                          rrupt_manager.c: 45:         INT1_ISR();
  1554   000046  EC6D  F00A         	call	_INT1_ISR	;wreg free
  1555   00004A                     i2l519:
  1556                           
  1557                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 48:     if ((INTCON3bits.INT2IE == 1) &&
      +                           (INTCON3bits.INT2IF == 1))
  1558   00004A  A8F0               	btfss	240,4,c	;volatile
  1559   00004C  EF2A  F000         	goto	i2u136_41
  1560   000050  EF2C  F000         	goto	i2u136_40
  1561   000054                     i2u136_41:
  1562   000054  EF35  F000         	goto	i2l521
  1563   000058                     i2u136_40:
  1564   000058  A2F0               	btfss	240,1,c	;volatile
  1565   00005A  EF31  F000         	goto	i2u137_41
  1566   00005E  EF33  F000         	goto	i2u137_40
  1567   000062                     i2u137_41:
  1568   000062  EF35  F000         	goto	i2l521
  1569   000066                     i2u137_40:
  1570   000066                     
  1571                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 49:     {;MCAL_Layer/interrupt/mcal_inte
      +                          rrupt_manager.c: 50:         INT2_ISR();
  1572   000066  EC6B  F00A         	call	_INT2_ISR	;wreg free
  1573   00006A                     i2l521:
  1574                           
  1575                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 56:     if ((INTCONbits.RBIE == 1) && (I
      +                          NTCONbits.RBIF == 1) &&
  1576   00006A  A6F2               	btfss	242,3,c	;volatile
  1577   00006C  EF3A  F000         	goto	i2u138_41
  1578   000070  EF3C  F000         	goto	i2u138_40
  1579   000074                     i2u138_41:
  1580   000074  EF57  F000         	goto	i2l523
  1581   000078                     i2u138_40:
  1582   000078  A0F2               	btfss	242,0,c	;volatile
  1583   00007A  EF41  F000         	goto	i2u139_41
  1584   00007E  EF43  F000         	goto	i2u139_40
  1585   000082                     i2u139_41:
  1586   000082  EF57  F000         	goto	i2l523
  1587   000086                     i2u139_40:
  1588   000086  A881               	btfss	129,4,c	;volatile
  1589   000088  EF48  F000         	goto	i2u140_41
  1590   00008C  EF4A  F000         	goto	i2u140_40
  1591   000090                     i2u140_41:
  1592   000090  EF57  F000         	goto	i2l523
  1593   000094                     i2u140_40:
  1594   000094  0422               	decf	_RB4_Flag^0,w,c	;volatile
  1595   000096  A4D8               	btfss	status,2,c
  1596   000098  EF50  F000         	goto	i2u141_41
  1597   00009C  EF52  F000         	goto	i2u141_40
  1598   0000A0                     i2u141_41:
  1599   0000A0  EF57  F000         	goto	i2l523
  1600   0000A4                     i2u141_40:
  1601   0000A4                     
  1602                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 58:     {;MCAL_Layer/interrupt/mcal_inte
      +                          rrupt_manager.c: 59:         RB4_Flag = 0;
  1603   0000A4  0E00               	movlw	0
  1604   0000A6  6E22               	movwf	_RB4_Flag^0,c	;volatile
  1605   0000A8                     
  1606                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 60:         RB4_ISR(1);
  1607   0000A8  0E01               	movlw	1
  1608   0000AA  EC56  F00A         	call	_RB4_ISR
  1609   0000AE                     i2l523:
  1610                           
  1611                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 63:     if ((INTCONbits.RBIE == 1) && (I
      +                          NTCONbits.RBIF == 1) &&
  1612   0000AE  A6F2               	btfss	242,3,c	;volatile
  1613   0000B0  EF5C  F000         	goto	i2u142_41
  1614   0000B4  EF5E  F000         	goto	i2u142_40
  1615   0000B8                     i2u142_41:
  1616   0000B8  EF79  F000         	goto	i2l525
  1617   0000BC                     i2u142_40:
  1618   0000BC  A0F2               	btfss	242,0,c	;volatile
  1619   0000BE  EF63  F000         	goto	i2u143_41
  1620   0000C2  EF65  F000         	goto	i2u143_40
  1621   0000C6                     i2u143_41:
  1622   0000C6  EF79  F000         	goto	i2l525
  1623   0000CA                     i2u143_40:
  1624   0000CA  B881               	btfsc	129,4,c	;volatile
  1625   0000CC  EF6A  F000         	goto	i2u144_41
  1626   0000D0  EF6C  F000         	goto	i2u144_40
  1627   0000D4                     i2u144_41:
  1628   0000D4  EF79  F000         	goto	i2l525
  1629   0000D8                     i2u144_40:
  1630   0000D8  5022               	movf	_RB4_Flag^0,w,c	;volatile
  1631   0000DA  A4D8               	btfss	status,2,c
  1632   0000DC  EF72  F000         	goto	i2u145_41
  1633   0000E0  EF74  F000         	goto	i2u145_40
  1634   0000E4                     i2u145_41:
  1635   0000E4  EF79  F000         	goto	i2l525
  1636   0000E8                     i2u145_40:
  1637   0000E8                     
  1638                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 65:     {;MCAL_Layer/interrupt/mcal_inte
      +                          rrupt_manager.c: 66:         RB4_Flag = 1;
  1639   0000E8  0E01               	movlw	1
  1640   0000EA  6E22               	movwf	_RB4_Flag^0,c	;volatile
  1641   0000EC                     
  1642                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 67:         RB4_ISR(0);
  1643   0000EC  0E00               	movlw	0
  1644   0000EE  EC56  F00A         	call	_RB4_ISR
  1645   0000F2                     i2l525:
  1646                           
  1647                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 70:     if ((INTCONbits.RBIE == 1) && (I
      +                          NTCONbits.RBIF == 1) &&
  1648   0000F2  A6F2               	btfss	242,3,c	;volatile
  1649   0000F4  EF7E  F000         	goto	i2u146_41
  1650   0000F8  EF80  F000         	goto	i2u146_40
  1651   0000FC                     i2u146_41:
  1652   0000FC  EF9B  F000         	goto	i2l527
  1653   000100                     i2u146_40:
  1654   000100  A0F2               	btfss	242,0,c	;volatile
  1655   000102  EF85  F000         	goto	i2u147_41
  1656   000106  EF87  F000         	goto	i2u147_40
  1657   00010A                     i2u147_41:
  1658   00010A  EF9B  F000         	goto	i2l527
  1659   00010E                     i2u147_40:
  1660   00010E  AA81               	btfss	129,5,c	;volatile
  1661   000110  EF8C  F000         	goto	i2u148_41
  1662   000114  EF8E  F000         	goto	i2u148_40
  1663   000118                     i2u148_41:
  1664   000118  EF9B  F000         	goto	i2l527
  1665   00011C                     i2u148_40:
  1666   00011C  0421               	decf	_RB5_Flag^0,w,c	;volatile
  1667   00011E  A4D8               	btfss	status,2,c
  1668   000120  EF94  F000         	goto	i2u149_41
  1669   000124  EF96  F000         	goto	i2u149_40
  1670   000128                     i2u149_41:
  1671   000128  EF9B  F000         	goto	i2l527
  1672   00012C                     i2u149_40:
  1673   00012C                     
  1674                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 72:     {;MCAL_Layer/interrupt/mcal_inte
      +                          rrupt_manager.c: 73:         RB5_Flag = 0;
  1675   00012C  0E00               	movlw	0
  1676   00012E  6E21               	movwf	_RB5_Flag^0,c	;volatile
  1677   000130                     
  1678                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 74:         RB5_ISR(1);
  1679   000130  0E01               	movlw	1
  1680   000132  EC49  F00A         	call	_RB5_ISR
  1681   000136                     i2l527:
  1682                           
  1683                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 77:     if ((INTCONbits.RBIE == 1) && (I
      +                          NTCONbits.RBIF == 1) &&
  1684   000136  A6F2               	btfss	242,3,c	;volatile
  1685   000138  EFA0  F000         	goto	i2u150_41
  1686   00013C  EFA2  F000         	goto	i2u150_40
  1687   000140                     i2u150_41:
  1688   000140  EFBD  F000         	goto	i2l2773
  1689   000144                     i2u150_40:
  1690   000144  A0F2               	btfss	242,0,c	;volatile
  1691   000146  EFA7  F000         	goto	i2u151_41
  1692   00014A  EFA9  F000         	goto	i2u151_40
  1693   00014E                     i2u151_41:
  1694   00014E  EFBD  F000         	goto	i2l2773
  1695   000152                     i2u151_40:
  1696   000152  BA81               	btfsc	129,5,c	;volatile
  1697   000154  EFAE  F000         	goto	i2u152_41
  1698   000158  EFB0  F000         	goto	i2u152_40
  1699   00015C                     i2u152_41:
  1700   00015C  EFBD  F000         	goto	i2l2773
  1701   000160                     i2u152_40:
  1702   000160  5021               	movf	_RB5_Flag^0,w,c	;volatile
  1703   000162  A4D8               	btfss	status,2,c
  1704   000164  EFB6  F000         	goto	i2u153_41
  1705   000168  EFB8  F000         	goto	i2u153_40
  1706   00016C                     i2u153_41:
  1707   00016C  EFBD  F000         	goto	i2l2773
  1708   000170                     i2u153_40:
  1709   000170                     
  1710                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 79:     {;MCAL_Layer/interrupt/mcal_inte
      +                          rrupt_manager.c: 80:         RB5_Flag = 1;
  1711   000170  0E01               	movlw	1
  1712   000172  6E21               	movwf	_RB5_Flag^0,c	;volatile
  1713   000174                     
  1714                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 81:         RB5_ISR(0);
  1715   000174  0E00               	movlw	0
  1716   000176  EC49  F00A         	call	_RB5_ISR
  1717   00017A                     i2l2773:
  1718                           
  1719                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 84:     if ((INTCONbits.RBIE == 1) && (I
      +                          NTCONbits.RBIF == 1) &&
  1720   00017A  A6F2               	btfss	242,3,c	;volatile
  1721   00017C  EFC2  F000         	goto	i2u154_41
  1722   000180  EFC4  F000         	goto	i2u154_40
  1723   000184                     i2u154_41:
  1724   000184  EFDF  F000         	goto	i2l530
  1725   000188                     i2u154_40:
  1726   000188  A0F2               	btfss	242,0,c	;volatile
  1727   00018A  EFC9  F000         	goto	i2u155_41
  1728   00018E  EFCB  F000         	goto	i2u155_40
  1729   000192                     i2u155_41:
  1730   000192  EFDF  F000         	goto	i2l530
  1731   000196                     i2u155_40:
  1732   000196  AC81               	btfss	129,6,c	;volatile
  1733   000198  EFD0  F000         	goto	i2u156_41
  1734   00019C  EFD2  F000         	goto	i2u156_40
  1735   0001A0                     i2u156_41:
  1736   0001A0  EFDF  F000         	goto	i2l530
  1737   0001A4                     i2u156_40:
  1738   0001A4  0420               	decf	_RB6_Flag^0,w,c	;volatile
  1739   0001A6  A4D8               	btfss	status,2,c
  1740   0001A8  EFD8  F000         	goto	i2u157_41
  1741   0001AC  EFDA  F000         	goto	i2u157_40
  1742   0001B0                     i2u157_41:
  1743   0001B0  EFDF  F000         	goto	i2l530
  1744   0001B4                     i2u157_40:
  1745   0001B4                     
  1746                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 86:     {;MCAL_Layer/interrupt/mcal_inte
      +                          rrupt_manager.c: 87:         RB6_Flag = 0;
  1747   0001B4  0E00               	movlw	0
  1748   0001B6  6E20               	movwf	_RB6_Flag^0,c	;volatile
  1749   0001B8                     
  1750                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 88:         RB6_ISR(1);
  1751   0001B8  0E01               	movlw	1
  1752   0001BA  EC3C  F00A         	call	_RB6_ISR
  1753   0001BE                     i2l530:
  1754                           
  1755                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 91:     if ((INTCONbits.RBIE == 1) && (I
      +                          NTCONbits.RBIF == 1) &&
  1756   0001BE  A6F2               	btfss	242,3,c	;volatile
  1757   0001C0  EFE4  F000         	goto	i2u158_41
  1758   0001C4  EFE6  F000         	goto	i2u158_40
  1759   0001C8                     i2u158_41:
  1760   0001C8  EF01  F001         	goto	i2l2795
  1761   0001CC                     i2u158_40:
  1762   0001CC  A0F2               	btfss	242,0,c	;volatile
  1763   0001CE  EFEB  F000         	goto	i2u159_41
  1764   0001D2  EFED  F000         	goto	i2u159_40
  1765   0001D6                     i2u159_41:
  1766   0001D6  EF01  F001         	goto	i2l2795
  1767   0001DA                     i2u159_40:
  1768   0001DA  BC81               	btfsc	129,6,c	;volatile
  1769   0001DC  EFF2  F000         	goto	i2u160_41
  1770   0001E0  EFF4  F000         	goto	i2u160_40
  1771   0001E4                     i2u160_41:
  1772   0001E4  EF01  F001         	goto	i2l2795
  1773   0001E8                     i2u160_40:
  1774   0001E8  5020               	movf	_RB6_Flag^0,w,c	;volatile
  1775   0001EA  A4D8               	btfss	status,2,c
  1776   0001EC  EFFA  F000         	goto	i2u161_41
  1777   0001F0  EFFC  F000         	goto	i2u161_40
  1778   0001F4                     i2u161_41:
  1779   0001F4  EF01  F001         	goto	i2l2795
  1780   0001F8                     i2u161_40:
  1781   0001F8                     
  1782                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 93:     {;MCAL_Layer/interrupt/mcal_inte
      +                          rrupt_manager.c: 94:         RB6_Flag = 1;
  1783   0001F8  0E01               	movlw	1
  1784   0001FA  6E20               	movwf	_RB6_Flag^0,c	;volatile
  1785   0001FC                     
  1786                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 95:         RB6_ISR(0);
  1787   0001FC  0E00               	movlw	0
  1788   0001FE  EC3C  F00A         	call	_RB6_ISR
  1789   000202                     i2l2795:
  1790                           
  1791                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 98:     if ((INTCONbits.RBIE == 1) && (I
      +                          NTCONbits.RBIF == 1) &&
  1792   000202  A6F2               	btfss	242,3,c	;volatile
  1793   000204  EF06  F001         	goto	i2u162_41
  1794   000208  EF08  F001         	goto	i2u162_40
  1795   00020C                     i2u162_41:
  1796   00020C  EF23  F001         	goto	i2l533
  1797   000210                     i2u162_40:
  1798   000210  A0F2               	btfss	242,0,c	;volatile
  1799   000212  EF0D  F001         	goto	i2u163_41
  1800   000216  EF0F  F001         	goto	i2u163_40
  1801   00021A                     i2u163_41:
  1802   00021A  EF23  F001         	goto	i2l533
  1803   00021E                     i2u163_40:
  1804   00021E  AE81               	btfss	129,7,c	;volatile
  1805   000220  EF14  F001         	goto	i2u164_41
  1806   000224  EF16  F001         	goto	i2u164_40
  1807   000228                     i2u164_41:
  1808   000228  EF23  F001         	goto	i2l533
  1809   00022C                     i2u164_40:
  1810   00022C  041F               	decf	_RB7_Flag^0,w,c	;volatile
  1811   00022E  A4D8               	btfss	status,2,c
  1812   000230  EF1C  F001         	goto	i2u165_41
  1813   000234  EF1E  F001         	goto	i2u165_40
  1814   000238                     i2u165_41:
  1815   000238  EF23  F001         	goto	i2l533
  1816   00023C                     i2u165_40:
  1817   00023C                     
  1818                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 100:     {;MCAL_Layer/interrupt/mcal_int
      +                          errupt_manager.c: 101:         RB7_Flag = 0;
  1819   00023C  0E00               	movlw	0
  1820   00023E  6E1F               	movwf	_RB7_Flag^0,c	;volatile
  1821   000240                     
  1822                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 102:         RB7_ISR(1);
  1823   000240  0E01               	movlw	1
  1824   000242  EC2F  F00A         	call	_RB7_ISR
  1825   000246                     i2l533:
  1826                           
  1827                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 105:     if ((INTCONbits.RBIE == 1) && (
      +                          INTCONbits.RBIF == 1) &&
  1828   000246  A6F2               	btfss	242,3,c	;volatile
  1829   000248  EF28  F001         	goto	i2u166_41
  1830   00024C  EF2A  F001         	goto	i2u166_40
  1831   000250                     i2u166_41:
  1832   000250  EF45  F001         	goto	i2l536
  1833   000254                     i2u166_40:
  1834   000254  A0F2               	btfss	242,0,c	;volatile
  1835   000256  EF2F  F001         	goto	i2u167_41
  1836   00025A  EF31  F001         	goto	i2u167_40
  1837   00025E                     i2u167_41:
  1838   00025E  EF45  F001         	goto	i2l536
  1839   000262                     i2u167_40:
  1840   000262  BE81               	btfsc	129,7,c	;volatile
  1841   000264  EF36  F001         	goto	i2u168_41
  1842   000268  EF38  F001         	goto	i2u168_40
  1843   00026C                     i2u168_41:
  1844   00026C  EF45  F001         	goto	i2l536
  1845   000270                     i2u168_40:
  1846   000270  501F               	movf	_RB7_Flag^0,w,c	;volatile
  1847   000272  A4D8               	btfss	status,2,c
  1848   000274  EF3E  F001         	goto	i2u169_41
  1849   000278  EF40  F001         	goto	i2u169_40
  1850   00027C                     i2u169_41:
  1851   00027C  EF45  F001         	goto	i2l536
  1852   000280                     i2u169_40:
  1853   000280                     
  1854                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 107:     {;MCAL_Layer/interrupt/mcal_int
      +                          errupt_manager.c: 108:         RB7_Flag = 1;
  1855   000280  0E01               	movlw	1
  1856   000282  6E1F               	movwf	_RB7_Flag^0,c	;volatile
  1857   000284                     
  1858                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 109:         RB7_ISR(0);
  1859   000284  0E00               	movlw	0
  1860   000286  EC2F  F00A         	call	_RB7_ISR
  1861   00028A                     i2l536:
  1862   00028A  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1863   00028C  0011               	retfie		f
  1864   00028E                     __end_of_InterruptManager:
  1865                           	callstack 0
  1866                           
  1867 ;; *************** function _RB7_ISR *****************
  1868 ;; Defined at:
  1869 ;;		line 168 in file "MCAL_Layer/interrupt/mcal_external_interrupt.c"
  1870 ;; Parameters:    Size  Location     Type
  1871 ;;  RB7_source      1    wreg     unsigned char 
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;  RB7_source      1    0[COMRAM] unsigned char 
  1874 ;; Return value:  Size  Location     Type
  1875 ;;                  1    wreg      void 
  1876 ;; Registers used:
  1877 ;;		wreg, status,2, status,0
  1878 ;; Tracked objects:
  1879 ;;		On entry : 0/0
  1880 ;;		On exit  : 0/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1884 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1886 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1887 ;;Total ram usage:        1 bytes
  1888 ;; Hardware stack levels used: 1
  1889 ;; This function calls:
  1890 ;;		Nothing
  1891 ;; This function is called by:
  1892 ;;		_InterruptManager
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           	psect	text12
  1897   00145E                     __ptext12:
  1898                           	callstack 0
  1899   00145E                     _RB7_ISR:
  1900                           	callstack 26
  1901                           
  1902                           ;incstack = 0
  1903                           ;RB7_ISR@RB7_source stored from wreg
  1904   00145E  6E4E               	movwf	RB7_ISR@RB7_source^0,c
  1905   001460                     
  1906                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 170:     (INTCONbits.RBIF = 0);
  1907   001460  90F2               	bcf	242,0,c	;volatile
  1908   001462                     
  1909                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 175:     if (0 == RB7_source)
  1910   001462  504E               	movf	RB7_ISR@RB7_source^0,w,c
  1911   001464  A4D8               	btfss	status,2,c
  1912   001466  EF37  F00A         	goto	i2u40_41
  1913   00146A  EF39  F00A         	goto	i2u40_40
  1914   00146E                     i2u40_41:
  1915   00146E  EF3B  F00A         	goto	i2l1943
  1916   001472                     i2u40_40:
  1917   001472  EF3B  F00A         	goto	i2l635
  1918   001476                     i2l1943:
  1919   001476                     i2l635:
  1920   001476  0012               	return		;funcret
  1921   001478                     __end_of_RB7_ISR:
  1922                           	callstack 0
  1923                           
  1924 ;; *************** function _RB6_ISR *****************
  1925 ;; Defined at:
  1926 ;;		line 150 in file "MCAL_Layer/interrupt/mcal_external_interrupt.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;  RB6_source      1    wreg     unsigned char 
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;  RB6_source      1    0[COMRAM] unsigned char 
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  1    wreg      void 
  1933 ;; Registers used:
  1934 ;;		wreg, status,2, status,0
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1941 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1943 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1944 ;;Total ram usage:        1 bytes
  1945 ;; Hardware stack levels used: 1
  1946 ;; This function calls:
  1947 ;;		Nothing
  1948 ;; This function is called by:
  1949 ;;		_InterruptManager
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953                           	psect	text13
  1954   001478                     __ptext13:
  1955                           	callstack 0
  1956   001478                     _RB6_ISR:
  1957                           	callstack 26
  1958                           
  1959                           ;incstack = 0
  1960                           ;RB6_ISR@RB6_source stored from wreg
  1961   001478  6E4E               	movwf	RB6_ISR@RB6_source^0,c
  1962   00147A                     
  1963                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 152:     (INTCONbits.RBIF = 0);
  1964   00147A  90F2               	bcf	242,0,c	;volatile
  1965   00147C                     
  1966                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 157:     if (0 == RB6_source)
  1967   00147C  504E               	movf	RB6_ISR@RB6_source^0,w,c
  1968   00147E  A4D8               	btfss	status,2,c
  1969   001480  EF44  F00A         	goto	i2u39_41
  1970   001484  EF46  F00A         	goto	i2u39_40
  1971   001488                     i2u39_41:
  1972   001488  EF48  F00A         	goto	i2l1929
  1973   00148C                     i2u39_40:
  1974   00148C  EF48  F00A         	goto	i2l625
  1975   001490                     i2l1929:
  1976   001490                     i2l625:
  1977   001490  0012               	return		;funcret
  1978   001492                     __end_of_RB6_ISR:
  1979                           	callstack 0
  1980                           
  1981 ;; *************** function _RB5_ISR *****************
  1982 ;; Defined at:
  1983 ;;		line 132 in file "MCAL_Layer/interrupt/mcal_external_interrupt.c"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;  RB5_source      1    wreg     unsigned char 
  1986 ;; Auto vars:     Size  Location     Type
  1987 ;;  RB5_source      1    0[COMRAM] unsigned char 
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  1    wreg      void 
  1990 ;; Registers used:
  1991 ;;		wreg, status,2, status,0
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1998 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2000 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2001 ;;Total ram usage:        1 bytes
  2002 ;; Hardware stack levels used: 1
  2003 ;; This function calls:
  2004 ;;		Nothing
  2005 ;; This function is called by:
  2006 ;;		_InterruptManager
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           
  2010                           	psect	text14
  2011   001492                     __ptext14:
  2012                           	callstack 0
  2013   001492                     _RB5_ISR:
  2014                           	callstack 26
  2015                           
  2016                           ;incstack = 0
  2017                           ;RB5_ISR@RB5_source stored from wreg
  2018   001492  6E4E               	movwf	RB5_ISR@RB5_source^0,c
  2019   001494                     
  2020                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 134:     (INTCONbits.RBIF = 0);
  2021   001494  90F2               	bcf	242,0,c	;volatile
  2022   001496                     
  2023                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 138:     if (0 == RB5_source)
  2024   001496  504E               	movf	RB5_ISR@RB5_source^0,w,c
  2025   001498  A4D8               	btfss	status,2,c
  2026   00149A  EF51  F00A         	goto	i2u38_41
  2027   00149E  EF53  F00A         	goto	i2u38_40
  2028   0014A2                     i2u38_41:
  2029   0014A2  EF55  F00A         	goto	i2l1915
  2030   0014A6                     i2u38_40:
  2031   0014A6  EF55  F00A         	goto	i2l615
  2032   0014AA                     i2l1915:
  2033   0014AA                     i2l615:
  2034   0014AA  0012               	return		;funcret
  2035   0014AC                     __end_of_RB5_ISR:
  2036                           	callstack 0
  2037                           
  2038 ;; *************** function _RB4_ISR *****************
  2039 ;; Defined at:
  2040 ;;		line 114 in file "MCAL_Layer/interrupt/mcal_external_interrupt.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;  RB4_source      1    wreg     unsigned char 
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;  RB4_source      1    0[COMRAM] unsigned char 
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  1    wreg      void 
  2047 ;; Registers used:
  2048 ;;		wreg, status,2, status,0
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2055 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2057 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2058 ;;Total ram usage:        1 bytes
  2059 ;; Hardware stack levels used: 1
  2060 ;; This function calls:
  2061 ;;		Nothing
  2062 ;; This function is called by:
  2063 ;;		_InterruptManager
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067                           	psect	text15
  2068   0014AC                     __ptext15:
  2069                           	callstack 0
  2070   0014AC                     _RB4_ISR:
  2071                           	callstack 26
  2072                           
  2073                           ;incstack = 0
  2074                           ;RB4_ISR@RB4_source stored from wreg
  2075   0014AC  6E4E               	movwf	RB4_ISR@RB4_source^0,c
  2076   0014AE                     
  2077                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 116:     (INTCONbits.RBIF = 0);
  2078   0014AE  90F2               	bcf	242,0,c	;volatile
  2079   0014B0                     
  2080                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 120:     if (0 == RB4_source)
  2081   0014B0  504E               	movf	RB4_ISR@RB4_source^0,w,c
  2082   0014B2  A4D8               	btfss	status,2,c
  2083   0014B4  EF5E  F00A         	goto	i2u37_41
  2084   0014B8  EF60  F00A         	goto	i2u37_40
  2085   0014BC                     i2u37_41:
  2086   0014BC  EF62  F00A         	goto	i2l1901
  2087   0014C0                     i2u37_40:
  2088   0014C0  EF62  F00A         	goto	i2l605
  2089   0014C4                     i2l1901:
  2090   0014C4                     i2l605:
  2091   0014C4  0012               	return		;funcret
  2092   0014C6                     __end_of_RB4_ISR:
  2093                           	callstack 0
  2094                           
  2095 ;; *************** function _INT2_ISR *****************
  2096 ;; Defined at:
  2097 ;;		line 101 in file "MCAL_Layer/interrupt/mcal_external_interrupt.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;		None
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;		None
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  1    wreg      void 
  2104 ;; Registers used:
  2105 ;;		None
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2115 ;;Total ram usage:        0 bytes
  2116 ;; Hardware stack levels used: 1
  2117 ;; This function calls:
  2118 ;;		Nothing
  2119 ;; This function is called by:
  2120 ;;		_InterruptManager
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           	psect	text16
  2125   0014D6                     __ptext16:
  2126                           	callstack 0
  2127   0014D6                     _INT2_ISR:
  2128                           	callstack 26
  2129   0014D6                     
  2130                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 103:     (INTCON3bits.INT2IF = 0);
  2131   0014D6  92F0               	bcf	240,1,c	;volatile
  2132   0014D8  0012               	return		;funcret
  2133   0014DA                     __end_of_INT2_ISR:
  2134                           	callstack 0
  2135                           
  2136 ;; *************** function _INT1_ISR *****************
  2137 ;; Defined at:
  2138 ;;		line 88 in file "MCAL_Layer/interrupt/mcal_external_interrupt.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;		None
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;		None
  2143 ;; Return value:  Size  Location     Type
  2144 ;;                  1    wreg      void 
  2145 ;; Registers used:
  2146 ;;		None
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2156 ;;Total ram usage:        0 bytes
  2157 ;; Hardware stack levels used: 1
  2158 ;; This function calls:
  2159 ;;		Nothing
  2160 ;; This function is called by:
  2161 ;;		_InterruptManager
  2162 ;; This function uses a non-reentrant model
  2163 ;;
  2164                           
  2165                           	psect	text17
  2166   0014DA                     __ptext17:
  2167                           	callstack 0
  2168   0014DA                     _INT1_ISR:
  2169                           	callstack 26
  2170   0014DA                     
  2171                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 90:     (INTCON3bits.INT1IF = 0);
  2172   0014DA  90F0               	bcf	240,0,c	;volatile
  2173   0014DC  0012               	return		;funcret
  2174   0014DE                     __end_of_INT1_ISR:
  2175                           	callstack 0
  2176                           
  2177 ;; *************** function _INT0_ISR *****************
  2178 ;; Defined at:
  2179 ;;		line 73 in file "MCAL_Layer/interrupt/mcal_external_interrupt.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;		None
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;		None
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  1    wreg      void 
  2186 ;; Registers used:
  2187 ;;		None
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2197 ;;Total ram usage:        0 bytes
  2198 ;; Hardware stack levels used: 1
  2199 ;; This function calls:
  2200 ;;		Nothing
  2201 ;; This function is called by:
  2202 ;;		_InterruptManager
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           	psect	text18
  2207   0014DE                     __ptext18:
  2208                           	callstack 0
  2209   0014DE                     _INT0_ISR:
  2210                           	callstack 26
  2211   0014DE                     
  2212                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 75:     (INTCONbits.INT0IF = 0);
  2213   0014DE  92F2               	bcf	242,1,c	;volatile
  2214   0014E0  0012               	return		;funcret
  2215   0014E2                     __end_of_INT0_ISR:
  2216                           	callstack 0
  2217                           
  2218                           	psect	rparam
  2219   000000                     
  2220                           	psect	temp
  2221   00005C                     btemp:
  2222                           	callstack 0
  2223   00005C                     	ds	1
  2224   000000                     int$flags	set	btemp
  2225   000000                     wtemp8	set	btemp+1
  2226   000000                     ttemp5	set	btemp+1
  2227   000000                     ttemp6	set	btemp+4
  2228   000000                     ttemp7	set	btemp+8
  2229                           
  2230                           	psect	config
  2231                           
  2232                           ; Padding undefined space
  2233   300000                     	org	3145728
  2234   300000  FF                 	db	255
  2235                           
  2236                           ;Config register CONFIG1H @ 0x300001
  2237                           ;	Oscillator Selection bits
  2238                           ;	FOSC = RCIO6, External RC oscillator, port function on RA6
  2239                           ;	Fail-Safe Clock Monitor Enable bit
  2240                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2241                           ;	Internal/External Oscillator Switchover bit
  2242                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2243   300001                     	org	3145729
  2244   300001  07                 	db	7
  2245                           
  2246                           ;Config register CONFIG2L @ 0x300002
  2247                           ;	Power-up Timer Enable bit
  2248                           ;	PWRTEN = OFF, PWRT disabled
  2249                           ;	Brown-out Reset Enable bits
  2250                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2251                           ;	Brown Out Reset Voltage bits
  2252                           ;	BORV = 18, VBOR set to 1.8 V nominal
  2253   300002                     	org	3145730
  2254   300002  1F                 	db	31
  2255                           
  2256                           ;Config register CONFIG2H @ 0x300003
  2257                           ;	Watchdog Timer Enable bit
  2258                           ;	WDTEN = ON, WDT is always enabled. SWDTEN bit has no effect
  2259                           ;	Watchdog Timer Postscale Select bits
  2260                           ;	WDTPS = 32768, 1:32768
  2261   300003                     	org	3145731
  2262   300003  1F                 	db	31
  2263                           
  2264                           ; Padding undefined space
  2265   300004                     	org	3145732
  2266   300004  FF                 	db	255
  2267                           
  2268                           ;Config register CONFIG3H @ 0x300005
  2269                           ;	CCP2 MUX bit
  2270                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2271                           ;	PORTB A/D Enable bit
  2272                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2273                           ;	Low-Power Timer1 Oscillator Enable bit
  2274                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2275                           ;	HFINTOSC Fast Start-up
  2276                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  2277                           ;	MCLR Pin Enable bit
  2278                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2279   300005                     	org	3145733
  2280   300005  89                 	db	137
  2281                           
  2282                           ;Config register CONFIG4L @ 0x300006
  2283                           ;	Stack Full/Underflow Reset Enable bit
  2284                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2285                           ;	Single-Supply ICSP Enable bit
  2286                           ;	LVP = ON, Single-Supply ICSP enabled
  2287                           ;	Extended Instruction Set Enable bit
  2288                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2289                           ;	Background Debugger Enable bit
  2290                           ;	DEBUG = 0x1, unprogrammed default
  2291   300006                     	org	3145734
  2292   300006  85                 	db	133
  2293                           
  2294                           ; Padding undefined space
  2295   300007                     	org	3145735
  2296   300007  FF                 	db	255
  2297                           
  2298                           ;Config register CONFIG5L @ 0x300008
  2299                           ;	Code Protection Block 0
  2300                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2301                           ;	Code Protection Block 1
  2302                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2303                           ;	Code Protection Block 2
  2304                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2305                           ;	Code Protection Block 3
  2306                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2307   300008                     	org	3145736
  2308   300008  0F                 	db	15
  2309                           
  2310                           ;Config register CONFIG5H @ 0x300009
  2311                           ;	Boot Block Code Protection bit
  2312                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2313                           ;	Data EEPROM Code Protection bit
  2314                           ;	CPD = OFF, Data EEPROM not code-protected
  2315   300009                     	org	3145737
  2316   300009  C0                 	db	192
  2317                           
  2318                           ;Config register CONFIG6L @ 0x30000A
  2319                           ;	Write Protection Block 0
  2320                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2321                           ;	Write Protection Block 1
  2322                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2323                           ;	Write Protection Block 2
  2324                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2325                           ;	Write Protection Block 3
  2326                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  2327   30000A                     	org	3145738
  2328   30000A  0F                 	db	15
  2329                           
  2330                           ;Config register CONFIG6H @ 0x30000B
  2331                           ;	Configuration Register Write Protection bit
  2332                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2333                           ;	Boot Block Write Protection bit
  2334                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2335                           ;	Data EEPROM Write Protection bit
  2336                           ;	WRTD = OFF, Data EEPROM not write-protected
  2337   30000B                     	org	3145739
  2338   30000B  E0                 	db	224
  2339                           
  2340                           ;Config register CONFIG7L @ 0x30000C
  2341                           ;	Table Read Protection Block 0
  2342                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2343                           ;	Table Read Protection Block 1
  2344                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2345                           ;	Table Read Protection Block 2
  2346                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2347                           ;	Table Read Protection Block 3
  2348                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2349   30000C                     	org	3145740
  2350   30000C  0F                 	db	15
  2351                           
  2352                           ;Config register CONFIG7H @ 0x30000D
  2353                           ;	Boot Block Table Read Protection bit
  2354                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2355   30000D                     	org	3145741
  2356   30000D  40                 	db	64
  2357                           tosu	equ	0xFFF
  2358                           tosh	equ	0xFFE
  2359                           tosl	equ	0xFFD
  2360                           stkptr	equ	0xFFC
  2361                           pclatu	equ	0xFFB
  2362                           pclath	equ	0xFFA
  2363                           pcl	equ	0xFF9
  2364                           tblptru	equ	0xFF8
  2365                           tblptrh	equ	0xFF7
  2366                           tblptrl	equ	0xFF6
  2367                           tablat	equ	0xFF5
  2368                           prodh	equ	0xFF4
  2369                           prodl	equ	0xFF3
  2370                           indf0	equ	0xFEF
  2371                           postinc0	equ	0xFEE
  2372                           postdec0	equ	0xFED
  2373                           preinc0	equ	0xFEC
  2374                           plusw0	equ	0xFEB
  2375                           fsr0h	equ	0xFEA
  2376                           fsr0l	equ	0xFE9
  2377                           wreg	equ	0xFE8
  2378                           indf1	equ	0xFE7
  2379                           postinc1	equ	0xFE6
  2380                           postdec1	equ	0xFE5
  2381                           preinc1	equ	0xFE4
  2382                           plusw1	equ	0xFE3
  2383                           fsr1h	equ	0xFE2
  2384                           fsr1l	equ	0xFE1
  2385                           bsr	equ	0xFE0
  2386                           indf2	equ	0xFDF
  2387                           postinc2	equ	0xFDE
  2388                           postdec2	equ	0xFDD
  2389                           preinc2	equ	0xFDC
  2390                           plusw2	equ	0xFDB
  2391                           fsr2h	equ	0xFDA
  2392                           fsr2l	equ	0xFD9
  2393                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        40
    BSS         37
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     13      91
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    adc_1$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_GetConversion_Blocking@_adc	PTR const struct . size(1) Largest target is 6
		 -> adc_1(COMRAM[6]), 

    ADC_GetConversion_Blocking@conversion_result	PTR unsigned short  size(1) Largest target is 2
		 -> res_1(COMRAM[2]), res_2(COMRAM[2]), res_3(COMRAM[2]), res_4(COMRAM[2]), 

    ADC_GetConversionResult@_adc	PTR const struct . size(1) Largest target is 6
		 -> adc_1(COMRAM[6]), 

    ADC_GetConversionResult@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_GetConversionResult@conversion_result	PTR unsigned short  size(1) Largest target is 2
		 -> res_1(COMRAM[2]), res_2(COMRAM[2]), res_3(COMRAM[2]), res_4(COMRAM[2]), 

    ADC_Init@_adc	PTR const struct . size(1) Largest target is 6
		 -> adc_1(COMRAM[6]), 

    ADC_Init@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_SelectChannel@_adc	PTR const struct . size(1) Largest target is 6
		 -> adc_1(COMRAM[6]), 

    ADC_StartConversion@_adc	PTR const struct . size(1) Largest target is 6
		 -> adc_1(COMRAM[6]), 

    configure_voltage_reference@_adc	PTR const struct . size(1) Largest target is 6
		 -> adc_1(COMRAM[6]), 

    configure_voltage_reference@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_INTx_Clear_Flag@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_SetInterruptHandler@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRllllll[1]), LATB(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), 
		 -> LATE(BITBIGSFRllllh[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRllllll[1]), PORTB(BITBIGSFRlllllh[1]), PORTC(BITBIGSFRlllllh[1]), PORTD(BITBIGSFRlllllh[1]), 
		 -> PORTE(BITBIGSFRlllllh[1]), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1089$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1187$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    S1187$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    S1427$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S2181$buffer	PTR unsigned char  size(2) Largest target is 0

    S2181$source	PTR const unsigned char  size(2) Largest target is 0

    select_result_format@_adc	PTR const struct . size(1) Largest target is 6
		 -> adc_1(COMRAM[6]), 

    select_result_format@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    sp__memset	PTR void  size(2) Largest target is 0

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRllllll[1]), TRISB(BITBIGSFRlllh[1]), TRISC(BITBIGSFRlllh[1]), TRISD(BITBIGSFRlllh[1]), 
		 -> TRISE(BITBIGSFRlllh[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_ADC_GetConversion_Blocking
    _Application->_ADC_Init
    _ADC_Init->_adc_input_channel_port_configure
    _ADC_GetConversion_Blocking->_ADC_SelectChannel
    _ADC_SelectChannel->_adc_input_channel_port_configure

Critical Paths under _InterruptManager in COMRAM

    _InterruptManager->_RB4_ISR
    _InterruptManager->_RB5_ISR
    _InterruptManager->_RB6_ISR
    _InterruptManager->_RB7_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2382
         _ADC_GetConversion_Blocking
                        _Application
 ---------------------------------------------------------------------------------
 (1) _Application                                          0     0      0     574
                           _ADC_Init
               _ecu_layer_initialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             3     2      1     574
                                              4 COMRAM     3     2      1
   _adc_input_channel_port_configure
        _configure_voltage_reference
               _select_result_format
 ---------------------------------------------------------------------------------
 (3) _select_result_format                                 2     1      1     150
                                              1 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (3) _configure_voltage_reference                          2     1      1     150
                                              1 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion_Blocking                           5     2      3    1808
                                              8 COMRAM     5     2      3
            _ADC_GetConversionResult
                  _ADC_SelectChannel
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_StartConversion                                  2     1      1     122
                                              1 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    4     2      2     262
                                              4 COMRAM     4     2      2
   _adc_input_channel_port_configure
 ---------------------------------------------------------------------------------
 (3) _adc_input_channel_port_configure                     4     4      0      20
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversionResult                              6     4      2     330
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _InterruptManager                                     0     0      0     120
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (5) _RB7_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _RB6_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _RB5_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _RB4_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion_Blocking
     _ADC_GetConversionResult
     _ADC_SelectChannel
       _adc_input_channel_port_configure
     _ADC_StartConversion
   _Application
     _ADC_Init
       _adc_input_channel_port_configure
       _configure_voltage_reference
       _select_result_format
     _ecu_layer_initialize

 _InterruptManager (ROOT)
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      44        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      D      5B       1       96.8%
BITBIGSFRlhlhh      2B      0       0      38        0.0%
BITBIGSFRllllll     20      0       0      43        0.0%
BITBIGSFRlhlll      15      0       0      39        0.0%
BITBIGSFRlllh        F      0       0      40        0.0%
BITBIGSFRh           D      0       0      37        0.0%
BITBIGSFRlllllh      4      0       0      42        0.0%
BITBIGSFRllllh       4      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5B      14        0.0%
DATA                 0      0      5B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Aug 31 15:08:13 2024

                           ??_InterruptManager 004F                                            l341 14E2  
                                          l800 11C6                                            l802 123E  
                                          l812 13DC                                            l815 1458  
                                          l817 145C                                            l842 1284  
                                          l835 11A8                                            l845 12A2  
                                          l871 13A2                                            l775 14D4  
                                          l864 10F0                                            l873 13A4  
                                          l769 1302                                            l883 12F0  
                                          l886 12F8                                            l879 12D0  
                                          l888 12FC            __end_of_configure_voltage_reference 12FE  
                  _configure_voltage_reference 12A4                      _RB5_InterruptHandler_HIGH 0033  
                                          _ret 005B                            led_initialize@F3310 0045  
                                          wreg 0FE8                          relay_initialize@F3304 0041  
                              __end_of_RB4_ISR 14C6                                __end_of_RB5_ISR 14AC  
                              __end_of_RB6_ISR 1492                                __end_of_RB7_ISR 1478  
                                         l3103 11A6                                           l3111 1240  
                                         l3031 1362                                           l1601 105E  
                                         l3121 12A0                                           l3113 1254  
                                         l3041 12A4                                           l3033 1366  
                                         l3131 1082                                           l1603 1064  
                                         l3115 1264                                           l3043 12B4  
                                         l3035 137E                                           l3051 11BE  
                                         l3107 14C6                                           l1605 106A  
                                         l3117 126C                                           l3045 12B8  
                                         l3037 1384                                           l3029 1352  
                                         l3061 123A                                           l3053 11C8  
                                         l3109 14D0                                           l3125 12FE  
                                         l1607 106E                                           l3071 13C2  
                                         l3119 1292                                           l3047 12D8  
                                         l3039 139C                                           l3055 121A  
                                         l3063 123C                                           l3073 13D4  
                                         l3081 1450                                           l3057 122A  
                                         l3049 11AA                                           l3091 1116  
                                         l3075 13DA                                           l3067 13A6  
                                         l3083 145A                                           l3059 1232  
                                         l3093 111E                                           l1581 1022  
                                         l3069 13BA                                           l3095 1136  
                                         l3087 10F2                                           l1591 1040  
                                         l1583 1028                                           l3079 143C  
                                         l3097 115C                                           l3089 1106  
                                         l1593 1046                                           l1585 102E  
                                         l1577 1018                                           l3099 1174  
                                         l1595 104C                                           l1587 1034  
                                         l1579 101C                                           l1597 1052  
                                         l1589 103A                                           l1599 1058  
                                         STR_1 1011                                           u2000 1106  
                                         u2001 1102                                           u2010 1116  
                                         u2011 1112                                           u2020 1136  
                                         u2021 1132                                           u2030 1174  
                                         u2031 1170                                           u2050 1254  
                                         u2051 1250                                           u2060 1264  
                                         u2045 118C                                           u2061 1260  
                                         _LATA 0F89                                           u2070 1292  
                                         _LATB 0F8A                                           u2071 128E  
                                         _LATC 0F8B                                           _LATD 0F8C  
                                         _LATE 0F8D                                           u1910 1362  
                                         u1911 135E                                           u1920 137E  
                                         u1921 137A                                           u1930 139C  
                                         u1931 1398                                           u1940 12B4  
                                         u1941 12B0                                           u1950 12D0  
                                         u1951 12CC                                           u1960 12F0  
                                         u1961 12EC                                           u1970 11BE  
                                         u1971 11BA                                           u1980 13BA  
                                         u1981 13B6                                           u1990 1450  
                                         u1991 144C                       _RB4_InterruptHandler_LOW 0035  
                                         _main 12FE                       _RB7_InterruptHandler_LOW 0029  
                                         fsr2h 0FDA                                           indf2 0FDF  
                                         fsr1l 0FE1                                           fsr2l 0FD9  
                                         btemp 005C                               __end_of_ADC_Init 1240  
                                         start 028E                            __end_of_Application 14D6  
                                 ___param_bank 0000                               __end_of_INT0_ISR 14E2  
                             __end_of_INT1_ISR 14DE                               __end_of_INT2_ISR 14DA  
                                        ?_main 004E                                          _EEADR 0FA9  
                                        i2l521 006A                                          i2l530 01BE  
                                        i2l523 00AE                                          i2l605 14C4  
                                        i2l533 0246                                          i2l525 00F2  
                                        i2l517 002A                                          i2l615 14AA  
                                        i2l527 0136                                          i2l519 004A  
                                        i2l536 028A                                          i2l625 1490  
                                        i2l635 1476                                          i2l591 14DC  
                                        i2l587 14E0                                          i2l595 14D8  
                          relay_turn_off@F3314 003F                                          _PORTA 0F80  
                                        _PORTB 0F81                                          _PORTC 0F82  
                                        _PORTD 0F83                                          _PORTE 0F84  
                                        _TRISA 0F92                                          _TRISB 0F93  
                                        _TRISC 0F94                                          _TRISD 0F95  
                                        _TRISE 0F96                                          _adc_1 0023  
                                        _res_1 004C                                          _res_2 004A  
                                        _res_3 0048                                          _res_4 0046  
                                        tablat 0FF5                                          ttemp5 005D  
                                        ttemp6 0060                                          ttemp7 0064  
                                        status 0FD8                                          wtemp8 005D  
                              __initialization 13DE                                   __end_of_main 1352  
                                _lat_registers 000B                                         ??_main 005B  
                                __activetblptr 0003                               led_turn_on@F3315 0044  
                                    ??_RB4_ISR 004E                                      ??_RB5_ISR 004E  
                                    ??_RB6_ISR 004E                                      ??_RB7_ISR 004E  
                                       _ADRESH 0FC4                                         _EEADRH 0FAA  
                                       _ADRESL 0FC3                                         _EEDATA 0FA8  
                                       _EECON2 0FA7                                         i2l1901 14C4  
                                       i2l1921 147A                                         i2l2801 022C  
                                       i2l2721 0018                                         i2l1915 14AA  
                                       i2l1907 1494                                         i2l1923 147C  
                                       i2l2811 0270                                         i2l2803 023C  
                                       i2l2731 0066                                         i2l2723 0026  
                                       i2l1909 1496                                         i2l2813 0280  
                                       i2l2805 0240                                         i2l2741 00A8  
                                       i2l2733 0078                                         i2l2725 0038  
                                       i2l1943 1476                                         i2l1935 1460  
                                       i2l2815 0284                                         i2l2807 0254  
                                       i2l2751 00EC                                         i2l2743 00BC  
                                       i2l2735 0086                                         i2l2727 0046  
                                       i2l2719 000A                                         i2l1881 14DE  
                                       i2l1929 1490                                         i2l1937 1462  
                                       i2l2809 0262                                         i2l2761 0130  
                                       i2l2753 0100                                         i2l2745 00CA  
                                       i2l2737 0094                                         i2l2729 0058  
                                       i2l2771 0174                                         i2l2763 0144  
                                       i2l2755 010E                                         i2l2747 00D8  
                                       i2l2739 00A4                                         i2l1885 14DA  
                                       i2l1893 14AE                                         i2l2781 01B4  
                                       i2l2765 0152                                         i2l2773 017A  
                                       i2l2757 011C                                         i2l2749 00E8  
                                       i2l1895 14B0                                         i2l2791 01F8  
                                       i2l2783 01B8                                         i2l2775 0188  
                                       i2l2767 0160                                         i2l2759 012C  
                                       i2l1889 14D6                                         i2l2793 01FC  
                                       i2l2785 01CC                                         i2l2777 0196  
                                       i2l2769 0170                                         i2l2787 01DA  
                                       i2l2795 0202                                         i2l2779 01A4  
                                       i2l2797 0210                                         i2l2789 01E8  
                                       i2l2799 021E                                    _Application 14C6  
            ADC_GetConversion_Blocking@channel 0057                                         clear_0 1404  
                                       isa$std 0001                                   __pdataCOMRAM 0001  
                                    ?_ADC_Init 0052                                   __mediumconst 0000  
                                       tblptrh 0FF7                                         tblptrl 0FF6  
                                       tblptru 0FF8                   __end_of_select_result_format 13A6  
                                   __accesstop 0060                        __end_of__initialization 140A  
                                    ?_INT0_ISR 004E                                      ?_INT1_ISR 004E  
                                    ?_INT2_ISR 004E                                  ___rparam_used 0001  
                               __pcstackCOMRAM 004E                   ??_ADC_GetConversion_Blocking 0059  
                            RB5_ISR@RB5_source 004E                        _ADC_GetConversionResult 10F2  
                                   ??_ADC_Init 0053                           ADC_SelectChannel@ret 0055  
                       ADC_StartConversion@ret 0050                          _INT0_InterruptHandler 003D  
                                   ??_INT0_ISR 004E                                     ??_INT1_ISR 004E  
                                   ??_INT2_ISR 004E                                     __pnvCOMRAM 005B  
                   ADC_GetConversionResult@ret 0054                              led_turn_off@F3320 0043  
               ADC_GetConversion_Blocking@_adc 0056                                        _RB4_ISR 14AC  
                                      _RB5_ISR 1492                                        _RB6_ISR 1478  
                                      _RB7_ISR 145E                      _RB6_InterruptHandler_HIGH 002F  
                         led_turn_toggle@F3325 0042                                        i2u40_40 1472  
                                      i2u40_41 146E                                        i2u37_40 14C0  
                                      i2u37_41 14BC                                        i2u38_40 14A6  
                                      i2u38_41 14A2                                        i2u39_40 148C  
                                      i2u39_41 1488                              RB7_ISR@RB7_source 004E  
                                   _btn_values 1001                                 _tris_registers 0015  
                     _RB6_InterruptHandler_LOW 002D                                        __Hparam 0000  
                                 ADC_Init@_adc 0052                                        __Lparam 0000  
                                 __psmallconst 1000                      ??_ADC_GetConversionResult 0051  
                                      __pcinit 13DE                           _select_result_format 1352  
                                      __ramtop 1000                                        __ptext0 12FE  
                                      __ptext1 14C6                                        __ptext2 14E2  
                                      __ptext3 11AA                                        __ptext4 1352  
                                      __ptext5 12A4                                        __ptext6 1240  
                                      __ptext7 143C                                        __ptext8 13A6  
                                      __ptext9 1016                           end_of_initialization 140A  
                     select_result_format@_adc 004F    ADC_GetConversion_Blocking@conversion_result 0058  
                                 ?_Application 004E             __end_of_ADC_GetConversion_Blocking 12A4  
                   _ADC_GetConversion_Blocking 1240                                        postdec1 0FE5  
                                      postdec2 0FDD                                        postinc0 0FEE  
                                      postinc2 0FDE                          ?_select_result_format 004F  
                        _INT1_InterruptHandler 003B                                      _PORTBbits 0F81  
                             _InterruptManager 0008                            _ADC_StartConversion 143C  
                           relay_turn_on@F3309 0040                           ?_ADC_StartConversion 004F  
                                __pidataCOMRAM 1414        adc_input_channel_port_configure@channel 0051  
                 ?_configure_voltage_reference 004F                            start_initialization 13DE  
     ADC_GetConversionResult@conversion_result 0050                          ADC_SelectChannel@_adc 0052  
                        ??_ADC_StartConversion 0050                         ??_select_result_format 0050  
                 __end_of_ecu_layer_initialize 14E4                        ADC_StartConversion@_adc 004F  
                                     ?_RB4_ISR 004E                                       ?_RB5_ISR 004E  
                                     ?_RB6_ISR 004E                                       ?_RB7_ISR 004E  
                                  __pbssCOMRAM 0029                  ??_configure_voltage_reference 0050  
                  ADC_GetConversionResult@_adc 004F                          _INT2_InterruptHandler 0039  
                                    __pintcode 0008       __end_of_adc_input_channel_port_configure 10F2  
           ??_adc_input_channel_port_configure 004F              ?_adc_input_channel_port_configure 004E  
             _adc_input_channel_port_configure 1016                              _ADC_SelectChannel 13A6  
                ADC_GetConversion_Blocking@ret 005A                             ?_ADC_SelectChannel 0052  
                                  __smallconst 1000                      _RB4_InterruptHandler_HIGH 0037  
                          ??_ADC_SelectChannel 0054                                       _ADC_Init 11AA  
                    _RB7_InterruptHandler_HIGH 002B                                    ADC_Init@ret 0054  
                     _RB5_InterruptHandler_LOW 0031                                       _INT0_ISR 14DE  
                                     _INT1_ISR 14DA                                       _INT2_ISR 14D6  
                                     _RB4_Flag 0022                                       _RB5_Flag 0021  
                                     _RB6_Flag 0020                                       _RB7_Flag 001F  
                     __end_of_InterruptManager 028E                      __end_of_ADC_SelectChannel 13DE  
                                     i2u140_40 0094                                       i2u132_40 0018  
                                     i2u140_41 0090                                       i2u132_41 0014  
                                     i2u141_40 00A4                                       i2u133_40 0026  
                                     i2u141_41 00A0                                       i2u133_41 0022  
                                     i2u150_40 0144                                       i2u142_40 00BC  
                                     i2u134_40 0038                                       i2u150_41 0140  
                                     i2u142_41 00B8                                       i2u134_41 0034  
                                     i2u151_40 0152                                       i2u143_40 00CA  
                                     i2u135_40 0046                                       i2u151_41 014E  
                                     i2u143_41 00C6                                       i2u135_41 0042  
                                     i2u160_40 01E8                                       i2u152_40 0160  
                                     i2u144_40 00D8                                       i2u136_40 0058  
                                     i2u160_41 01E4                                       i2u152_41 015C  
                                     i2u144_41 00D4                                       i2u136_41 0054  
                                     i2u161_40 01F8                                       i2u153_40 0170  
                                     i2u145_40 00E8                                       i2u137_40 0066  
                                     i2u161_41 01F4                                       i2u153_41 016C  
                                     i2u145_41 00E4                                       i2u137_41 0062  
                                     i2u162_40 0210                                       i2u154_40 0188  
                                     i2u146_40 0100                                       i2u138_40 0078  
                                     i2u162_41 020C                                       i2u154_41 0184  
                                     i2u146_41 00FC                                       i2u138_41 0074  
                                     i2u163_40 021E                                       i2u155_40 0196  
                                     i2u147_40 010E                                       i2u139_40 0086  
                                     i2u163_41 021A                                       i2u155_41 0192  
                                     i2u147_41 010A                                       i2u139_41 0082  
                                     i2u164_40 022C                                       i2u156_40 01A4  
                                     i2u148_40 011C                                       i2u164_41 0228  
                                     i2u156_41 01A0                                       i2u148_41 0118  
                                     i2u165_40 023C                                       i2u157_40 01B4  
                                     i2u149_40 012C                                       i2u165_41 0238  
                                     i2u157_41 01B0                                       i2u149_41 0128  
                                     i2u166_40 0254                                       i2u158_40 01CC  
                                     i2u166_41 0250                                       i2u158_41 01C8  
                                     i2u167_40 0262                                       i2u159_40 01DA  
                                     i2u167_41 025E                                       i2u159_41 01D6  
                                     i2u168_40 0270                                       i2u168_41 026C  
                                     i2u169_40 0280                                       i2u169_41 027C  
                  ?_ADC_GetConversion_Blocking 0056                              RB4_ISR@RB4_source 004E  
                                   _ADCON0bits 0FC2                                     _ADCON1bits 0FC1  
                                   _ADCON2bits 0FC0                       ADC_SelectChannel@channel 0053  
                                  _INTCON2bits 0FF1                                    _INTCON3bits 0FF0  
                                    copy_data0 13F2                           _ecu_layer_initialize 14E2  
                                   _EECON1bits 0FA6                                       __Hrparam 0000  
                                     __Lrparam 0000                       ?_ADC_GetConversionResult 004F  
                           __end_of_btn_values 1011                              RB6_ISR@RB6_source 004E  
ADC_GetConversion_Blocking@l_conversion_status 0059                                       __ptext10 10F2  
                                     __ptext12 145E                                       __ptext13 1478  
                                     __ptext14 1492                                       __ptext15 14AC  
                                     __ptext16 14D6                                       __ptext17 14DA  
                                     __ptext18 14DE                configure_voltage_reference@_adc 004F  
                        ?_ecu_layer_initialize 004E                                       isa$xinst 0000  
                                     int$flags 005C                                     _INTCONbits 0FF2  
                                     intlevel2 0000                    __end_of_ADC_StartConversion 145E  
              __end_of_ADC_GetConversionResult 11AA                                 _port_registers 0001  
                       ??_ecu_layer_initialize 004F                                  ??_Application 0055  
                            ?_InterruptManager 004E  
