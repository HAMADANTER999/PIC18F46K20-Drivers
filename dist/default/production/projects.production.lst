

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Sep 25 01:53:51 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    36   000000                     
    37                           ; Generated 12/10/2023 GMT
    38                           ; 
    39                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F46K20 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71   000000                     
    72                           	psect	idataCOMRAM
    73   0010E0                     __pidataCOMRAM:
    74                           	callstack 0
    75                           
    76                           ;initializer for _lat_registers
    77   0010E0  89                 	db	137
    78   0010E1  0F                 	db	15
    79   0010E2  8A                 	db	138
    80   0010E3  0F                 	db	15
    81   0010E4  8B                 	db	139
    82   0010E5  0F                 	db	15
    83   0010E6  8C                 	db	140
    84   0010E7  0F                 	db	15
    85   0010E8  8D                 	db	141
    86   0010E9  0F                 	db	15
    87                           
    88                           ;initializer for _tris_registers
    89   0010EA  92                 	db	146
    90   0010EB  0F                 	db	15
    91   0010EC  93                 	db	147
    92   0010ED  0F                 	db	15
    93   0010EE  94                 	db	148
    94   0010EF  0F                 	db	15
    95   0010F0  95                 	db	149
    96   0010F1  0F                 	db	15
    97   0010F2  96                 	db	150
    98   0010F3  0F                 	db	15
    99                           
   100                           ;initializer for _RB7_Flag
   101   0010F4  01                 	db	1
   102                           
   103                           ;initializer for _RB6_Flag
   104   0010F5  01                 	db	1
   105                           
   106                           ;initializer for _RB5_Flag
   107   0010F6  01                 	db	1
   108                           
   109                           ;initializer for _RB4_Flag
   110   0010F7  01                 	db	1
   111                           
   112                           	psect	idataBANK0
   113   001128                     __pidataBANK0:
   114                           	callstack 0
   115                           
   116                           ;initializer for _port_registers
   117   001128  80                 	db	128
   118   001129  0F                 	db	15
   119   00112A  81                 	db	129
   120   00112B  0F                 	db	15
   121   00112C  82                 	db	130
   122   00112D  0F                 	db	15
   123   00112E  83                 	db	131
   124   00112F  0F                 	db	15
   125   001130  84                 	db	132
   126   001131  0F                 	db	15
   127                           
   128                           	psect	smallconst
   129   001000                     __psmallconst:
   130                           	callstack 0
   131   001000  00                 	db	0
   132   001001                     _btn_values:
   133                           	callstack 0
   134   001001  37                 	db	55
   135   001002  38                 	db	56
   136   001003  39                 	db	57
   137   001004  2F                 	db	47
   138   001005  34                 	db	52
   139   001006  35                 	db	53
   140   001007  36                 	db	54
   141   001008  37                 	db	55
   142   001009  31                 	db	49
   143   00100A  32                 	db	50
   144   00100B  33                 	db	51
   145   00100C  34                 	db	52
   146   00100D  23                 	db	35
   147   00100E  30                 	db	48
   148   00100F  3D                 	db	61
   149   001010  2B                 	db	43
   150   001011                     __end_of_btn_values:
   151                           	callstack 0
   152   000000                     _TMR3L	set	4018
   153   000000                     _TMR3H	set	4019
   154   000000                     _TMR1L	set	4046
   155   000000                     _TMR1H	set	4047
   156   000000                     _TMR0L	set	4054
   157   000000                     _TMR0H	set	4055
   158   000000                     _INTCON2bits	set	4081
   159   000000                     _EECON2	set	4007
   160   000000                     _CCPR2H	set	4028
   161   000000                     _CCPR2L	set	4027
   162   000000                     _CCPR1H	set	4031
   163   000000                     _CCPR1L	set	4030
   164   000000                     _ADCON1bits	set	4033
   165   000000                     _ADRESL	set	4035
   166   000000                     _ADRESH	set	4036
   167   000000                     _INTCONbits	set	4082
   168   000000                     _TRISD	set	3989
   169   000000                     _TRISC	set	3988
   170   000000                     _TRISB	set	3987
   171   000000                     _TRISE	set	3990
   172   000000                     _PORTBbits	set	3969
   173   000000                     _PIE1bits	set	3997
   174   000000                     _ADCON2bits	set	4032
   175   000000                     _ADCON0bits	set	4034
   176   000000                     _PORTA	set	3968
   177   000000                     _LATA	set	3977
   178   000000                     _TRISA	set	3986
   179   000000                     _PIE2bits	set	4000
   180   000000                     _CCP2CONbits	set	4026
   181   000000                     _CCP1CONbits	set	4029
   182   000000                     _PIR1bits	set	3998
   183   000000                     _T2CONbits	set	4042
   184   000000                     _T1CONbits	set	4045
   185   000000                     _T0CONbits	set	4053
   186   000000                     _INTCON3bits	set	4080
   187   000000                     _EECON1bits	set	4006
   188   000000                     _EEDATA	set	4008
   189   000000                     _EEADR	set	4009
   190   000000                     _EEADRH	set	4010
   191   000000                     _T3CONbits	set	4017
   192   000000                     _PIR2bits	set	4001
   193   000000                     _LATE	set	3981
   194   000000                     _LATD	set	3980
   195   000000                     _LATC	set	3979
   196   000000                     _LATB	set	3978
   197   000000                     _PORTE	set	3972
   198   000000                     _PORTD	set	3971
   199   000000                     _PORTC	set	3970
   200   000000                     _PORTB	set	3969
   201   000000                     _TMR2	set	4044
   202   001011                     STR_1:
   203   001011  25                 	db	37
   204   001012  69                 	db	105	;'i'
   205   001013  00                 	db	0
   206   001014  00                 	db	0	; dummy byte at the end
   207   000000                     
   208                           ; #config settings
   209                           
   210                           	psect	cinit
   211   001016                     __pcinit:
   212                           	callstack 0
   213   001016                     start_initialization:
   214                           	callstack 0
   215   001016                     __initialization:
   216                           	callstack 0
   217                           
   218                           ; Initialize objects allocated to BANK0 (10 bytes)
   219                           ; load TBLPTR registers with __pidataBANK0
   220   001016  0E28               	movlw	low __pidataBANK0
   221   001018  6EF6               	movwf	tblptrl,c
   222   00101A  0E11               	movlw	high __pidataBANK0
   223   00101C  6EF7               	movwf	tblptrh,c
   224   00101E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   225   001020  6EF8               	movwf	tblptru,c
   226   001022  EE00  F06B         	lfsr	0,__pdataBANK0
   227   001026  EE10 F00A          	lfsr	1,10
   228   00102A                     copy_data0:
   229   00102A  0009               	tblrd		*+
   230   00102C  CFF5 FFEE          	movff	tablat,postinc0
   231   001030  50E5               	movf	postdec1,w,c
   232   001032  50E1               	movf	fsr1l,w,c
   233   001034  E1FA               	bnz	copy_data0
   234                           
   235                           ; Initialize objects allocated to COMRAM (24 bytes)
   236                           ; load TBLPTR registers with __pidataCOMRAM
   237   001036  0EE0               	movlw	low __pidataCOMRAM
   238   001038  6EF6               	movwf	tblptrl,c
   239   00103A  0E10               	movlw	high __pidataCOMRAM
   240   00103C  6EF7               	movwf	tblptrh,c
   241   00103E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   242   001040  6EF8               	movwf	tblptru,c
   243   001042  EE00  F040         	lfsr	0,__pdataCOMRAM
   244   001046  EE10 F018          	lfsr	1,24
   245   00104A                     copy_data1:
   246   00104A  0009               	tblrd		*+
   247   00104C  CFF5 FFEE          	movff	tablat,postinc0
   248   001050  50E5               	movf	postdec1,w,c
   249   001052  50E1               	movf	fsr1l,w,c
   250   001054  E1FA               	bnz	copy_data1
   251                           
   252                           ; Clear objects allocated to BANK0 (11 bytes)
   253   001056  EE00  F060         	lfsr	0,__pbssBANK0
   254   00105A  0E0B               	movlw	11
   255   00105C                     clear_0:
   256   00105C  6AEE               	clrf	postinc0,c
   257   00105E  06E8               	decf	wreg,f,c
   258   001060  E1FD               	bnz	clear_0
   259                           
   260                           ; Clear objects allocated to COMRAM (63 bytes)
   261   001062  EE00  F001         	lfsr	0,__pbssCOMRAM
   262   001066  0E3F               	movlw	63
   263   001068                     clear_1:
   264   001068  6AEE               	clrf	postinc0,c
   265   00106A  06E8               	decf	wreg,f,c
   266   00106C  E1FD               	bnz	clear_1
   267   00106E                     end_of_initialization:
   268                           	callstack 0
   269   00106E                     __end_of__initialization:
   270                           	callstack 0
   271   00106E  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   272   001070  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   273   001072  0100               	movlb	0
   274   001074  EF7C  F008         	goto	_main	;jump to C main() function
   275                           
   276                           	psect	bssCOMRAM
   277   000001                     __pbssCOMRAM:
   278                           	callstack 0
   279   000001                     	ds	6
   280   000007                     	ds	4
   281   00000B                     _timer3_preload:
   282                           	callstack 0
   283   00000B                     	ds	2
   284   00000D                     _TMR3_InterruptHandler:
   285                           	callstack 0
   286   00000D                     	ds	2
   287   00000F                     _TMR2_InterruptHandler:
   288                           	callstack 0
   289   00000F                     	ds	2
   290   000011                     _timer1_preload:
   291                           	callstack 0
   292   000011                     	ds	2
   293   000013                     _TMR1_InterruptHandler:
   294                           	callstack 0
   295   000013                     	ds	2
   296   000015                     _timer0_preload:
   297                           	callstack 0
   298   000015                     	ds	2
   299   000017                     _TMR0_InterruptHandler:
   300                           	callstack 0
   301   000017                     	ds	2
   302   000019                     _RB7_InterruptHandler_LOW:
   303                           	callstack 0
   304   000019                     	ds	2
   305   00001B                     _RB7_InterruptHandler_HIGH:
   306                           	callstack 0
   307   00001B                     	ds	2
   308   00001D                     _RB6_InterruptHandler_LOW:
   309                           	callstack 0
   310   00001D                     	ds	2
   311   00001F                     _RB6_InterruptHandler_HIGH:
   312                           	callstack 0
   313   00001F                     	ds	2
   314   000021                     _RB5_InterruptHandler_LOW:
   315                           	callstack 0
   316   000021                     	ds	2
   317   000023                     _RB5_InterruptHandler_HIGH:
   318                           	callstack 0
   319   000023                     	ds	2
   320   000025                     _RB4_InterruptHandler_LOW:
   321                           	callstack 0
   322   000025                     	ds	2
   323   000027                     _RB4_InterruptHandler_HIGH:
   324                           	callstack 0
   325   000027                     	ds	2
   326   000029                     _INT2_InterruptHandler:
   327                           	callstack 0
   328   000029                     	ds	2
   329   00002B                     _INT1_InterruptHandler:
   330                           	callstack 0
   331   00002B                     	ds	2
   332   00002D                     _INT0_InterruptHandler:
   333                           	callstack 0
   334   00002D                     	ds	2
   335   00002F                     CCP_Compare_Mode_Set_Value@F3368:
   336                           	callstack 0
   337   00002F                     	ds	2
   338   000031                     _CCP2_InterruptHandler:
   339                           	callstack 0
   340   000031                     	ds	2
   341   000033                     _CCP1_InterruptHandler:
   342                           	callstack 0
   343   000033                     	ds	2
   344   000035                     _ADC_InterruptHandler:
   345                           	callstack 0
   346   000035                     	ds	2
   347   000037                     _timer2_preload:
   348                           	callstack 0
   349   000037                     	ds	1
   350   000038                     _ret:
   351                           	callstack 0
   352   000038                     	ds	1
   353   000039                     relay_turn_off@F3314:
   354                           	callstack 0
   355   000039                     	ds	1
   356   00003A                     relay_turn_on@F3309:
   357                           	callstack 0
   358   00003A                     	ds	1
   359   00003B                     relay_initialize@F3304:
   360                           	callstack 0
   361   00003B                     	ds	1
   362   00003C                     led_turn_toggle@F3325:
   363                           	callstack 0
   364   00003C                     	ds	1
   365   00003D                     led_turn_off@F3320:
   366                           	callstack 0
   367   00003D                     	ds	1
   368   00003E                     led_turn_on@F3315:
   369                           	callstack 0
   370   00003E                     	ds	1
   371   00003F                     led_initialize@F3310:
   372                           	callstack 0
   373   00003F                     	ds	1
   374                           
   375                           	psect	dataCOMRAM
   376   000040                     __pdataCOMRAM:
   377                           	callstack 0
   378   000040                     _lat_registers:
   379                           	callstack 0
   380   000040                     	ds	10
   381   00004A                     _tris_registers:
   382                           	callstack 0
   383   00004A                     	ds	10
   384   000054                     _RB7_Flag:
   385                           	callstack 0
   386   000054                     	ds	1
   387   000055                     _RB6_Flag:
   388                           	callstack 0
   389   000055                     	ds	1
   390   000056                     _RB5_Flag:
   391                           	callstack 0
   392   000056                     	ds	1
   393   000057                     _RB4_Flag:
   394                           	callstack 0
   395   000057                     	ds	1
   396                           
   397                           	psect	bssBANK0
   398   000060                     __pbssBANK0:
   399                           	callstack 0
   400   000060                     	ds	11
   401                           
   402                           	psect	dataBANK0
   403   00006B                     __pdataBANK0:
   404                           	callstack 0
   405   00006B                     _port_registers:
   406                           	callstack 0
   407   00006B                     	ds	10
   408                           
   409                           	psect	cstackCOMRAM
   410   000058                     __pcstackCOMRAM:
   411                           	callstack 0
   412   000058                     RB4_ISR@RB4_source:
   413                           	callstack 0
   414   000058                     RB5_ISR@RB5_source:
   415                           	callstack 0
   416   000058                     RB6_ISR@RB6_source:
   417                           	callstack 0
   418   000058                     RB7_ISR@RB7_source:
   419                           	callstack 0
   420                           
   421                           ; 1 bytes @ 0x0
   422   000058                     	ds	1
   423   000059                     
   424                           ; 1 bytes @ 0x1
   425 ;;
   426 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   427 ;;
   428 ;; *************** function _main *****************
   429 ;; Defined at:
   430 ;;		line 32 in file "application.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;		None
   433 ;; Auto vars:     Size  Location     Type
   434 ;;  ret             1    0        unsigned char 
   435 ;; Return value:  Size  Location     Type
   436 ;;                  2  1262[None  ] int 
   437 ;; Registers used:
   438 ;;		wreg, status,2, cstack
   439 ;; Tracked objects:
   440 ;;		On entry : 0/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   448 ;;Total ram usage:        0 bytes
   449 ;; Hardware stack levels required when called: 4
   450 ;; This function calls:
   451 ;;		_application_intialize
   452 ;; This function is called by:
   453 ;;		Startup code after reset
   454 ;; This function uses a non-reentrant model
   455 ;;
   456                           
   457                           	psect	text0
   458   0010F8                     __ptext0:
   459                           	callstack 0
   460   0010F8                     _main:
   461                           	callstack 27
   462   0010F8                     
   463                           ;application.c: 35:     application_intialize();
   464   0010F8  EC9D  F008         	call	_application_intialize	;wreg free
   465   0010FC                     l1263:
   466   0010FC  EF7E  F008         	goto	l1263
   467   001100  EFB7  F001         	goto	start
   468   001104                     __end_of_main:
   469                           	callstack 0
   470                           
   471 ;; *************** function _application_intialize *****************
   472 ;; Defined at:
   473 ;;		line 43 in file "application.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;		None
   476 ;; Auto vars:     Size  Location     Type
   477 ;;  ret             1    0        unsigned char 
   478 ;; Return value:  Size  Location     Type
   479 ;;                  1    wreg      void 
   480 ;; Registers used:
   481 ;;		wreg, status,2, cstack
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   491 ;;Total ram usage:        0 bytes
   492 ;; Hardware stack levels used: 1
   493 ;; Hardware stack levels required when called: 3
   494 ;; This function calls:
   495 ;;		_ecu_layer_initialize
   496 ;; This function is called by:
   497 ;;		_main
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501                           	psect	text1
   502   00113A                     __ptext1:
   503                           	callstack 0
   504   00113A                     _application_intialize:
   505                           	callstack 27
   506   00113A                     
   507                           ;application.c: 45:     ecu_layer_initialize();
   508   00113A  ECAC  F008         	call	_ecu_layer_initialize	;wreg free
   509   00113E  0012               	return		;funcret
   510   001140                     __end_of_application_intialize:
   511                           	callstack 0
   512                           
   513 ;; *************** function _ecu_layer_initialize *****************
   514 ;; Defined at:
   515 ;;		line 12 in file "ECU_Layer/ecu_layer_init.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;		None
   518 ;; Auto vars:     Size  Location     Type
   519 ;;		None
   520 ;; Return value:  Size  Location     Type
   521 ;;                  1    wreg      void 
   522 ;; Registers used:
   523 ;;		None
   524 ;; Tracked objects:
   525 ;;		On entry : 0/0
   526 ;;		On exit  : 0/0
   527 ;;		Unchanged: 0/0
   528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   533 ;;Total ram usage:        0 bytes
   534 ;; Hardware stack levels used: 1
   535 ;; Hardware stack levels required when called: 2
   536 ;; This function calls:
   537 ;;		Nothing
   538 ;; This function is called by:
   539 ;;		_application_intialize
   540 ;; This function uses a non-reentrant model
   541 ;;
   542                           
   543                           	psect	text2
   544   001158                     __ptext2:
   545                           	callstack 0
   546   001158                     _ecu_layer_initialize:
   547                           	callstack 27
   548   001158  0012               	return		;funcret
   549   00115A                     __end_of_ecu_layer_initialize:
   550                           	callstack 0
   551                           
   552 ;; *************** function _InterruptManager *****************
   553 ;; Defined at:
   554 ;;		line 35 in file "MCAL_Layer/interrupt/mcal_interrupt_manager.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;		None
   557 ;; Auto vars:     Size  Location     Type
   558 ;;		None
   559 ;; Return value:  Size  Location     Type
   560 ;;                  1    wreg      void 
   561 ;; Registers used:
   562 ;;		wreg, status,2, status,0, cstack
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   572 ;;Total ram usage:        0 bytes
   573 ;; Hardware stack levels used: 1
   574 ;; Hardware stack levels required when called: 1
   575 ;; This function calls:
   576 ;;		_ADC_ISR
   577 ;;		_CCP1_ISR
   578 ;;		_CCP2_ISR
   579 ;;		_INT0_ISR
   580 ;;		_INT1_ISR
   581 ;;		_INT2_ISR
   582 ;;		_RB4_ISR
   583 ;;		_RB5_ISR
   584 ;;		_RB6_ISR
   585 ;;		_RB7_ISR
   586 ;;		_TMR0_ISR
   587 ;;		_TMR1_ISR
   588 ;;		_TMR2_ISR
   589 ;;		_TMR3_ISR
   590 ;; This function is called by:
   591 ;;		Interrupt level 2
   592 ;; This function uses a non-reentrant model
   593 ;;
   594                           
   595                           	psect	intcode
   596   000008                     __pintcode:
   597                           	callstack 0
   598   000008                     _InterruptManager:
   599                           	callstack 27
   600                           
   601                           ;incstack = 0
   602   000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   603   00000A                     
   604                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 38:     if ((INTCONbits.INT0IE == 1) && 
      +                          (INTCONbits.INT0IF == 1))
   605   00000A  A8F2               	btfss	242,4,c	;volatile
   606   00000C  EF0A  F000         	goto	i2u160_41
   607   000010  EF0C  F000         	goto	i2u160_40
   608   000014                     i2u160_41:
   609   000014  EF15  F000         	goto	i2l797
   610   000018                     i2u160_40:
   611   000018  A2F2               	btfss	242,1,c	;volatile
   612   00001A  EF11  F000         	goto	i2u161_41
   613   00001E  EF13  F000         	goto	i2u161_40
   614   000022                     i2u161_41:
   615   000022  EF15  F000         	goto	i2l797
   616   000026                     i2u161_40:
   617   000026                     
   618                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 39:     {;MCAL_Layer/interrupt/mcal_inte
      +                          rrupt_manager.c: 40:         INT0_ISR();
   619   000026  ECA4  F008         	call	_INT0_ISR	;wreg free
   620   00002A                     i2l797:
   621                           
   622                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 43:     if ((INTCON3bits.INT1IE == 1) &&
      +                           (INTCON3bits.INT1IF == 1))
   623   00002A  A6F0               	btfss	240,3,c	;volatile
   624   00002C  EF1A  F000         	goto	i2u162_41
   625   000030  EF1C  F000         	goto	i2u162_40
   626   000034                     i2u162_41:
   627   000034  EF25  F000         	goto	i2l799
   628   000038                     i2u162_40:
   629   000038  A0F0               	btfss	240,0,c	;volatile
   630   00003A  EF21  F000         	goto	i2u163_41
   631   00003E  EF23  F000         	goto	i2u163_40
   632   000042                     i2u163_41:
   633   000042  EF25  F000         	goto	i2l799
   634   000046                     i2u163_40:
   635   000046                     
   636                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 44:     {;MCAL_Layer/interrupt/mcal_inte
      +                          rrupt_manager.c: 45:         INT1_ISR();
   637   000046  ECA2  F008         	call	_INT1_ISR	;wreg free
   638   00004A                     i2l799:
   639                           
   640                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 48:     if ((INTCON3bits.INT2IE == 1) &&
      +                           (INTCON3bits.INT2IF == 1))
   641   00004A  A8F0               	btfss	240,4,c	;volatile
   642   00004C  EF2A  F000         	goto	i2u164_41
   643   000050  EF2C  F000         	goto	i2u164_40
   644   000054                     i2u164_41:
   645   000054  EF35  F000         	goto	i2l801
   646   000058                     i2u164_40:
   647   000058  A2F0               	btfss	240,1,c	;volatile
   648   00005A  EF31  F000         	goto	i2u165_41
   649   00005E  EF33  F000         	goto	i2u165_40
   650   000062                     i2u165_41:
   651   000062  EF35  F000         	goto	i2l801
   652   000066                     i2u165_40:
   653   000066                     
   654                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 49:     {;MCAL_Layer/interrupt/mcal_inte
      +                          rrupt_manager.c: 50:         INT2_ISR();
   655   000066  ECA0  F008         	call	_INT2_ISR	;wreg free
   656   00006A                     i2l801:
   657                           
   658                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 56:     if ((INTCONbits.RBIE == 1) && (I
      +                          NTCONbits.RBIF == 1) &&
   659   00006A  A6F2               	btfss	242,3,c	;volatile
   660   00006C  EF3A  F000         	goto	i2u166_41
   661   000070  EF3C  F000         	goto	i2u166_40
   662   000074                     i2u166_41:
   663   000074  EF57  F000         	goto	i2l803
   664   000078                     i2u166_40:
   665   000078  A0F2               	btfss	242,0,c	;volatile
   666   00007A  EF41  F000         	goto	i2u167_41
   667   00007E  EF43  F000         	goto	i2u167_40
   668   000082                     i2u167_41:
   669   000082  EF57  F000         	goto	i2l803
   670   000086                     i2u167_40:
   671   000086  A881               	btfss	129,4,c	;volatile
   672   000088  EF48  F000         	goto	i2u168_41
   673   00008C  EF4A  F000         	goto	i2u168_40
   674   000090                     i2u168_41:
   675   000090  EF57  F000         	goto	i2l803
   676   000094                     i2u168_40:
   677   000094  0457               	decf	_RB4_Flag^0,w,c	;volatile
   678   000096  A4D8               	btfss	status,2,c
   679   000098  EF50  F000         	goto	i2u169_41
   680   00009C  EF52  F000         	goto	i2u169_40
   681   0000A0                     i2u169_41:
   682   0000A0  EF57  F000         	goto	i2l803
   683   0000A4                     i2u169_40:
   684   0000A4                     
   685                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 58:     {;MCAL_Layer/interrupt/mcal_inte
      +                          rrupt_manager.c: 59:         RB4_Flag = 0;
   686   0000A4  0E00               	movlw	0
   687   0000A6  6E57               	movwf	_RB4_Flag^0,c	;volatile
   688   0000A8                     
   689                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 60:         RB4_ISR(1);
   690   0000A8  0E01               	movlw	1
   691   0000AA  EC63  F008         	call	_RB4_ISR
   692   0000AE                     i2l803:
   693                           
   694                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 63:     if ((INTCONbits.RBIE == 1) && (I
      +                          NTCONbits.RBIF == 1) &&
   695   0000AE  A6F2               	btfss	242,3,c	;volatile
   696   0000B0  EF5C  F000         	goto	i2u170_41
   697   0000B4  EF5E  F000         	goto	i2u170_40
   698   0000B8                     i2u170_41:
   699   0000B8  EF79  F000         	goto	i2l805
   700   0000BC                     i2u170_40:
   701   0000BC  A0F2               	btfss	242,0,c	;volatile
   702   0000BE  EF63  F000         	goto	i2u171_41
   703   0000C2  EF65  F000         	goto	i2u171_40
   704   0000C6                     i2u171_41:
   705   0000C6  EF79  F000         	goto	i2l805
   706   0000CA                     i2u171_40:
   707   0000CA  B881               	btfsc	129,4,c	;volatile
   708   0000CC  EF6A  F000         	goto	i2u172_41
   709   0000D0  EF6C  F000         	goto	i2u172_40
   710   0000D4                     i2u172_41:
   711   0000D4  EF79  F000         	goto	i2l805
   712   0000D8                     i2u172_40:
   713   0000D8  5057               	movf	_RB4_Flag^0,w,c	;volatile
   714   0000DA  A4D8               	btfss	status,2,c
   715   0000DC  EF72  F000         	goto	i2u173_41
   716   0000E0  EF74  F000         	goto	i2u173_40
   717   0000E4                     i2u173_41:
   718   0000E4  EF79  F000         	goto	i2l805
   719   0000E8                     i2u173_40:
   720   0000E8                     
   721                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 65:     {;MCAL_Layer/interrupt/mcal_inte
      +                          rrupt_manager.c: 66:         RB4_Flag = 1;
   722   0000E8  0E01               	movlw	1
   723   0000EA  6E57               	movwf	_RB4_Flag^0,c	;volatile
   724   0000EC                     
   725                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 67:         RB4_ISR(0);
   726   0000EC  0E00               	movlw	0
   727   0000EE  EC63  F008         	call	_RB4_ISR
   728   0000F2                     i2l805:
   729                           
   730                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 70:     if ((INTCONbits.RBIE == 1) && (I
      +                          NTCONbits.RBIF == 1) &&
   731   0000F2  A6F2               	btfss	242,3,c	;volatile
   732   0000F4  EF7E  F000         	goto	i2u174_41
   733   0000F8  EF80  F000         	goto	i2u174_40
   734   0000FC                     i2u174_41:
   735   0000FC  EF9B  F000         	goto	i2l807
   736   000100                     i2u174_40:
   737   000100  A0F2               	btfss	242,0,c	;volatile
   738   000102  EF85  F000         	goto	i2u175_41
   739   000106  EF87  F000         	goto	i2u175_40
   740   00010A                     i2u175_41:
   741   00010A  EF9B  F000         	goto	i2l807
   742   00010E                     i2u175_40:
   743   00010E  AA81               	btfss	129,5,c	;volatile
   744   000110  EF8C  F000         	goto	i2u176_41
   745   000114  EF8E  F000         	goto	i2u176_40
   746   000118                     i2u176_41:
   747   000118  EF9B  F000         	goto	i2l807
   748   00011C                     i2u176_40:
   749   00011C  0456               	decf	_RB5_Flag^0,w,c	;volatile
   750   00011E  A4D8               	btfss	status,2,c
   751   000120  EF94  F000         	goto	i2u177_41
   752   000124  EF96  F000         	goto	i2u177_40
   753   000128                     i2u177_41:
   754   000128  EF9B  F000         	goto	i2l807
   755   00012C                     i2u177_40:
   756   00012C                     
   757                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 72:     {;MCAL_Layer/interrupt/mcal_inte
      +                          rrupt_manager.c: 73:         RB5_Flag = 0;
   758   00012C  0E00               	movlw	0
   759   00012E  6E56               	movwf	_RB5_Flag^0,c	;volatile
   760   000130                     
   761                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 74:         RB5_ISR(1);
   762   000130  0E01               	movlw	1
   763   000132  EC56  F008         	call	_RB5_ISR
   764   000136                     i2l807:
   765                           
   766                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 77:     if ((INTCONbits.RBIE == 1) && (I
      +                          NTCONbits.RBIF == 1) &&
   767   000136  A6F2               	btfss	242,3,c	;volatile
   768   000138  EFA0  F000         	goto	i2u178_41
   769   00013C  EFA2  F000         	goto	i2u178_40
   770   000140                     i2u178_41:
   771   000140  EFBD  F000         	goto	i2l3448
   772   000144                     i2u178_40:
   773   000144  A0F2               	btfss	242,0,c	;volatile
   774   000146  EFA7  F000         	goto	i2u179_41
   775   00014A  EFA9  F000         	goto	i2u179_40
   776   00014E                     i2u179_41:
   777   00014E  EFBD  F000         	goto	i2l3448
   778   000152                     i2u179_40:
   779   000152  BA81               	btfsc	129,5,c	;volatile
   780   000154  EFAE  F000         	goto	i2u180_41
   781   000158  EFB0  F000         	goto	i2u180_40
   782   00015C                     i2u180_41:
   783   00015C  EFBD  F000         	goto	i2l3448
   784   000160                     i2u180_40:
   785   000160  5056               	movf	_RB5_Flag^0,w,c	;volatile
   786   000162  A4D8               	btfss	status,2,c
   787   000164  EFB6  F000         	goto	i2u181_41
   788   000168  EFB8  F000         	goto	i2u181_40
   789   00016C                     i2u181_41:
   790   00016C  EFBD  F000         	goto	i2l3448
   791   000170                     i2u181_40:
   792   000170                     
   793                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 79:     {;MCAL_Layer/interrupt/mcal_inte
      +                          rrupt_manager.c: 80:         RB5_Flag = 1;
   794   000170  0E01               	movlw	1
   795   000172  6E56               	movwf	_RB5_Flag^0,c	;volatile
   796   000174                     
   797                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 81:         RB5_ISR(0);
   798   000174  0E00               	movlw	0
   799   000176  EC56  F008         	call	_RB5_ISR
   800   00017A                     i2l3448:
   801                           
   802                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 84:     if ((INTCONbits.RBIE == 1) && (I
      +                          NTCONbits.RBIF == 1) &&
   803   00017A  A6F2               	btfss	242,3,c	;volatile
   804   00017C  EFC2  F000         	goto	i2u182_41
   805   000180  EFC4  F000         	goto	i2u182_40
   806   000184                     i2u182_41:
   807   000184  EFDF  F000         	goto	i2l810
   808   000188                     i2u182_40:
   809   000188  A0F2               	btfss	242,0,c	;volatile
   810   00018A  EFC9  F000         	goto	i2u183_41
   811   00018E  EFCB  F000         	goto	i2u183_40
   812   000192                     i2u183_41:
   813   000192  EFDF  F000         	goto	i2l810
   814   000196                     i2u183_40:
   815   000196  AC81               	btfss	129,6,c	;volatile
   816   000198  EFD0  F000         	goto	i2u184_41
   817   00019C  EFD2  F000         	goto	i2u184_40
   818   0001A0                     i2u184_41:
   819   0001A0  EFDF  F000         	goto	i2l810
   820   0001A4                     i2u184_40:
   821   0001A4  0455               	decf	_RB6_Flag^0,w,c	;volatile
   822   0001A6  A4D8               	btfss	status,2,c
   823   0001A8  EFD8  F000         	goto	i2u185_41
   824   0001AC  EFDA  F000         	goto	i2u185_40
   825   0001B0                     i2u185_41:
   826   0001B0  EFDF  F000         	goto	i2l810
   827   0001B4                     i2u185_40:
   828   0001B4                     
   829                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 86:     {;MCAL_Layer/interrupt/mcal_inte
      +                          rrupt_manager.c: 87:         RB6_Flag = 0;
   830   0001B4  0E00               	movlw	0
   831   0001B6  6E55               	movwf	_RB6_Flag^0,c	;volatile
   832   0001B8                     
   833                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 88:         RB6_ISR(1);
   834   0001B8  0E01               	movlw	1
   835   0001BA  EC49  F008         	call	_RB6_ISR
   836   0001BE                     i2l810:
   837                           
   838                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 91:     if ((INTCONbits.RBIE == 1) && (I
      +                          NTCONbits.RBIF == 1) &&
   839   0001BE  A6F2               	btfss	242,3,c	;volatile
   840   0001C0  EFE4  F000         	goto	i2u186_41
   841   0001C4  EFE6  F000         	goto	i2u186_40
   842   0001C8                     i2u186_41:
   843   0001C8  EF01  F001         	goto	i2l3470
   844   0001CC                     i2u186_40:
   845   0001CC  A0F2               	btfss	242,0,c	;volatile
   846   0001CE  EFEB  F000         	goto	i2u187_41
   847   0001D2  EFED  F000         	goto	i2u187_40
   848   0001D6                     i2u187_41:
   849   0001D6  EF01  F001         	goto	i2l3470
   850   0001DA                     i2u187_40:
   851   0001DA  BC81               	btfsc	129,6,c	;volatile
   852   0001DC  EFF2  F000         	goto	i2u188_41
   853   0001E0  EFF4  F000         	goto	i2u188_40
   854   0001E4                     i2u188_41:
   855   0001E4  EF01  F001         	goto	i2l3470
   856   0001E8                     i2u188_40:
   857   0001E8  5055               	movf	_RB6_Flag^0,w,c	;volatile
   858   0001EA  A4D8               	btfss	status,2,c
   859   0001EC  EFFA  F000         	goto	i2u189_41
   860   0001F0  EFFC  F000         	goto	i2u189_40
   861   0001F4                     i2u189_41:
   862   0001F4  EF01  F001         	goto	i2l3470
   863   0001F8                     i2u189_40:
   864   0001F8                     
   865                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 93:     {;MCAL_Layer/interrupt/mcal_inte
      +                          rrupt_manager.c: 94:         RB6_Flag = 1;
   866   0001F8  0E01               	movlw	1
   867   0001FA  6E55               	movwf	_RB6_Flag^0,c	;volatile
   868   0001FC                     
   869                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 95:         RB6_ISR(0);
   870   0001FC  0E00               	movlw	0
   871   0001FE  EC49  F008         	call	_RB6_ISR
   872   000202                     i2l3470:
   873                           
   874                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 98:     if ((INTCONbits.RBIE == 1) && (I
      +                          NTCONbits.RBIF == 1) &&
   875   000202  A6F2               	btfss	242,3,c	;volatile
   876   000204  EF06  F001         	goto	i2u190_41
   877   000208  EF08  F001         	goto	i2u190_40
   878   00020C                     i2u190_41:
   879   00020C  EF23  F001         	goto	i2l813
   880   000210                     i2u190_40:
   881   000210  A0F2               	btfss	242,0,c	;volatile
   882   000212  EF0D  F001         	goto	i2u191_41
   883   000216  EF0F  F001         	goto	i2u191_40
   884   00021A                     i2u191_41:
   885   00021A  EF23  F001         	goto	i2l813
   886   00021E                     i2u191_40:
   887   00021E  AE81               	btfss	129,7,c	;volatile
   888   000220  EF14  F001         	goto	i2u192_41
   889   000224  EF16  F001         	goto	i2u192_40
   890   000228                     i2u192_41:
   891   000228  EF23  F001         	goto	i2l813
   892   00022C                     i2u192_40:
   893   00022C  0454               	decf	_RB7_Flag^0,w,c	;volatile
   894   00022E  A4D8               	btfss	status,2,c
   895   000230  EF1C  F001         	goto	i2u193_41
   896   000234  EF1E  F001         	goto	i2u193_40
   897   000238                     i2u193_41:
   898   000238  EF23  F001         	goto	i2l813
   899   00023C                     i2u193_40:
   900   00023C                     
   901                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 100:     {;MCAL_Layer/interrupt/mcal_int
      +                          errupt_manager.c: 101:         RB7_Flag = 0;
   902   00023C  0E00               	movlw	0
   903   00023E  6E54               	movwf	_RB7_Flag^0,c	;volatile
   904   000240                     
   905                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 102:         RB7_ISR(1);
   906   000240  0E01               	movlw	1
   907   000242  EC3C  F008         	call	_RB7_ISR
   908   000246                     i2l813:
   909                           
   910                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 105:     if ((INTCONbits.RBIE == 1) && (
      +                          INTCONbits.RBIF == 1) &&
   911   000246  A6F2               	btfss	242,3,c	;volatile
   912   000248  EF28  F001         	goto	i2u194_41
   913   00024C  EF2A  F001         	goto	i2u194_40
   914   000250                     i2u194_41:
   915   000250  EF45  F001         	goto	i2l815
   916   000254                     i2u194_40:
   917   000254  A0F2               	btfss	242,0,c	;volatile
   918   000256  EF2F  F001         	goto	i2u195_41
   919   00025A  EF31  F001         	goto	i2u195_40
   920   00025E                     i2u195_41:
   921   00025E  EF45  F001         	goto	i2l815
   922   000262                     i2u195_40:
   923   000262  BE81               	btfsc	129,7,c	;volatile
   924   000264  EF36  F001         	goto	i2u196_41
   925   000268  EF38  F001         	goto	i2u196_40
   926   00026C                     i2u196_41:
   927   00026C  EF45  F001         	goto	i2l815
   928   000270                     i2u196_40:
   929   000270  5054               	movf	_RB7_Flag^0,w,c	;volatile
   930   000272  A4D8               	btfss	status,2,c
   931   000274  EF3E  F001         	goto	i2u197_41
   932   000278  EF40  F001         	goto	i2u197_40
   933   00027C                     i2u197_41:
   934   00027C  EF45  F001         	goto	i2l815
   935   000280                     i2u197_40:
   936   000280                     
   937                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 107:     {;MCAL_Layer/interrupt/mcal_int
      +                          errupt_manager.c: 108:         RB7_Flag = 1;
   938   000280  0E01               	movlw	1
   939   000282  6E54               	movwf	_RB7_Flag^0,c	;volatile
   940   000284                     
   941                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 109:         RB7_ISR(0);
   942   000284  0E00               	movlw	0
   943   000286  EC3C  F008         	call	_RB7_ISR
   944   00028A                     i2l815:
   945                           
   946                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 115:     if ((PIE1bits.ADIE == 1) && (PI
      +                          R1bits.ADIF == 1)){
   947   00028A  AC9D               	btfss	157,6,c	;volatile
   948   00028C  EF4A  F001         	goto	i2u198_41
   949   000290  EF4C  F001         	goto	i2u198_40
   950   000294                     i2u198_41:
   951   000294  EF55  F001         	goto	i2l817
   952   000298                     i2u198_40:
   953   000298  AC9E               	btfss	158,6,c	;volatile
   954   00029A  EF51  F001         	goto	i2u199_41
   955   00029E  EF53  F001         	goto	i2u199_40
   956   0002A2                     i2u199_41:
   957   0002A2  EF55  F001         	goto	i2l817
   958   0002A6                     i2u199_40:
   959   0002A6                     
   960                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 116:         ADC_ISR();
   961   0002A6  ECAA  F008         	call	_ADC_ISR	;wreg free
   962   0002AA                     i2l817:
   963                           
   964                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 121:     if ((INTCONbits.TMR0IE == 1) &&
      +                           (INTCONbits.TMR0IF == 1)){
   965   0002AA  AAF2               	btfss	242,5,c	;volatile
   966   0002AC  EF5A  F001         	goto	i2u200_41
   967   0002B0  EF5C  F001         	goto	i2u200_40
   968   0002B4                     i2u200_41:
   969   0002B4  EF65  F001         	goto	i2l819
   970   0002B8                     i2u200_40:
   971   0002B8  A4F2               	btfss	242,2,c	;volatile
   972   0002BA  EF61  F001         	goto	i2u201_41
   973   0002BE  EF63  F001         	goto	i2u201_40
   974   0002C2                     i2u201_41:
   975   0002C2  EF65  F001         	goto	i2l819
   976   0002C6                     i2u201_40:
   977   0002C6                     
   978                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 122:         TMR0_ISR();
   979   0002C6  EC8E  F008         	call	_TMR0_ISR	;wreg free
   980   0002CA                     i2l819:
   981                           
   982                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 127:     if ((PIE1bits.TMR1IE == 1) && (
      +                          PIR1bits.TMR1IF == 1)){
   983   0002CA  A09D               	btfss	157,0,c	;volatile
   984   0002CC  EF6A  F001         	goto	i2u202_41
   985   0002D0  EF6C  F001         	goto	i2u202_40
   986   0002D4                     i2u202_41:
   987   0002D4  EF75  F001         	goto	i2l821
   988   0002D8                     i2u202_40:
   989   0002D8  A09E               	btfss	158,0,c	;volatile
   990   0002DA  EF71  F001         	goto	i2u203_41
   991   0002DE  EF73  F001         	goto	i2u203_40
   992   0002E2                     i2u203_41:
   993   0002E2  EF75  F001         	goto	i2l821
   994   0002E6                     i2u203_40:
   995   0002E6                     
   996                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 128:         TMR1_ISR();
   997   0002E6  EC88  F008         	call	_TMR1_ISR	;wreg free
   998   0002EA                     i2l821:
   999                           
  1000                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 133:     if ((PIE1bits.TMR2IE == 1) && (
      +                          PIR1bits.TMR2IF == 1)){
  1001   0002EA  A29D               	btfss	157,1,c	;volatile
  1002   0002EC  EF7A  F001         	goto	i2u204_41
  1003   0002F0  EF7C  F001         	goto	i2u204_40
  1004   0002F4                     i2u204_41:
  1005   0002F4  EF85  F001         	goto	i2l823
  1006   0002F8                     i2u204_40:
  1007   0002F8  A29E               	btfss	158,1,c	;volatile
  1008   0002FA  EF81  F001         	goto	i2u205_41
  1009   0002FE  EF83  F001         	goto	i2u205_40
  1010   000302                     i2u205_41:
  1011   000302  EF85  F001         	goto	i2l823
  1012   000306                     i2u205_40:
  1013   000306                     
  1014                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 134:         TMR2_ISR();
  1015   000306  EC99  F008         	call	_TMR2_ISR	;wreg free
  1016   00030A                     i2l823:
  1017                           
  1018                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 139:     if ((PIE2bits.TMR3IE == 1) && (
      +                          PIR2bits.TMR3IF == 1)){
  1019   00030A  A2A0               	btfss	160,1,c	;volatile
  1020   00030C  EF8A  F001         	goto	i2u206_41
  1021   000310  EF8C  F001         	goto	i2u206_40
  1022   000314                     i2u206_41:
  1023   000314  EF95  F001         	goto	i2l825
  1024   000318                     i2u206_40:
  1025   000318  A2A1               	btfss	161,1,c	;volatile
  1026   00031A  EF91  F001         	goto	i2u207_41
  1027   00031E  EF93  F001         	goto	i2u207_40
  1028   000322                     i2u207_41:
  1029   000322  EF95  F001         	goto	i2l825
  1030   000326                     i2u207_40:
  1031   000326                     
  1032                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 140:         TMR3_ISR();
  1033   000326  EC82  F008         	call	_TMR3_ISR	;wreg free
  1034   00032A                     i2l825:
  1035                           
  1036                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 145:     if ((PIE1bits.CCP1IE == 1) && (
      +                          PIR1bits.CCP1IF == 1)){
  1037   00032A  A49D               	btfss	157,2,c	;volatile
  1038   00032C  EF9A  F001         	goto	i2u208_41
  1039   000330  EF9C  F001         	goto	i2u208_40
  1040   000334                     i2u208_41:
  1041   000334  EFA5  F001         	goto	i2l827
  1042   000338                     i2u208_40:
  1043   000338  A49E               	btfss	158,2,c	;volatile
  1044   00033A  EFA1  F001         	goto	i2u209_41
  1045   00033E  EFA3  F001         	goto	i2u209_40
  1046   000342                     i2u209_41:
  1047   000342  EFA5  F001         	goto	i2l827
  1048   000346                     i2u209_40:
  1049   000346                     
  1050                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 146:         CCP1_ISR();
  1051   000346  ECA8  F008         	call	_CCP1_ISR	;wreg free
  1052   00034A                     i2l827:
  1053                           
  1054                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 150:     if ((PIE2bits.CCP2IE == 1) && (
      +                          PIR2bits.CCP2IF == 1)){
  1055   00034A  A0A0               	btfss	160,0,c	;volatile
  1056   00034C  EFAA  F001         	goto	i2u210_41
  1057   000350  EFAC  F001         	goto	i2u210_40
  1058   000354                     i2u210_41:
  1059   000354  EFB5  F001         	goto	i2l830
  1060   000358                     i2u210_40:
  1061   000358  A0A1               	btfss	161,0,c	;volatile
  1062   00035A  EFB1  F001         	goto	i2u211_41
  1063   00035E  EFB3  F001         	goto	i2u211_40
  1064   000362                     i2u211_41:
  1065   000362  EFB5  F001         	goto	i2l830
  1066   000366                     i2u211_40:
  1067   000366                     
  1068                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 151:         CCP2_ISR();
  1069   000366  ECA6  F008         	call	_CCP2_ISR	;wreg free
  1070   00036A                     i2l830:
  1071   00036A  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1072   00036C  0011               	retfie		f
  1073   00036E                     __end_of_InterruptManager:
  1074                           	callstack 0
  1075                           
  1076 ;; *************** function _TMR3_ISR *****************
  1077 ;; Defined at:
  1078 ;;		line 92 in file "MCAL_Layer/Timer3/hal_timer3.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;		None
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;		None
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  1    wreg      void 
  1085 ;; Registers used:
  1086 ;;		wreg, status,2
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1096 ;;Total ram usage:        0 bytes
  1097 ;; Hardware stack levels used: 1
  1098 ;; This function calls:
  1099 ;;		Nothing
  1100 ;; This function is called by:
  1101 ;;		_InterruptManager
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text4
  1106   001104                     __ptext4:
  1107                           	callstack 0
  1108   001104                     _TMR3_ISR:
  1109                           	callstack 27
  1110   001104                     
  1111                           ;MCAL_Layer/Timer3/hal_timer3.c: 93:     (PIR2bits.TMR3IF = 0);
  1112   001104  92A1               	bcf	161,1,c	;volatile
  1113   001106                     
  1114                           ;MCAL_Layer/Timer3/hal_timer3.c: 94:     TMR3H = ((timer3_preload) >> 8);
  1115   001106  500C               	movf	(_timer3_preload+1)^0,w,c
  1116   001108  6EB3               	movwf	179,c	;volatile
  1117   00110A                     
  1118                           ;MCAL_Layer/Timer3/hal_timer3.c: 95:     TMR3L = (uint8)(timer3_preload) ;
  1119   00110A  C00B  FFB2         	movff	_timer3_preload,4018	;volatile
  1120   00110E  0012               	return		;funcret
  1121   001110                     __end_of_TMR3_ISR:
  1122                           	callstack 0
  1123                           
  1124 ;; *************** function _TMR2_ISR *****************
  1125 ;; Defined at:
  1126 ;;		line 87 in file "MCAL_Layer/Timer2/hal_timer2.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;		None
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;		None
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  1    wreg      void 
  1133 ;; Registers used:
  1134 ;;		None
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1144 ;;Total ram usage:        0 bytes
  1145 ;; Hardware stack levels used: 1
  1146 ;; This function calls:
  1147 ;;		Nothing
  1148 ;; This function is called by:
  1149 ;;		_InterruptManager
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           	psect	text5
  1154   001132                     __ptext5:
  1155                           	callstack 0
  1156   001132                     _TMR2_ISR:
  1157                           	callstack 27
  1158   001132                     
  1159                           ;MCAL_Layer/Timer2/hal_timer2.c: 88:     (PIR1bits.TMR2IF = 0);
  1160   001132  929E               	bcf	158,1,c	;volatile
  1161                           
  1162                           ;MCAL_Layer/Timer2/hal_timer2.c: 89:     TMR2 = timer2_preload;
  1163   001134  C037  FFCC         	movff	_timer2_preload,4044	;volatile
  1164   001138  0012               	return		;funcret
  1165   00113A                     __end_of_TMR2_ISR:
  1166                           	callstack 0
  1167                           
  1168 ;; *************** function _TMR1_ISR *****************
  1169 ;; Defined at:
  1170 ;;		line 95 in file "MCAL_Layer/Timer1/hal_timer1.c"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;		None
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;		None
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  1    wreg      void 
  1177 ;; Registers used:
  1178 ;;		wreg, status,2
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1188 ;;Total ram usage:        0 bytes
  1189 ;; Hardware stack levels used: 1
  1190 ;; This function calls:
  1191 ;;		Nothing
  1192 ;; This function is called by:
  1193 ;;		_InterruptManager
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197                           	psect	text6
  1198   001110                     __ptext6:
  1199                           	callstack 0
  1200   001110                     _TMR1_ISR:
  1201                           	callstack 27
  1202   001110                     
  1203                           ;MCAL_Layer/Timer1/hal_timer1.c: 96:     (PIR1bits.TMR1IF = 0);
  1204   001110  909E               	bcf	158,0,c	;volatile
  1205   001112                     
  1206                           ;MCAL_Layer/Timer1/hal_timer1.c: 97:     TMR1H = ((timer1_preload) >> 8);
  1207   001112  5012               	movf	(_timer1_preload+1)^0,w,c
  1208   001114  6ECF               	movwf	207,c	;volatile
  1209   001116                     
  1210                           ;MCAL_Layer/Timer1/hal_timer1.c: 98:     TMR1L = (uint8)(timer1_preload) ;
  1211   001116  C011  FFCE         	movff	_timer1_preload,4046	;volatile
  1212   00111A  0012               	return		;funcret
  1213   00111C                     __end_of_TMR1_ISR:
  1214                           	callstack 0
  1215                           
  1216 ;; *************** function _TMR0_ISR *****************
  1217 ;; Defined at:
  1218 ;;		line 100 in file "MCAL_Layer/Timer0/hal_timer0.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;		None
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;		None
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  1    wreg      void 
  1225 ;; Registers used:
  1226 ;;		wreg, status,2
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1236 ;;Total ram usage:        0 bytes
  1237 ;; Hardware stack levels used: 1
  1238 ;; This function calls:
  1239 ;;		Nothing
  1240 ;; This function is called by:
  1241 ;;		_InterruptManager
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245                           	psect	text7
  1246   00111C                     __ptext7:
  1247                           	callstack 0
  1248   00111C                     _TMR0_ISR:
  1249                           	callstack 27
  1250   00111C                     
  1251                           ;MCAL_Layer/Timer0/hal_timer0.c: 101:     (INTCONbits.TMR0IF = 0);
  1252   00111C  94F2               	bcf	242,2,c	;volatile
  1253   00111E                     
  1254                           ;MCAL_Layer/Timer0/hal_timer0.c: 102:     TMR0H = ((timer0_preload) >> 8);
  1255   00111E  5016               	movf	(_timer0_preload+1)^0,w,c
  1256   001120  6ED7               	movwf	215,c	;volatile
  1257   001122                     
  1258                           ;MCAL_Layer/Timer0/hal_timer0.c: 103:     TMR0L = (uint8)(timer0_preload) ;
  1259   001122  C015  FFD6         	movff	_timer0_preload,4054	;volatile
  1260   001126  0012               	return		;funcret
  1261   001128                     __end_of_TMR0_ISR:
  1262                           	callstack 0
  1263                           
  1264 ;; *************** function _RB7_ISR *****************
  1265 ;; Defined at:
  1266 ;;		line 168 in file "MCAL_Layer/interrupt/mcal_external_interrupt.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;  RB7_source      1    wreg     unsigned char 
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;  RB7_source      1    0[COMRAM] unsigned char 
  1271 ;; Return value:  Size  Location     Type
  1272 ;;                  1    wreg      void 
  1273 ;; Registers used:
  1274 ;;		wreg, status,2, status,0
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1281 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1283 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1284 ;;Total ram usage:        1 bytes
  1285 ;; Hardware stack levels used: 1
  1286 ;; This function calls:
  1287 ;;		Nothing
  1288 ;; This function is called by:
  1289 ;;		_InterruptManager
  1290 ;; This function uses a non-reentrant model
  1291 ;;
  1292                           
  1293                           	psect	text8
  1294   001078                     __ptext8:
  1295                           	callstack 0
  1296   001078                     _RB7_ISR:
  1297                           	callstack 27
  1298                           
  1299                           ;incstack = 0
  1300                           ;RB7_ISR@RB7_source stored from wreg
  1301   001078  6E58               	movwf	RB7_ISR@RB7_source^0,c
  1302   00107A                     
  1303                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 170:     (INTCONbits.RBIF = 0);
  1304   00107A  90F2               	bcf	242,0,c	;volatile
  1305   00107C                     
  1306                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 175:     if (0 == RB7_source)
  1307   00107C  5058               	movf	RB7_ISR@RB7_source^0,w,c
  1308   00107E  A4D8               	btfss	status,2,c
  1309   001080  EF44  F008         	goto	i2u33_41
  1310   001084  EF46  F008         	goto	i2u33_40
  1311   001088                     i2u33_41:
  1312   001088  EF48  F008         	goto	i2l2286
  1313   00108C                     i2u33_40:
  1314   00108C  EF48  F008         	goto	i2l929
  1315   001090                     i2l2286:
  1316   001090                     i2l929:
  1317   001090  0012               	return		;funcret
  1318   001092                     __end_of_RB7_ISR:
  1319                           	callstack 0
  1320                           
  1321 ;; *************** function _RB6_ISR *****************
  1322 ;; Defined at:
  1323 ;;		line 150 in file "MCAL_Layer/interrupt/mcal_external_interrupt.c"
  1324 ;; Parameters:    Size  Location     Type
  1325 ;;  RB6_source      1    wreg     unsigned char 
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;  RB6_source      1    0[COMRAM] unsigned char 
  1328 ;; Return value:  Size  Location     Type
  1329 ;;                  1    wreg      void 
  1330 ;; Registers used:
  1331 ;;		wreg, status,2, status,0
  1332 ;; Tracked objects:
  1333 ;;		On entry : 0/0
  1334 ;;		On exit  : 0/0
  1335 ;;		Unchanged: 0/0
  1336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1338 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1340 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1341 ;;Total ram usage:        1 bytes
  1342 ;; Hardware stack levels used: 1
  1343 ;; This function calls:
  1344 ;;		Nothing
  1345 ;; This function is called by:
  1346 ;;		_InterruptManager
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350                           	psect	text9
  1351   001092                     __ptext9:
  1352                           	callstack 0
  1353   001092                     _RB6_ISR:
  1354                           	callstack 27
  1355                           
  1356                           ;incstack = 0
  1357                           ;RB6_ISR@RB6_source stored from wreg
  1358   001092  6E58               	movwf	RB6_ISR@RB6_source^0,c
  1359   001094                     
  1360                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 152:     (INTCONbits.RBIF = 0);
  1361   001094  90F2               	bcf	242,0,c	;volatile
  1362   001096                     
  1363                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 157:     if (0 == RB6_source)
  1364   001096  5058               	movf	RB6_ISR@RB6_source^0,w,c
  1365   001098  A4D8               	btfss	status,2,c
  1366   00109A  EF51  F008         	goto	i2u32_41
  1367   00109E  EF53  F008         	goto	i2u32_40
  1368   0010A2                     i2u32_41:
  1369   0010A2  EF55  F008         	goto	i2l2272
  1370   0010A6                     i2u32_40:
  1371   0010A6  EF55  F008         	goto	i2l919
  1372   0010AA                     i2l2272:
  1373   0010AA                     i2l919:
  1374   0010AA  0012               	return		;funcret
  1375   0010AC                     __end_of_RB6_ISR:
  1376                           	callstack 0
  1377                           
  1378 ;; *************** function _RB5_ISR *****************
  1379 ;; Defined at:
  1380 ;;		line 132 in file "MCAL_Layer/interrupt/mcal_external_interrupt.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;  RB5_source      1    wreg     unsigned char 
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;  RB5_source      1    0[COMRAM] unsigned char 
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      void 
  1387 ;; Registers used:
  1388 ;;		wreg, status,2, status,0
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1395 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1397 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1398 ;;Total ram usage:        1 bytes
  1399 ;; Hardware stack levels used: 1
  1400 ;; This function calls:
  1401 ;;		Nothing
  1402 ;; This function is called by:
  1403 ;;		_InterruptManager
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           	psect	text10
  1408   0010AC                     __ptext10:
  1409                           	callstack 0
  1410   0010AC                     _RB5_ISR:
  1411                           	callstack 27
  1412                           
  1413                           ;incstack = 0
  1414                           ;RB5_ISR@RB5_source stored from wreg
  1415   0010AC  6E58               	movwf	RB5_ISR@RB5_source^0,c
  1416   0010AE                     
  1417                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 134:     (INTCONbits.RBIF = 0);
  1418   0010AE  90F2               	bcf	242,0,c	;volatile
  1419   0010B0                     
  1420                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 138:     if (0 == RB5_source)
  1421   0010B0  5058               	movf	RB5_ISR@RB5_source^0,w,c
  1422   0010B2  A4D8               	btfss	status,2,c
  1423   0010B4  EF5E  F008         	goto	i2u31_41
  1424   0010B8  EF60  F008         	goto	i2u31_40
  1425   0010BC                     i2u31_41:
  1426   0010BC  EF62  F008         	goto	i2l2258
  1427   0010C0                     i2u31_40:
  1428   0010C0  EF62  F008         	goto	i2l909
  1429   0010C4                     i2l2258:
  1430   0010C4                     i2l909:
  1431   0010C4  0012               	return		;funcret
  1432   0010C6                     __end_of_RB5_ISR:
  1433                           	callstack 0
  1434                           
  1435 ;; *************** function _RB4_ISR *****************
  1436 ;; Defined at:
  1437 ;;		line 114 in file "MCAL_Layer/interrupt/mcal_external_interrupt.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;  RB4_source      1    wreg     unsigned char 
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;  RB4_source      1    0[COMRAM] unsigned char 
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  1    wreg      void 
  1444 ;; Registers used:
  1445 ;;		wreg, status,2, status,0
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1452 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1454 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1455 ;;Total ram usage:        1 bytes
  1456 ;; Hardware stack levels used: 1
  1457 ;; This function calls:
  1458 ;;		Nothing
  1459 ;; This function is called by:
  1460 ;;		_InterruptManager
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           	psect	text11
  1465   0010C6                     __ptext11:
  1466                           	callstack 0
  1467   0010C6                     _RB4_ISR:
  1468                           	callstack 27
  1469                           
  1470                           ;incstack = 0
  1471                           ;RB4_ISR@RB4_source stored from wreg
  1472   0010C6  6E58               	movwf	RB4_ISR@RB4_source^0,c
  1473   0010C8                     
  1474                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 116:     (INTCONbits.RBIF = 0);
  1475   0010C8  90F2               	bcf	242,0,c	;volatile
  1476   0010CA                     
  1477                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 120:     if (0 == RB4_source)
  1478   0010CA  5058               	movf	RB4_ISR@RB4_source^0,w,c
  1479   0010CC  A4D8               	btfss	status,2,c
  1480   0010CE  EF6B  F008         	goto	i2u30_41
  1481   0010D2  EF6D  F008         	goto	i2u30_40
  1482   0010D6                     i2u30_41:
  1483   0010D6  EF6F  F008         	goto	i2l2244
  1484   0010DA                     i2u30_40:
  1485   0010DA  EF6F  F008         	goto	i2l899
  1486   0010DE                     i2l2244:
  1487   0010DE                     i2l899:
  1488   0010DE  0012               	return		;funcret
  1489   0010E0                     __end_of_RB4_ISR:
  1490                           	callstack 0
  1491                           
  1492 ;; *************** function _INT2_ISR *****************
  1493 ;; Defined at:
  1494 ;;		line 101 in file "MCAL_Layer/interrupt/mcal_external_interrupt.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;		None
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;		None
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  1    wreg      void 
  1501 ;; Registers used:
  1502 ;;		None
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1512 ;;Total ram usage:        0 bytes
  1513 ;; Hardware stack levels used: 1
  1514 ;; This function calls:
  1515 ;;		Nothing
  1516 ;; This function is called by:
  1517 ;;		_InterruptManager
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           	psect	text12
  1522   001140                     __ptext12:
  1523                           	callstack 0
  1524   001140                     _INT2_ISR:
  1525                           	callstack 27
  1526   001140                     
  1527                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 103:     (INTCON3bits.INT2IF = 0);
  1528   001140  92F0               	bcf	240,1,c	;volatile
  1529   001142  0012               	return		;funcret
  1530   001144                     __end_of_INT2_ISR:
  1531                           	callstack 0
  1532                           
  1533 ;; *************** function _INT1_ISR *****************
  1534 ;; Defined at:
  1535 ;;		line 88 in file "MCAL_Layer/interrupt/mcal_external_interrupt.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;		None
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;		None
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  1    wreg      void 
  1542 ;; Registers used:
  1543 ;;		None
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1553 ;;Total ram usage:        0 bytes
  1554 ;; Hardware stack levels used: 1
  1555 ;; This function calls:
  1556 ;;		Nothing
  1557 ;; This function is called by:
  1558 ;;		_InterruptManager
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           	psect	text13
  1563   001144                     __ptext13:
  1564                           	callstack 0
  1565   001144                     _INT1_ISR:
  1566                           	callstack 27
  1567   001144                     
  1568                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 90:     (INTCON3bits.INT1IF = 0);
  1569   001144  90F0               	bcf	240,0,c	;volatile
  1570   001146  0012               	return		;funcret
  1571   001148                     __end_of_INT1_ISR:
  1572                           	callstack 0
  1573                           
  1574 ;; *************** function _INT0_ISR *****************
  1575 ;; Defined at:
  1576 ;;		line 73 in file "MCAL_Layer/interrupt/mcal_external_interrupt.c"
  1577 ;; Parameters:    Size  Location     Type
  1578 ;;		None
  1579 ;; Auto vars:     Size  Location     Type
  1580 ;;		None
  1581 ;; Return value:  Size  Location     Type
  1582 ;;                  1    wreg      void 
  1583 ;; Registers used:
  1584 ;;		None
  1585 ;; Tracked objects:
  1586 ;;		On entry : 0/0
  1587 ;;		On exit  : 0/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1594 ;;Total ram usage:        0 bytes
  1595 ;; Hardware stack levels used: 1
  1596 ;; This function calls:
  1597 ;;		Nothing
  1598 ;; This function is called by:
  1599 ;;		_InterruptManager
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603                           	psect	text14
  1604   001148                     __ptext14:
  1605                           	callstack 0
  1606   001148                     _INT0_ISR:
  1607                           	callstack 27
  1608   001148                     
  1609                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 75:     (INTCONbits.INT0IF = 0);
  1610   001148  92F2               	bcf	242,1,c	;volatile
  1611   00114A  0012               	return		;funcret
  1612   00114C                     __end_of_INT0_ISR:
  1613                           	callstack 0
  1614                           
  1615 ;; *************** function _CCP2_ISR *****************
  1616 ;; Defined at:
  1617 ;;		line 114 in file "MCAL_Layer/CCP/hal_ccp.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;		None
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;		None
  1622 ;; Return value:  Size  Location     Type
  1623 ;;                  1    wreg      void 
  1624 ;; Registers used:
  1625 ;;		None
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1635 ;;Total ram usage:        0 bytes
  1636 ;; Hardware stack levels used: 1
  1637 ;; This function calls:
  1638 ;;		Nothing
  1639 ;; This function is called by:
  1640 ;;		_InterruptManager
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           	psect	text15
  1645   00114C                     __ptext15:
  1646                           	callstack 0
  1647   00114C                     _CCP2_ISR:
  1648                           	callstack 27
  1649   00114C                     
  1650                           ;MCAL_Layer/CCP/hal_ccp.c: 115:     (PIR1bits.CCP1IF = 0);
  1651   00114C  949E               	bcf	158,2,c	;volatile
  1652   00114E  0012               	return		;funcret
  1653   001150                     __end_of_CCP2_ISR:
  1654                           	callstack 0
  1655                           
  1656 ;; *************** function _CCP1_ISR *****************
  1657 ;; Defined at:
  1658 ;;		line 105 in file "MCAL_Layer/CCP/hal_ccp.c"
  1659 ;; Parameters:    Size  Location     Type
  1660 ;;		None
  1661 ;; Auto vars:     Size  Location     Type
  1662 ;;		None
  1663 ;; Return value:  Size  Location     Type
  1664 ;;                  1    wreg      void 
  1665 ;; Registers used:
  1666 ;;		None
  1667 ;; Tracked objects:
  1668 ;;		On entry : 0/0
  1669 ;;		On exit  : 0/0
  1670 ;;		Unchanged: 0/0
  1671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1676 ;;Total ram usage:        0 bytes
  1677 ;; Hardware stack levels used: 1
  1678 ;; This function calls:
  1679 ;;		Nothing
  1680 ;; This function is called by:
  1681 ;;		_InterruptManager
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           	psect	text16
  1686   001150                     __ptext16:
  1687                           	callstack 0
  1688   001150                     _CCP1_ISR:
  1689                           	callstack 27
  1690   001150                     
  1691                           ;MCAL_Layer/CCP/hal_ccp.c: 106:     (PIR1bits.CCP1IF = 0);
  1692   001150  949E               	bcf	158,2,c	;volatile
  1693   001152  0012               	return		;funcret
  1694   001154                     __end_of_CCP1_ISR:
  1695                           	callstack 0
  1696                           
  1697 ;; *************** function _ADC_ISR *****************
  1698 ;; Defined at:
  1699 ;;		line 326 in file "MCAL_Layer/ADC/hal_adc.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;		None
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;		None
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      void 
  1706 ;; Registers used:
  1707 ;;		None
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1717 ;;Total ram usage:        0 bytes
  1718 ;; Hardware stack levels used: 1
  1719 ;; This function calls:
  1720 ;;		Nothing
  1721 ;; This function is called by:
  1722 ;;		_InterruptManager
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           	psect	text17
  1727   001154                     __ptext17:
  1728                           	callstack 0
  1729   001154                     _ADC_ISR:
  1730                           	callstack 27
  1731   001154                     
  1732                           ;MCAL_Layer/ADC/hal_adc.c: 327:     (PIR1bits.ADIF = 0);
  1733   001154  9C9E               	bcf	158,6,c	;volatile
  1734   001156  0012               	return		;funcret
  1735   001158                     __end_of_ADC_ISR:
  1736                           	callstack 0
  1737                           
  1738                           	psect	rparam
  1739   000000                     
  1740                           	psect	temp
  1741   000059                     btemp:
  1742                           	callstack 0
  1743   000059                     	ds	1
  1744   000000                     int$flags	set	btemp
  1745   000000                     wtemp8	set	btemp+1
  1746   000000                     ttemp5	set	btemp+1
  1747   000000                     ttemp6	set	btemp+4
  1748   000000                     ttemp7	set	btemp+8
  1749                           
  1750                           	psect	config
  1751                           
  1752                           ; Padding undefined space
  1753   300000                     	org	3145728
  1754   300000  FF                 	db	255
  1755                           
  1756                           ;Config register CONFIG1H @ 0x300001
  1757                           ;	Oscillator Selection bits
  1758                           ;	FOSC = RCIO6, External RC oscillator, port function on RA6
  1759                           ;	Fail-Safe Clock Monitor Enable bit
  1760                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1761                           ;	Internal/External Oscillator Switchover bit
  1762                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1763   300001                     	org	3145729
  1764   300001  07                 	db	7
  1765                           
  1766                           ;Config register CONFIG2L @ 0x300002
  1767                           ;	Power-up Timer Enable bit
  1768                           ;	PWRTEN = OFF, PWRT disabled
  1769                           ;	Brown-out Reset Enable bits
  1770                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1771                           ;	Brown Out Reset Voltage bits
  1772                           ;	BORV = 18, VBOR set to 1.8 V nominal
  1773   300002                     	org	3145730
  1774   300002  1F                 	db	31
  1775                           
  1776                           ;Config register CONFIG2H @ 0x300003
  1777                           ;	Watchdog Timer Enable bit
  1778                           ;	WDTEN = ON, WDT is always enabled. SWDTEN bit has no effect
  1779                           ;	Watchdog Timer Postscale Select bits
  1780                           ;	WDTPS = 32768, 1:32768
  1781   300003                     	org	3145731
  1782   300003  1F                 	db	31
  1783                           
  1784                           ; Padding undefined space
  1785   300004                     	org	3145732
  1786   300004  FF                 	db	255
  1787                           
  1788                           ;Config register CONFIG3H @ 0x300005
  1789                           ;	CCP2 MUX bit
  1790                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1791                           ;	PORTB A/D Enable bit
  1792                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1793                           ;	Low-Power Timer1 Oscillator Enable bit
  1794                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1795                           ;	HFINTOSC Fast Start-up
  1796                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  1797                           ;	MCLR Pin Enable bit
  1798                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1799   300005                     	org	3145733
  1800   300005  89                 	db	137
  1801                           
  1802                           ;Config register CONFIG4L @ 0x300006
  1803                           ;	Stack Full/Underflow Reset Enable bit
  1804                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1805                           ;	Single-Supply ICSP Enable bit
  1806                           ;	LVP = ON, Single-Supply ICSP enabled
  1807                           ;	Extended Instruction Set Enable bit
  1808                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1809                           ;	Background Debugger Enable bit
  1810                           ;	DEBUG = 0x1, unprogrammed default
  1811   300006                     	org	3145734
  1812   300006  85                 	db	133
  1813                           
  1814                           ; Padding undefined space
  1815   300007                     	org	3145735
  1816   300007  FF                 	db	255
  1817                           
  1818                           ;Config register CONFIG5L @ 0x300008
  1819                           ;	Code Protection Block 0
  1820                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1821                           ;	Code Protection Block 1
  1822                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1823                           ;	Code Protection Block 2
  1824                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1825                           ;	Code Protection Block 3
  1826                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1827   300008                     	org	3145736
  1828   300008  0F                 	db	15
  1829                           
  1830                           ;Config register CONFIG5H @ 0x300009
  1831                           ;	Boot Block Code Protection bit
  1832                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1833                           ;	Data EEPROM Code Protection bit
  1834                           ;	CPD = OFF, Data EEPROM not code-protected
  1835   300009                     	org	3145737
  1836   300009  C0                 	db	192
  1837                           
  1838                           ;Config register CONFIG6L @ 0x30000A
  1839                           ;	Write Protection Block 0
  1840                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1841                           ;	Write Protection Block 1
  1842                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1843                           ;	Write Protection Block 2
  1844                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1845                           ;	Write Protection Block 3
  1846                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  1847   30000A                     	org	3145738
  1848   30000A  0F                 	db	15
  1849                           
  1850                           ;Config register CONFIG6H @ 0x30000B
  1851                           ;	Configuration Register Write Protection bit
  1852                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1853                           ;	Boot Block Write Protection bit
  1854                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1855                           ;	Data EEPROM Write Protection bit
  1856                           ;	WRTD = OFF, Data EEPROM not write-protected
  1857   30000B                     	org	3145739
  1858   30000B  E0                 	db	224
  1859                           
  1860                           ;Config register CONFIG7L @ 0x30000C
  1861                           ;	Table Read Protection Block 0
  1862                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1863                           ;	Table Read Protection Block 1
  1864                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1865                           ;	Table Read Protection Block 2
  1866                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1867                           ;	Table Read Protection Block 3
  1868                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1869   30000C                     	org	3145740
  1870   30000C  0F                 	db	15
  1871                           
  1872                           ;Config register CONFIG7H @ 0x30000D
  1873                           ;	Boot Block Table Read Protection bit
  1874                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1875   30000D                     	org	3145741
  1876   30000D  40                 	db	64
  1877                           tosu	equ	0xFFF
  1878                           tosh	equ	0xFFE
  1879                           tosl	equ	0xFFD
  1880                           stkptr	equ	0xFFC
  1881                           pclatu	equ	0xFFB
  1882                           pclath	equ	0xFFA
  1883                           pcl	equ	0xFF9
  1884                           tblptru	equ	0xFF8
  1885                           tblptrh	equ	0xFF7
  1886                           tblptrl	equ	0xFF6
  1887                           tablat	equ	0xFF5
  1888                           prodh	equ	0xFF4
  1889                           prodl	equ	0xFF3
  1890                           indf0	equ	0xFEF
  1891                           postinc0	equ	0xFEE
  1892                           postdec0	equ	0xFED
  1893                           preinc0	equ	0xFEC
  1894                           plusw0	equ	0xFEB
  1895                           fsr0h	equ	0xFEA
  1896                           fsr0l	equ	0xFE9
  1897                           wreg	equ	0xFE8
  1898                           indf1	equ	0xFE7
  1899                           postinc1	equ	0xFE6
  1900                           postdec1	equ	0xFE5
  1901                           preinc1	equ	0xFE4
  1902                           plusw1	equ	0xFE3
  1903                           fsr1h	equ	0xFE2
  1904                           fsr1l	equ	0xFE1
  1905                           bsr	equ	0xFE0
  1906                           indf2	equ	0xFDF
  1907                           postinc2	equ	0xFDE
  1908                           postdec2	equ	0xFDD
  1909                           preinc2	equ	0xFDC
  1910                           plusw2	equ	0xFDB
  1911                           fsr2h	equ	0xFDA
  1912                           fsr2l	equ	0xFD9
  1913                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        34
    BSS         74
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      1      88
    BANK0           160      0      21
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    ADC_GetConversionResult@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_Init@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_Compare_Mode_Set_Value@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Compare_Mode_Set_Value@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_DeInit@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_DeInit@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Init@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Init@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Interrupt_Config@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Interrupt_Config@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Mode_Timer_Select@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Mode_Timer_Select@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    configure_voltage_reference@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_INTx_Clear_Flag@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_SetInterruptHandler@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRllllll[1]), LATB(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), 
		 -> LATE(BITBIGSFRllllh[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRllllll[1]), PORTB(BITBIGSFRlllllh[1]), PORTC(BITBIGSFRlllllh[1]), PORTD(BITBIGSFRlllllh[1]), 
		 -> PORTE(BITBIGSFRlllllh[1]), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1073$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1073$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2020$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2118$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    S2118$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    S2337$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2498$TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2687$TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2818$TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3007$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3007$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3007$EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3007$EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3559$buffer	PTR unsigned char  size(2) Largest target is 0

    S3559$source	PTR const unsigned char  size(2) Largest target is 0

    S665$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    select_result_format@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0

    Timer0_Init@_timer$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Mode_Select@_timer$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    timer0_prescaler_config@_timer$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Register_Size_Config@_timer$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Init@_timer$TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Mode_Select@_timer$TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer2_Init@_timer$TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_Init@_timer$TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_Mode_Select@_timer$TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRllllll[1]), TRISB(ABS[1]), TRISC(ABS[1]), TRISD(ABS[1]), 
		 -> TRISE(ABS[1]), 

    usart_obj$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    usart_obj$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    usart_obj$EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    usart_obj$EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptManager in COMRAM

    _InterruptManager->_RB4_ISR
    _InterruptManager->_RB5_ISR
    _InterruptManager->_RB6_ISR
    _InterruptManager->_RB7_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
              _application_intialize
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                1     1      0       0
               _ecu_layer_initialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _InterruptManager                                     0     0      0     120
                            _ADC_ISR
                           _CCP1_ISR
                           _CCP2_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (4) _TMR3_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TMR2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TMR0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _RB7_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _RB6_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _RB5_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _RB4_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CCP2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CCP1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_intialize
     _ecu_layer_initialize

 _InterruptManager (ROOT)
   _ADC_ISR
   _CCP1_ISR
   _CCP2_ISR
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _TMR0_ISR
   _TMR1_ISR
   _TMR2_ISR
   _TMR3_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      50        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      15       5       13.1%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      1      58       1       93.6%
BITBIGSFRllllll     20      0       0      48        0.0%
BITBIGSFRhlhlhh     18      0       0      37        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRllhllh      6      0       0      41        0.0%
BITBIGSFRllhllh      6      0       0      42        0.0%
BITBIGSFRlllhh       6      0       0      45        0.0%
BITBIGSFRhlhllh      5      0       0      38        0.0%
BITBIGSFRhlhlll      5      0       0      40        0.0%
BITBIGSFRlllllh      4      0       0      47        0.0%
BITBIGSFRllllh       4      0       0      46        0.0%
BITBIGSFRllhllh      4      0       0      43        0.0%
BITBIGSFRhlhlll      1      0       0      39        0.0%
BITBIGSFRllhlll      1      0       0      44        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6D      49        0.0%
DATA                 0      0      6D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Sep 25 01:53:51 2024

             ??_InterruptManager 0059                              l356 1158        _RB5_InterruptHandler_HIGH 0023  
                __end_of_ADC_ISR 1158                              _ret 0038              led_initialize@F3310 003F  
                            wreg 0FE8            relay_initialize@F3304 003B                  __end_of_RB4_ISR 10E0  
                __end_of_RB5_ISR 10C6                  __end_of_RB6_ISR 10AC                  __end_of_RB7_ISR 1092  
                           l1263 10FC                             l1264 10FC                             l1269 113E  
                           l4030 10F8                             l4032 10F8                             l2356 113A  
                           l2358 113A                             STR_1 1011                             _LATA 0F89  
                           _LATB 0F8A                             _LATC 0F8B                             _LATD 0F8C  
                           _LATE 0F8D                             _TMR2 0FCC          ??_application_intialize 0059  
       _RB4_InterruptHandler_LOW 0025                             _main 10F8                 __end_of_CCP1_ISR 1154  
               __end_of_CCP2_ISR 1150         _RB7_InterruptHandler_LOW 0019                             fsr1l 0FE1  
                           btemp 0059                             start 036E                     ___param_bank 0000  
               __end_of_INT0_ISR 114C                 __end_of_INT1_ISR 1148                 __end_of_INT2_ISR 1144  
                          ?_main 0058                            _EEADR 0FA9                            i2l801 006A  
                          i2l810 01BE                            i2l563 1152                            i2l803 00AE  
                          i2l821 02EA                            i2l813 0246                            i2l805 00F2  
                          i2l486 1156                            i2l830 036A                            i2l567 114E  
                          i2l823 030A                            i2l815 028A                            i2l807 0136  
                          i2l825 032A                            i2l817 02AA                            i2l827 034A  
                          i2l819 02CA                            i2l909 10C4                            i2l919 10AA  
                          i2l881 114A                            i2l929 1090                            i2l885 1146  
                          i2l797 002A                            i2l799 004A                            i2l889 1142  
                          i2l899 10DE              relay_turn_off@F3314 0039                            _TMR0H 0FD7  
                          _TMR1H 0FCF                            _TMR0L 0FD6                            _TMR1L 0FCE  
                          _TMR3H 0FB3                            _TMR3L 0FB2                            _PORTA 0F80  
                          _PORTB 0F81                            _PORTC 0F82                            _PORTD 0F83  
                          _PORTE 0F84                            _TRISA 0F92                            _TRISB 0F93  
                          _TRISC 0F94                            _TRISD 0F95                            _TRISE 0F96  
               __end_of_TMR0_ISR 1128                 __end_of_TMR1_ISR 111C                 __end_of_TMR2_ISR 113A  
               __end_of_TMR3_ISR 1110                            tablat 0FF5                            ttemp5 005A  
                          ttemp6 005D                            ttemp7 0061                            status 0FD8  
                          wtemp8 005A                  __initialization 1016                     __end_of_main 1104  
                      ??_ADC_ISR 0058                    _lat_registers 0040                           ??_main 0059  
                  __activetblptr 0003            _TMR3_InterruptHandler 000D                 led_turn_on@F3315 003E  
                      ??_RB4_ISR 0058                        ??_RB5_ISR 0058                        ??_RB6_ISR 0058  
                      ??_RB7_ISR 0058                           _ADRESH 0FC4                           _EEADRH 0FAA  
                         _ADRESL 0FC3                           _EEDATA 0FA8                           _CCPR1H 0FBF  
                         _CCPR2H 0FBC                           _CCPR1L 0FBE                           _CCPR2L 0FBB  
                         _EECON2 0FA7                           i2l1080 1126                           i2l1147 111A  
                         i2l2212 1154                           i2l2220 114C                           i2l2300 1110  
                         i2l2302 1112                           i2l1238 110E                           i2l2216 1150  
                         i2l2224 1148                           i2l2232 1140                           i2l2304 1116  
                         i2l2312 1104                           i2l2250 10AE                           i2l2314 1106  
                         i2l2228 1144                           i2l2244 10DE                           i2l2236 10C8  
                         i2l2252 10B0                           i2l1196 1138                           i2l2308 1132  
                         i2l2316 110A                           i2l2238 10CA                           i2l2272 10AA  
                         i2l2264 1094                           i2l2280 107C                           i2l3400 0038  
                         i2l2258 10C4                           i2l2266 1096                           i2l3410 0086  
                         i2l3402 0046                           i2l2292 111C                           i2l3500 02D8  
                         i2l3420 00CA                           i2l3412 0094                           i2l3404 0058  
                         i2l2286 1090                           i2l2278 107A                           i2l2294 111E  
                         i2l3510 0326                           i2l3502 02E6                           i2l3430 010E  
                         i2l3422 00D8                           i2l3414 00A4                           i2l3406 0066  
                         i2l2296 1122                           i2l3512 0338                           i2l3504 02F8  
                         i2l3440 0152                           i2l3432 011C                           i2l3424 00E8  
                         i2l3416 00A8                           i2l3408 0078                           i2l3514 0346  
                         i2l3506 0306                           i2l3450 0188                           i2l3442 0160  
                         i2l3434 012C                           i2l3426 00EC                           i2l3418 00BC  
                         i2l3516 0358                           i2l3508 0318                           i2l3460 01CC  
                         i2l3452 0196                           i2l3444 0170                           i2l3436 0130  
                         i2l3428 0100                           i2l3518 0366                           i2l3462 01DA  
                         i2l3470 0202                           i2l3454 01A4                           i2l3446 0174  
                         i2l3438 0144                           i2l3480 0240                           i2l3472 0210  
                         i2l3464 01E8                           i2l3456 01B4                           i2l3448 017A  
                         i2l3490 0284                           i2l3482 0254                           i2l3474 021E  
                         i2l3466 01F8                           i2l3458 01B8                           i2l3394 000A  
                         i2l3492 0298                           i2l3484 0262                           i2l3476 022C  
                         i2l3468 01FC                           i2l3396 0018                           i2l3494 02A6  
                         i2l3486 0270                           i2l3478 023C                           i2l3398 0026  
                         i2l3496 02B8                           i2l3488 0280                           i2l3498 02C6  
                         clear_0 105C                           clear_1 1068                           isa$std 0001  
                      ?_CCP1_ISR 0058                     __pdataCOMRAM 0040                        ?_CCP2_ISR 0058  
                   __mediumconst 0000                           tblptrh 0FF7                           tblptrl 0FF6  
                         tblptru 0FF8                       __accesstop 0060          __end_of__initialization 106E  
                      ?_INT0_ISR 0058                        ?_INT1_ISR 0058                        ?_INT2_ISR 0058  
                  ___rparam_used 0001                   __pcstackCOMRAM 0058                     __pidataBANK0 1128  
                      ?_TMR0_ISR 0058                        ?_TMR1_ISR 0058                        ?_TMR2_ISR 0058  
                      ?_TMR3_ISR 0058     convert_short_to_string@F3463 0001                RB5_ISR@RB5_source 0058  
                     ??_CCP1_ISR 0058                       ??_CCP2_ISR 0058                       __pbssBANK0 0060  
          _INT0_InterruptHandler 002D                       ??_INT0_ISR 0058                       ??_INT1_ISR 0058  
                     ??_INT2_ISR 0058    __end_of_application_intialize 1140                       ??_TMR0_ISR 0058  
                     ??_TMR1_ISR 0058                       ??_TMR2_ISR 0058                       ??_TMR3_ISR 0058  
              led_turn_off@F3320 003D                          _ADC_ISR 1154                          _RB4_ISR 10C6  
                        _RB5_ISR 10AC                          _RB6_ISR 1092                          _RB7_ISR 1078  
      _RB6_InterruptHandler_HIGH 001F             led_turn_toggle@F3325 003C                          i2u30_40 10DA  
                        i2u30_41 10D6                          i2u31_40 10C0                          i2u31_41 10BC  
                        i2u32_40 10A6                          i2u32_41 10A2                          i2u33_40 108C  
                        i2u33_41 1088                RB7_ISR@RB7_source 0058  CCP_Compare_Mode_Set_Value@F3368 002F  
                     _btn_values 1001                   _tris_registers 004A         _RB6_InterruptHandler_LOW 001D  
           _ADC_InterruptHandler 0035                          __Hparam 0000                          __Lparam 0000  
                   __psmallconst 1000                          __pcinit 1016                          __ramtop 1000  
                        __ptext0 10F8                          __ptext1 113A                          __ptext2 1158  
                        __ptext4 1104                          __ptext5 1132                          __ptext6 1110  
                        __ptext7 111C                          __ptext8 1078                          __ptext9 1092  
                      _T0CONbits 0FD5                        _T1CONbits 0FCD                        _T2CONbits 0FCA  
                      _T3CONbits 0FB1             end_of_initialization 106E                          postdec1 0FE5  
                        postinc0 0FEE            _INT1_InterruptHandler 002B                        _PORTBbits 0F81  
               _InterruptManager 0008                      _CCP1CONbits 0FBD                      _CCP2CONbits 0FBA  
             relay_turn_on@F3309 003A                    __pidataCOMRAM 10E0                   _timer0_preload 0015  
                 _timer1_preload 0011                   _timer2_preload 0037              start_initialization 1016  
                 _timer3_preload 000B       convert_int_to_string@F3470 0060      convert_byte_to_string@F3456 0007  
                    __pdataBANK0 006B                         ?_ADC_ISR 0058     __end_of_ecu_layer_initialize 115A  
                       ?_RB4_ISR 0058                         ?_RB5_ISR 0058                         ?_RB6_ISR 0058  
                       ?_RB7_ISR 0058                      __pbssCOMRAM 0001            _INT2_InterruptHandler 0029  
          _TMR0_InterruptHandler 0017            _application_intialize 113A                        __pintcode 0008  
                    __smallconst 1000        _RB4_InterruptHandler_HIGH 0027                         _CCP1_ISR 1150  
                       _CCP2_ISR 114C        _RB7_InterruptHandler_HIGH 001B         _RB5_InterruptHandler_LOW 0021  
                       _INT0_ISR 1148                         _INT1_ISR 1144                         _INT2_ISR 1140  
                       _RB4_Flag 0057                         _RB5_Flag 0056                         _RB6_Flag 0055  
                       _RB7_Flag 0054         __end_of_InterruptManager 036E                         _PIE1bits 0F9D  
                       _PIE2bits 0FA0                         i2u200_40 02B8                         i2u200_41 02B4  
                       i2u201_40 02C6                         i2u201_41 02C2                         i2u210_40 0358  
                       i2u202_40 02D8                         i2u210_41 0354                         i2u202_41 02D4  
                       i2u211_40 0366                         i2u203_40 02E6                         i2u211_41 0362  
                       i2u203_41 02E2                         i2u204_40 02F8                         i2u204_41 02F4  
                       i2u205_40 0306                         i2u205_41 0302                         i2u206_40 0318  
                       i2u206_41 0314                         i2u207_40 0326                         i2u207_41 0322  
                       i2u208_40 0338                         i2u160_40 0018                         i2u208_41 0334  
                       i2u160_41 0014                         i2u209_40 0346                         i2u161_40 0026  
                       i2u209_41 0342                         i2u161_41 0022                         i2u170_40 00BC  
                       i2u162_40 0038                         i2u170_41 00B8                         i2u162_41 0034  
                       i2u171_40 00CA                         i2u163_40 0046                         i2u171_41 00C6  
                       i2u163_41 0042                         i2u180_40 0160                         i2u172_40 00D8  
                       i2u164_40 0058                         i2u180_41 015C                         i2u172_41 00D4  
                       i2u164_41 0054                         i2u181_40 0170                         i2u173_40 00E8  
                       i2u165_40 0066                         i2u181_41 016C                         i2u173_41 00E4  
                       i2u165_41 0062                         i2u190_40 0210                         i2u182_40 0188  
                       i2u174_40 0100                         i2u166_40 0078                         i2u190_41 020C  
                       i2u182_41 0184                         i2u174_41 00FC                         i2u166_41 0074  
                       i2u191_40 021E                         i2u183_40 0196                         i2u175_40 010E  
                       i2u167_40 0086                         i2u191_41 021A                         i2u183_41 0192  
                       i2u175_41 010A                         i2u167_41 0082                         i2u192_40 022C  
                       i2u184_40 01A4                         i2u176_40 011C                         i2u168_40 0094  
                       i2u192_41 0228                         i2u184_41 01A0                         i2u176_41 0118  
                       i2u168_41 0090                         i2u193_40 023C                         i2u185_40 01B4  
                       i2u177_40 012C                         i2u169_40 00A4                         i2u193_41 0238  
                       i2u185_41 01B0                         i2u177_41 0128                         i2u169_41 00A0  
                       _PIR1bits 0F9E                         i2u194_40 0254                         i2u186_40 01CC  
                       i2u178_40 0144                         i2u194_41 0250                         i2u186_41 01C8  
                       i2u178_41 0140                         i2u195_40 0262                         i2u187_40 01DA  
                       i2u179_40 0152                         i2u195_41 025E                         i2u187_41 01D6  
                       i2u179_41 014E                         _PIR2bits 0FA1                         i2u196_40 0270  
                       i2u188_40 01E8                         i2u196_41 026C                         i2u188_41 01E4  
                       i2u197_40 0280                         i2u189_40 01F8                         i2u197_41 027C  
                       i2u189_41 01F4                         i2u198_40 0298                         i2u198_41 0294  
                       i2u199_40 02A6                         i2u199_41 02A2                RB4_ISR@RB4_source 0058  
                       _TMR0_ISR 111C                         _TMR1_ISR 1110                         _TMR2_ISR 1132  
                       _TMR3_ISR 1104                       _ADCON0bits 0FC2                       _ADCON1bits 0FC1  
                     _ADCON2bits 0FC0                      _INTCON2bits 0FF1                      _INTCON3bits 0FF0  
                      copy_data0 102A                        copy_data1 104A             _ecu_layer_initialize 1158  
                     _EECON1bits 0FA6           ?_application_intialize 0058                         __Hrparam 0000  
                       __Lrparam 0000            _CCP1_InterruptHandler 0033               __end_of_btn_values 1011  
          _TMR1_InterruptHandler 0013                RB6_ISR@RB6_source 0058                         __ptext10 10AC  
                       __ptext11 10C6                         __ptext12 1140                         __ptext13 1144  
                       __ptext14 1148                         __ptext15 114C                         __ptext16 1150  
                       __ptext17 1154            ?_ecu_layer_initialize 0058                         isa$xinst 0000  
                       int$flags 0059                       _INTCONbits 0FF2                         intlevel2 0000  
                 _port_registers 006B            _CCP2_InterruptHandler 0031           ??_ecu_layer_initialize 0059  
          _TMR2_InterruptHandler 000F                ?_InterruptManager 0058  
