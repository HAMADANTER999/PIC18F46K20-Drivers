

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Sep 13 23:34:20 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,inline
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,inline
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,inline
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    66                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    67                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    68                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    69   000000                     
    70                           ; Generated 12/10/2023 GMT
    71                           ; 
    72                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution. Publication is not required when
    86                           ;        this file is used in an embedded application.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC18F46K20 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104   000000                     
   105                           	psect	idataCOMRAM
   106   002B32                     __pidataCOMRAM:
   107                           	callstack 0
   108                           
   109                           ;initializer for _RB7_Flag
   110   002B32  01                 	db	1
   111                           
   112                           ;initializer for _RB6_Flag
   113   002B33  01                 	db	1
   114                           
   115                           ;initializer for _RB5_Flag
   116   002B34  01                 	db	1
   117                           
   118                           ;initializer for _RB4_Flag
   119   002B35  01                 	db	1
   120                           
   121                           ;initializer for _motor_2
   122   002B36  13                 	db	19
   123   002B37  1B                 	db	27
   124                           
   125                           ;initializer for _motor_1
   126   002B38  03                 	db	3
   127   002B39  0B                 	db	11
   128                           
   129                           	psect	idataBANK0
   130   002A7C                     __pidataBANK0:
   131                           	callstack 0
   132                           
   133                           ;initializer for _port_registers
   134   002A7C  80                 	db	128
   135   002A7D  0F                 	db	15
   136   002A7E  81                 	db	129
   137   002A7F  0F                 	db	15
   138   002A80  82                 	db	130
   139   002A81  0F                 	db	15
   140   002A82  83                 	db	131
   141   002A83  0F                 	db	15
   142   002A84  84                 	db	132
   143   002A85  0F                 	db	15
   144                           
   145                           ;initializer for _lat_registers
   146   002A86  89                 	db	137
   147   002A87  0F                 	db	15
   148   002A88  8A                 	db	138
   149   002A89  0F                 	db	15
   150   002A8A  8B                 	db	139
   151   002A8B  0F                 	db	15
   152   002A8C  8C                 	db	140
   153   002A8D  0F                 	db	15
   154   002A8E  8D                 	db	141
   155   002A8F  0F                 	db	15
   156                           
   157                           ;initializer for _tris_registers
   158   002A90  92                 	db	146
   159   002A91  0F                 	db	15
   160   002A92  93                 	db	147
   161   002A93  0F                 	db	15
   162   002A94  94                 	db	148
   163   002A95  0F                 	db	15
   164   002A96  95                 	db	149
   165   002A97  0F                 	db	15
   166   002A98  96                 	db	150
   167   002A99  0F                 	db	15
   168                           
   169                           ;initializer for _adc_1
   170   002A9A  70                 	db	low _ADC_DefaultInterruptHandler
   171   002A9B  27                 	db	high _ADC_DefaultInterruptHandler
   172   002A9C  00                 	db	0
   173   002A9D  05                 	db	5
   174   002A9E  05                 	db	5
   175   002A9F  00                 	db	0
   176   002AA0  02                 	db	2
   177                           
   178                           ;initializer for _lcd_1
   179   002AA1  02                 	db	2
   180   002AA2  0A                 	db	10
   181   002AA3  12                 	db	18
   182   002AA4  1A                 	db	26
   183   002AA5  22                 	db	34
   184   002AA6  2A                 	db	42
   185                           
   186                           	psect	smallconst
   187   001000                     __psmallconst:
   188                           	callstack 0
   189   001000  00                 	db	0
   190   001001                     _btn_values:
   191                           	callstack 0
   192   001001  37                 	db	55
   193   001002  38                 	db	56
   194   001003  39                 	db	57
   195   001004  2F                 	db	47
   196   001005  34                 	db	52
   197   001006  35                 	db	53
   198   001007  36                 	db	54
   199   001008  37                 	db	55
   200   001009  31                 	db	49
   201   00100A  32                 	db	50
   202   00100B  33                 	db	51
   203   00100C  34                 	db	52
   204   00100D  23                 	db	35
   205   00100E  30                 	db	48
   206   00100F  3D                 	db	61
   207   001010  2B                 	db	43
   208   001011                     __end_of_btn_values:
   209                           	callstack 0
   210   000000                     _ADCON1bits	set	4033
   211   000000                     _ADRESL	set	4035
   212   000000                     _ADRESH	set	4036
   213   000000                     _INTCON2bits	set	4081
   214   000000                     _EECON2	set	4007
   215   001011                     STR_4:
   216   001011  4C                 	db	76	;'L'
   217   001012  4D                 	db	77	;'M'
   218   001013  33                 	db	51	;'3'
   219   001014  35                 	db	53	;'5'
   220   001015  20                 	db	32
   221   001016  54                 	db	84	;'T'
   222   001017  65                 	db	101	;'e'
   223   001018  73                 	db	115	;'s'
   224   001019  74                 	db	116	;'t'
   225   00101A  00                 	db	0
   226   00101B                     STR_5:
   227   00101B  54                 	db	84	;'T'
   228   00101C  65                 	db	101	;'e'
   229   00101D  6D                 	db	109	;'m'
   230   00101E  70                 	db	112	;'p'
   231   00101F  31                 	db	49	;'1'
   232   001020  3A                 	db	58	;':'
   233   001021  20                 	db	32
   234   001022  00                 	db	0
   235   001023                     STR_6:
   236   001023  54                 	db	84	;'T'
   237   001024  65                 	db	101	;'e'
   238   001025  6D                 	db	109	;'m'
   239   001026  70                 	db	112	;'p'
   240   001027  32                 	db	50	;'2'
   241   001028  3A                 	db	58	;':'
   242   001029  20                 	db	32
   243   00102A  00                 	db	0
   244   00102B                     STR_1:
   245   00102B  25                 	db	37
   246   00102C  69                 	db	105	;'i'
   247   00102D  00                 	db	0
   248   00102E  00                 	db	0	; dummy byte at the end
   249   000000                     
   250                           	psect	nvBANK0
   251   0000ED                     __pnvBANK0:
   252                           	callstack 0
   253   0000ED                     _ret:
   254                           	callstack 0
   255   0000ED                     	ds	1
   256   000000                     _PORTBbits	set	3969
   257   000000                     _EECON1bits	set	4006
   258   000000                     _EEDATA	set	4008
   259   000000                     _EEADR	set	4009
   260   000000                     _EEADRH	set	4010
   261   000000                     _INTCONbits	set	4082
   262   000000                     _PORTA	set	3968
   263   000000                     _LATA	set	3977
   264   000000                     _TRISA	set	3986
   265   000000                     _ADCON2bits	set	4032
   266   000000                     _ADCON0bits	set	4034
   267   000000                     _INTCON3bits	set	4080
   268   000000                     _PIE1bits	set	3997
   269   000000                     _TRISE	set	3990
   270   000000                     _TRISD	set	3989
   271   000000                     _TRISC	set	3988
   272   000000                     _TRISB	set	3987
   273   000000                     _LATE	set	3981
   274   000000                     _LATD	set	3980
   275   000000                     _LATC	set	3979
   276   000000                     _LATB	set	3978
   277   000000                     _PORTE	set	3972
   278   000000                     _PORTD	set	3971
   279   000000                     _PORTC	set	3970
   280   000000                     _PORTB	set	3969
   281   000000                     _PIR1bits	set	3998
   282                           
   283                           ; #config settings
   284                           
   285                           	psect	cinit
   286   00254A                     __pcinit:
   287                           	callstack 0
   288   00254A                     start_initialization:
   289                           	callstack 0
   290   00254A                     __initialization:
   291                           	callstack 0
   292                           
   293                           ; Initialize objects allocated to BANK0 (43 bytes)
   294                           ; load TBLPTR registers with __pidataBANK0
   295   00254A  0E7C               	movlw	low __pidataBANK0
   296   00254C  6EF6               	movwf	tblptrl,c
   297   00254E  0E2A               	movlw	high __pidataBANK0
   298   002550  6EF7               	movwf	tblptrh,c
   299   002552  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   300   002554  6EF8               	movwf	tblptru,c
   301   002556  EE00  F0B7         	lfsr	0,__pdataBANK0
   302   00255A  EE10 F02B          	lfsr	1,43
   303   00255E                     copy_data0:
   304   00255E  0009               	tblrd		*+
   305   002560  CFF5 FFEE          	movff	tablat,postinc0
   306   002564  50E5               	movf	postdec1,w,c
   307   002566  50E1               	movf	fsr1l,w,c
   308   002568  E1FA               	bnz	copy_data0
   309                           
   310                           ; Initialize objects allocated to COMRAM (8 bytes)
   311                           ; load TBLPTR registers with __pidataCOMRAM
   312   00256A  0E32               	movlw	low __pidataCOMRAM
   313   00256C  6EF6               	movwf	tblptrl,c
   314   00256E  0E2B               	movlw	high __pidataCOMRAM
   315   002570  6EF7               	movwf	tblptrh,c
   316   002572  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   317   002574  6EF8               	movwf	tblptru,c
   318   002576  EE00  F04D         	lfsr	0,__pdataCOMRAM
   319   00257A  EE10 F008          	lfsr	1,8
   320   00257E                     copy_data1:
   321   00257E  0009               	tblrd		*+
   322   002580  CFF5 FFEE          	movff	tablat,postinc0
   323   002584  50E5               	movf	postdec1,w,c
   324   002586  50E1               	movf	fsr1l,w,c
   325   002588  E1FA               	bnz	copy_data1
   326                           
   327                           ; Clear objects allocated to BANK0 (87 bytes)
   328   00258A  EE00  F060         	lfsr	0,__pbssBANK0
   329   00258E  0E57               	movlw	87
   330   002590                     clear_0:
   331   002590  6AEE               	clrf	postinc0,c
   332   002592  06E8               	decf	wreg,f,c
   333   002594  E1FD               	bnz	clear_0
   334                           
   335                           ; Clear objects allocated to COMRAM (23 bytes)
   336   002596  EE00  F036         	lfsr	0,__pbssCOMRAM
   337   00259A  0E17               	movlw	23
   338   00259C                     clear_1:
   339   00259C  6AEE               	clrf	postinc0,c
   340   00259E  06E8               	decf	wreg,f,c
   341   0025A0  E1FD               	bnz	clear_1
   342   0025A2                     end_of_initialization:
   343                           	callstack 0
   344   0025A2                     __end_of__initialization:
   345                           	callstack 0
   346   0025A2  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   347   0025A4  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   348   0025A6  0100               	movlb	0
   349   0025A8  EF2D  F00A         	goto	_main	;jump to C main() function
   350                           
   351                           	psect	bssCOMRAM
   352   000036                     __pbssCOMRAM:
   353                           	callstack 0
   354   000036                     _ADC_InterruptHandler:
   355                           	callstack 0
   356   000036                     	ds	2
   357   000038                     _lm35_res_2_Celsius:
   358                           	callstack 0
   359   000038                     	ds	2
   360   00003A                     _lm35_res_1_Celsius:
   361                           	callstack 0
   362   00003A                     	ds	2
   363   00003C                     _INT1_InterruptHandler:
   364                           	callstack 0
   365   00003C                     	ds	2
   366   00003E                     _INT0_InterruptHandler:
   367                           	callstack 0
   368   00003E                     	ds	2
   369   000040                     _flags:
   370                           	callstack 0
   371   000040                     	ds	1
   372   000041                     _ADC_Req:
   373                           	callstack 0
   374   000041                     	ds	1
   375   000042                     relay_turn_off@F3314:
   376                           	callstack 0
   377   000042                     	ds	1
   378   000043                     relay_turn_on@F3309:
   379                           	callstack 0
   380   000043                     	ds	1
   381   000044                     relay_initialize@F3304:
   382                           	callstack 0
   383   000044                     	ds	1
   384   000045                     led_turn_toggle@F3325:
   385                           	callstack 0
   386   000045                     	ds	1
   387   000046                     led_turn_off@F3320:
   388                           	callstack 0
   389   000046                     	ds	1
   390   000047                     led_turn_on@F3315:
   391                           	callstack 0
   392   000047                     	ds	1
   393   000048                     led_initialize@F3310:
   394                           	callstack 0
   395   000048                     	ds	1
   396   000049                     _res_2:
   397                           	callstack 0
   398   000049                     	ds	2
   399   00004B                     _res_1:
   400                           	callstack 0
   401   00004B                     	ds	2
   402                           
   403                           	psect	dataCOMRAM
   404   00004D                     __pdataCOMRAM:
   405                           	callstack 0
   406   00004D                     _RB7_Flag:
   407                           	callstack 0
   408   00004D                     	ds	1
   409   00004E                     _RB6_Flag:
   410                           	callstack 0
   411   00004E                     	ds	1
   412   00004F                     _RB5_Flag:
   413                           	callstack 0
   414   00004F                     	ds	1
   415   000050                     _RB4_Flag:
   416                           	callstack 0
   417   000050                     	ds	1
   418   000051                     _motor_2:
   419                           	callstack 0
   420   000051                     	ds	2
   421   000053                     _motor_1:
   422                           	callstack 0
   423   000053                     	ds	2
   424                           
   425                           	psect	bssBANK0
   426   000060                     __pbssBANK0:
   427                           	callstack 0
   428   000060                     _dbuf:
   429                           	callstack 0
   430   000060                     	ds	32
   431   000080                     	ds	11
   432   00008B                     	ds	6
   433   000091                     	ds	4
   434   000095                     _width:
   435                           	callstack 0
   436   000095                     	ds	2
   437   000097                     _prec:
   438                           	callstack 0
   439   000097                     	ds	2
   440   000099                     _RB7_InterruptHandler_LOW:
   441                           	callstack 0
   442   000099                     	ds	2
   443   00009B                     _RB7_InterruptHandler_HIGH:
   444                           	callstack 0
   445   00009B                     	ds	2
   446   00009D                     _RB6_InterruptHandler_LOW:
   447                           	callstack 0
   448   00009D                     	ds	2
   449   00009F                     _RB6_InterruptHandler_HIGH:
   450                           	callstack 0
   451   00009F                     	ds	2
   452   0000A1                     _RB5_InterruptHandler_LOW:
   453                           	callstack 0
   454   0000A1                     	ds	2
   455   0000A3                     _RB5_InterruptHandler_HIGH:
   456                           	callstack 0
   457   0000A3                     	ds	2
   458   0000A5                     _RB4_InterruptHandler_LOW:
   459                           	callstack 0
   460   0000A5                     	ds	2
   461   0000A7                     _RB4_InterruptHandler_HIGH:
   462                           	callstack 0
   463   0000A7                     	ds	2
   464   0000A9                     _INT2_InterruptHandler:
   465                           	callstack 0
   466   0000A9                     	ds	2
   467   0000AB                     _adc_res_2_txt:
   468                           	callstack 0
   469   0000AB                     	ds	6
   470   0000B1                     _adc_res_1_txt:
   471                           	callstack 0
   472   0000B1                     	ds	6
   473                           
   474                           	psect	dataBANK0
   475   0000B7                     __pdataBANK0:
   476                           	callstack 0
   477   0000B7                     _port_registers:
   478                           	callstack 0
   479   0000B7                     	ds	10
   480   0000C1                     _lat_registers:
   481                           	callstack 0
   482   0000C1                     	ds	10
   483   0000CB                     _tris_registers:
   484                           	callstack 0
   485   0000CB                     	ds	10
   486   0000D5                     _adc_1:
   487                           	callstack 0
   488   0000D5                     	ds	7
   489   0000DC                     _lcd_1:
   490                           	callstack 0
   491   0000DC                     	ds	6
   492                           
   493                           	psect	cstackBANK0
   494   0000E2                     __pcstackBANK0:
   495                           	callstack 0
   496   0000E2                     ??___fltol:
   497   0000E2                     convert_short_to_string@value:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x0
   501   0000E2                     	ds	2
   502   0000E4                     convert_short_to_string@str:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0x2
   506   0000E4                     	ds	1
   507   0000E5                     convert_short_to_string@Temp_String:
   508                           	callstack 0
   509                           
   510                           ; 6 bytes @ 0x3
   511   0000E5                     	ds	1
   512   0000E6                     ___fltol@sign1:
   513                           	callstack 0
   514                           
   515                           ; 1 bytes @ 0x4
   516   0000E6                     	ds	1
   517   0000E7                     ___fltol@exp1:
   518                           	callstack 0
   519                           
   520                           ; 1 bytes @ 0x5
   521   0000E7                     	ds	4
   522   0000EB                     convert_short_to_string@ret:
   523                           	callstack 0
   524                           
   525                           ; 1 bytes @ 0x9
   526   0000EB                     	ds	1
   527   0000EC                     convert_short_to_string@DataCounter:
   528                           	callstack 0
   529                           
   530                           ; 1 bytes @ 0xA
   531   0000EC                     	ds	1
   532                           
   533                           	psect	cstackCOMRAM
   534   000001                     __pcstackCOMRAM:
   535                           	callstack 0
   536   000001                     RB4_ISR@RB4_source:
   537                           	callstack 0
   538   000001                     RB5_ISR@RB5_source:
   539                           	callstack 0
   540   000001                     RB6_ISR@RB6_source:
   541                           	callstack 0
   542   000001                     RB7_ISR@RB7_source:
   543                           	callstack 0
   544   000001                     ADC_GetConversionResult@_adc:
   545                           	callstack 0
   546   000001                     
   547                           ; 1 bytes @ 0x0
   548   000001                     	ds	1
   549   000002                     ADC_GetConversionResult@conversion_result:
   550                           	callstack 0
   551                           
   552                           ; 1 bytes @ 0x1
   553   000002                     	ds	1
   554   000003                     ??_ADC_GetConversionResult:
   555                           
   556                           ; 1 bytes @ 0x2
   557   000003                     	ds	3
   558   000006                     ADC_GetConversionResult@ret:
   559                           	callstack 0
   560                           
   561                           ; 1 bytes @ 0x5
   562   000006                     	ds	1
   563   000007                     ??_InterruptManager:
   564                           
   565                           ; 1 bytes @ 0x6
   566   000007                     	ds	4
   567   00000B                     ??_adc_input_channel_port_configure:
   568   00000B                     ?___awdiv:
   569                           	callstack 0
   570   00000B                     ?___awmod:
   571                           	callstack 0
   572   00000B                     ?___lwdiv:
   573                           	callstack 0
   574   00000B                     ?___xxtofl:
   575                           	callstack 0
   576   00000B                     gpio_pin_direction_intialize@_pin_config:
   577                           	callstack 0
   578   00000B                     gpio_pin_write_logic@_pin_config:
   579                           	callstack 0
   580   00000B                     ADC_StartConversion@_adc:
   581                           	callstack 0
   582   00000B                     select_result_format@_adc:
   583                           	callstack 0
   584   00000B                     configure_voltage_reference@_adc:
   585                           	callstack 0
   586   00000B                     memset@dest:
   587                           	callstack 0
   588   00000B                     ___awdiv@dividend:
   589                           	callstack 0
   590   00000B                     ___awmod@dividend:
   591                           	callstack 0
   592   00000B                     ___lwdiv@dividend:
   593                           	callstack 0
   594   00000B                     fputc@c:
   595                           	callstack 0
   596   00000B                     ___xxtofl@val:
   597                           	callstack 0
   598                           
   599                           ; 4 bytes @ 0xA
   600   00000B                     	ds	1
   601   00000C                     ??_gpio_pin_direction_intialize:
   602   00000C                     gpio_pin_write_logic@logic:
   603                           	callstack 0
   604   00000C                     ADC_StartConversion@ret:
   605                           	callstack 0
   606   00000C                     memset@c:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0xB
   610   00000C                     	ds	1
   611   00000D                     ??_gpio_pin_write_logic:
   612   00000D                     adc_input_channel_port_configure@channel:
   613                           	callstack 0
   614   00000D                     fputc@fp:
   615                           	callstack 0
   616   00000D                     ___awdiv@divisor:
   617                           	callstack 0
   618   00000D                     ___awmod@divisor:
   619                           	callstack 0
   620   00000D                     ___lwdiv@divisor:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0xC
   624   00000D                     	ds	1
   625   00000E                     ??_fputc:
   626   00000E                     ADC_Init@_adc:
   627                           	callstack 0
   628   00000E                     ADC_SelectChannel@_adc:
   629                           	callstack 0
   630   00000E                     memset@n:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0xD
   634   00000E                     	ds	1
   635   00000F                     ??_ADC_Init:
   636   00000F                     ??___xxtofl:
   637   00000F                     ADC_SelectChannel@channel:
   638                           	callstack 0
   639   00000F                     ___awdiv@counter:
   640                           	callstack 0
   641   00000F                     ___awmod@counter:
   642                           	callstack 0
   643   00000F                     ___lwdiv@quotient:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0xE
   647   00000F                     	ds	1
   648   000010                     ??_ADC_SelectChannel:
   649   000010                     ADC_Init@ret:
   650                           	callstack 0
   651   000010                     ___awdiv@sign:
   652                           	callstack 0
   653   000010                     ___awmod@sign:
   654                           	callstack 0
   655   000010                     memset@p:
   656                           	callstack 0
   657                           
   658                           ; 1 bytes @ 0xF
   659   000010                     	ds	1
   660   000011                     ?_abs:
   661                           	callstack 0
   662   000011                     gpio_pin_direction_intialize@ret:
   663                           	callstack 0
   664   000011                     ADC_SelectChannel@ret:
   665                           	callstack 0
   666   000011                     ___lwdiv@counter:
   667                           	callstack 0
   668   000011                     ___awdiv@quotient:
   669                           	callstack 0
   670   000011                     abs@a:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0x10
   674   000011                     	ds	1
   675   000012                     gpio_pin_write_logic@ret:
   676                           	callstack 0
   677   000012                     ADC_GetConversion_Interrupt@_adc:
   678                           	callstack 0
   679                           
   680                           ; 1 bytes @ 0x11
   681   000012                     	ds	1
   682   000013                     ??_abs:
   683   000013                     lcd_send_4bits@lcd:
   684                           	callstack 0
   685   000013                     lcd_send_4bits_enable_signal@lcd:
   686                           	callstack 0
   687   000013                     dc_motor_move_right@_dc_motor:
   688                           	callstack 0
   689   000013                     dc_motor_move_left@_dc_motor:
   690                           	callstack 0
   691   000013                     dc_motor_stop@_dc_motor:
   692                           	callstack 0
   693   000013                     gpio_pin_intialize@_pin_config:
   694                           	callstack 0
   695   000013                     ADC_GetConversion_Interrupt@channel:
   696                           	callstack 0
   697   000013                     ___xxtofl@sign:
   698                           	callstack 0
   699                           
   700                           ; 1 bytes @ 0x12
   701   000013                     	ds	1
   702   000014                     ??_gpio_pin_intialize:
   703   000014                     lcd_send_4bits@_data_command:
   704                           	callstack 0
   705   000014                     lcd_send_4bits_enable_signal@ret:
   706                           	callstack 0
   707   000014                     dc_motor_move_right@ret:
   708                           	callstack 0
   709   000014                     dc_motor_move_left@ret:
   710                           	callstack 0
   711   000014                     dc_motor_stop@ret:
   712                           	callstack 0
   713   000014                     ADC_GetConversion_Interrupt@ret:
   714                           	callstack 0
   715   000014                     ___xxtofl@exp:
   716                           	callstack 0
   717                           
   718                           ; 1 bytes @ 0x13
   719   000014                     	ds	1
   720   000015                     lcd_send_4bits@ret:
   721                           	callstack 0
   722   000015                     gpio_pin_intialize@ret:
   723                           	callstack 0
   724   000015                     vfpfcnvrt@fp:
   725                           	callstack 0
   726   000015                     ___xxtofl@arg:
   727                           	callstack 0
   728                           
   729                           ; 4 bytes @ 0x14
   730   000015                     	ds	1
   731   000016                     lcd_4bit_send_command@lcd:
   732                           	callstack 0
   733   000016                     lcd_4bit_send_char_data@lcd:
   734                           	callstack 0
   735   000016                     dc_motor_initialize@_dc_motor:
   736                           	callstack 0
   737   000016                     vfpfcnvrt@fmt:
   738                           	callstack 0
   739                           
   740                           ; 1 bytes @ 0x15
   741   000016                     	ds	1
   742   000017                     lcd_4bit_send_command@command:
   743                           	callstack 0
   744   000017                     lcd_4bit_send_char_data@data:
   745                           	callstack 0
   746   000017                     dc_motor_initialize@ret:
   747                           	callstack 0
   748   000017                     vfpfcnvrt@ap:
   749                           	callstack 0
   750                           
   751                           ; 1 bytes @ 0x16
   752   000017                     	ds	1
   753   000018                     ??_vfpfcnvrt:
   754   000018                     lcd_4bit_send_command@ret:
   755                           	callstack 0
   756   000018                     lcd_4bit_send_char_data@ret:
   757                           	callstack 0
   758                           
   759                           ; 1 bytes @ 0x17
   760   000018                     	ds	1
   761   000019                     ?___flmul:
   762                           	callstack 0
   763   000019                     lcd_4bit_initialize@lcd:
   764                           	callstack 0
   765   000019                     lcd_4bit_set_cursor@lcd:
   766                           	callstack 0
   767   000019                     vfpfcnvrt@done:
   768                           	callstack 0
   769   000019                     ___flmul@b:
   770                           	callstack 0
   771                           
   772                           ; 4 bytes @ 0x18
   773   000019                     	ds	1
   774   00001A                     ??_lcd_4bit_initialize:
   775   00001A                     lcd_4bit_set_cursor@row:
   776                           	callstack 0
   777   00001A                     vfpfcnvrt@cp:
   778                           	callstack 0
   779                           
   780                           ; 1 bytes @ 0x19
   781   00001A                     	ds	1
   782   00001B                     lcd_4bit_initialize@l_data_pin_counter:
   783                           	callstack 0
   784   00001B                     lcd_4bit_set_cursor@coulmn:
   785                           	callstack 0
   786   00001B                     vfpfcnvrt@convarg:
   787                           	callstack 0
   788                           
   789                           ; 4 bytes @ 0x1A
   790   00001B                     	ds	1
   791   00001C                     lcd_4bit_initialize@ret:
   792                           	callstack 0
   793   00001C                     lcd_4bit_set_cursor@ret:
   794                           	callstack 0
   795                           
   796                           ; 1 bytes @ 0x1B
   797   00001C                     	ds	1
   798   00001D                     lcd_4bit_send_string_pos@lcd:
   799                           	callstack 0
   800   00001D                     ___flmul@a:
   801                           	callstack 0
   802                           
   803                           ; 4 bytes @ 0x1C
   804   00001D                     	ds	1
   805   00001E                     lcd_4bit_send_string_pos@row:
   806                           	callstack 0
   807                           
   808                           ; 1 bytes @ 0x1D
   809   00001E                     	ds	1
   810   00001F                     lcd_4bit_send_string_pos@coulmn:
   811                           	callstack 0
   812   00001F                     vfpfcnvrt@c:
   813                           	callstack 0
   814                           
   815                           ; 1 bytes @ 0x1E
   816   00001F                     	ds	1
   817   000020                     ?_vfprintf:
   818                           	callstack 0
   819   000020                     vfprintf@fp:
   820                           	callstack 0
   821   000020                     lcd_4bit_send_string_pos@str:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x1F
   825   000020                     	ds	1
   826   000021                     ??___flmul:
   827   000021                     vfprintf@fmt:
   828                           	callstack 0
   829                           
   830                           ; 1 bytes @ 0x20
   831   000021                     	ds	1
   832   000022                     lcd_4bit_send_string_pos@ret:
   833                           	callstack 0
   834   000022                     vfprintf@ap:
   835                           	callstack 0
   836                           
   837                           ; 1 bytes @ 0x21
   838   000022                     	ds	1
   839   000023                     vfprintf@cfmt:
   840                           	callstack 0
   841                           
   842                           ; 1 bytes @ 0x22
   843   000023                     	ds	1
   844   000024                     ?_sprintf:
   845                           	callstack 0
   846   000024                     sprintf@s:
   847                           	callstack 0
   848                           
   849                           ; 1 bytes @ 0x23
   850   000024                     	ds	1
   851   000025                     ___flmul@sign:
   852                           	callstack 0
   853   000025                     sprintf@fmt:
   854                           	callstack 0
   855                           
   856                           ; 1 bytes @ 0x24
   857   000025                     	ds	1
   858   000026                     ___flmul@grs:
   859                           	callstack 0
   860                           
   861                           ; 4 bytes @ 0x25
   862   000026                     	ds	2
   863   000028                     sprintf@ap:
   864                           	callstack 0
   865                           
   866                           ; 1 bytes @ 0x27
   867   000028                     	ds	1
   868   000029                     sprintf@f:
   869                           	callstack 0
   870                           
   871                           ; 12 bytes @ 0x28
   872   000029                     	ds	1
   873   00002A                     ___flmul@aexp:
   874                           	callstack 0
   875                           
   876                           ; 1 bytes @ 0x29
   877   00002A                     	ds	1
   878   00002B                     ___flmul@bexp:
   879                           	callstack 0
   880                           
   881                           ; 1 bytes @ 0x2A
   882   00002B                     	ds	1
   883   00002C                     ___flmul@prod:
   884                           	callstack 0
   885                           
   886                           ; 4 bytes @ 0x2B
   887   00002C                     	ds	4
   888   000030                     ___flmul@temp:
   889                           	callstack 0
   890                           
   891                           ; 2 bytes @ 0x2F
   892   000030                     	ds	2
   893   000032                     ?___fltol:
   894                           	callstack 0
   895   000032                     ___fltol@f1:
   896                           	callstack 0
   897                           
   898                           ; 4 bytes @ 0x31
   899   000032                     	ds	3
   900   000035                     
   901                           ; 1 bytes @ 0x34
   902   000035                     	ds	1
   903   000036                     
   904                           ; 1 bytes @ 0x35
   905 ;;
   906 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   907 ;;
   908 ;; *************** function _main *****************
   909 ;; Defined at:
   910 ;;		line 74 in file "application.c"
   911 ;; Parameters:    Size  Location     Type
   912 ;;		None
   913 ;; Auto vars:     Size  Location     Type
   914 ;;		None
   915 ;; Return value:  Size  Location     Type
   916 ;;                  2  821[None  ] int 
   917 ;; Registers used:
   918 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   919 ;; Tracked objects:
   920 ;;		On entry : 0/0
   921 ;;		On exit  : 0/0
   922 ;;		Unchanged: 0/0
   923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   928 ;;Total ram usage:        0 bytes
   929 ;; Hardware stack levels required when called: 10
   930 ;; This function calls:
   931 ;;		_ADC_GetConversion_Interrupt
   932 ;;		_Application
   933 ;;		___flmul
   934 ;;		___fltol
   935 ;;		___lwdiv
   936 ;;		___xxtofl
   937 ;;		_convert_short_to_string
   938 ;;		_dc_motor_move_left
   939 ;;		_dc_motor_move_right
   940 ;;		_dc_motor_stop
   941 ;;		_lcd_4bit_send_string_pos
   942 ;; This function is called by:
   943 ;;		Startup code after reset
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           	psect	text0
   948   00145A                     __ptext0:
   949                           	callstack 0
   950   00145A                     _main:
   951                           	callstack 21
   952   00145A                     
   953                           ;application.c: 75:     Application ();
   954   00145A  EC8E  F014         	call	_Application	;wreg free
   955   00145E                     
   956                           ;application.c: 76:     ret = lcd_4bit_send_string_pos(&lcd_1, 1, 7, "LM35 Test");
   957   00145E  0EDC               	movlw	low _lcd_1
   958   001460  6E1D               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   959   001462  0E01               	movlw	1
   960   001464  6E1E               	movwf	lcd_4bit_send_string_pos@row^0,c
   961   001466  0E07               	movlw	7
   962   001468  6E1F               	movwf	lcd_4bit_send_string_pos@coulmn^0,c
   963   00146A  0E11               	movlw	low STR_4
   964   00146C  6E20               	movwf	lcd_4bit_send_string_pos@str^0,c
   965   00146E  5020               	movf	lcd_4bit_send_string_pos@str^0,w,c
   966   001470  A4D8               	btfss	status,2,c
   967   001472  0E10               	movlw	high __smallconst
   968   001474  6E21               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
   969   001476  EC46  F011         	call	_lcd_4bit_send_string_pos	;wreg free
   970   00147A  0100               	movlb	0	; () banked
   971   00147C  6FED               	movwf	_ret& (0+255),b
   972   00147E                     
   973                           ; BSR set to: 0
   974                           ;application.c: 78:     ret = lcd_4bit_send_string_pos(&lcd_1, 2, 1, "Temp1: ");
   975   00147E  0EDC               	movlw	low _lcd_1
   976   001480  6E1D               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   977   001482  0E02               	movlw	2
   978   001484  6E1E               	movwf	lcd_4bit_send_string_pos@row^0,c
   979   001486  0E01               	movlw	1
   980   001488  6E1F               	movwf	lcd_4bit_send_string_pos@coulmn^0,c
   981   00148A  0E1B               	movlw	low STR_5
   982   00148C  6E20               	movwf	lcd_4bit_send_string_pos@str^0,c
   983   00148E  5020               	movf	lcd_4bit_send_string_pos@str^0,w,c
   984   001490  A4D8               	btfss	status,2,c
   985   001492  0E10               	movlw	high __smallconst
   986   001494  6E21               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
   987   001496  EC46  F011         	call	_lcd_4bit_send_string_pos	;wreg free
   988   00149A  0100               	movlb	0	; () banked
   989   00149C  6FED               	movwf	_ret& (0+255),b
   990   00149E                     
   991                           ; BSR set to: 0
   992                           ;application.c: 79:     ret = lcd_4bit_send_string_pos(&lcd_1, 3, 1, "Temp2: ");
   993   00149E  0EDC               	movlw	low _lcd_1
   994   0014A0  6E1D               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   995   0014A2  0E03               	movlw	3
   996   0014A4  6E1E               	movwf	lcd_4bit_send_string_pos@row^0,c
   997   0014A6  0E01               	movlw	1
   998   0014A8  6E1F               	movwf	lcd_4bit_send_string_pos@coulmn^0,c
   999   0014AA  0E23               	movlw	low STR_6
  1000   0014AC  6E20               	movwf	lcd_4bit_send_string_pos@str^0,c
  1001   0014AE  5020               	movf	lcd_4bit_send_string_pos@str^0,w,c
  1002   0014B0  A4D8               	btfss	status,2,c
  1003   0014B2  0E10               	movlw	high __smallconst
  1004   0014B4  6E21               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1005   0014B6  EC46  F011         	call	_lcd_4bit_send_string_pos	;wreg free
  1006   0014BA  0100               	movlb	0	; () banked
  1007   0014BC  6FED               	movwf	_ret& (0+255),b
  1008   0014BE                     l5830:
  1009                           
  1010                           ; BSR set to: 0
  1011                           ;application.c: 83:     {;application.c: 84:         if (0 == ADC_Req){
  1012   0014BE  5041               	movf	_ADC_Req^0,w,c
  1013   0014C0  A4D8               	btfss	status,2,c
  1014   0014C2  EF65  F00A         	goto	u5751
  1015   0014C6  EF67  F00A         	goto	u5750
  1016   0014CA                     u5751:
  1017   0014CA  EF71  F00A         	goto	l5834
  1018   0014CE                     u5750:
  1019   0014CE                     
  1020                           ; BSR set to: 0
  1021                           ;application.c: 85:             ret = ADC_GetConversion_Interrupt (&adc_1, ADC_CHANNEL_A
      +                          N0);
  1022   0014CE  0ED5               	movlw	low _adc_1
  1023   0014D0  6E12               	movwf	ADC_GetConversion_Interrupt@_adc^0,c
  1024   0014D2  0E00               	movlw	0
  1025   0014D4  6E13               	movwf	ADC_GetConversion_Interrupt@channel^0,c
  1026   0014D6  ECDD  F014         	call	_ADC_GetConversion_Interrupt	;wreg free
  1027   0014DA  0100               	movlb	0	; () banked
  1028   0014DC  6FED               	movwf	_ret& (0+255),b
  1029                           
  1030                           ;application.c: 86:         }
  1031   0014DE  EF81  F00A         	goto	l5838
  1032   0014E2                     l5834:
  1033                           
  1034                           ; BSR set to: 0
  1035   0014E2  0441               	decf	_ADC_Req^0,w,c
  1036   0014E4  A4D8               	btfss	status,2,c
  1037   0014E6  EF77  F00A         	goto	u5761
  1038   0014EA  EF79  F00A         	goto	u5760
  1039   0014EE                     u5761:
  1040   0014EE  EF81  F00A         	goto	l5838
  1041   0014F2                     u5760:
  1042   0014F2                     
  1043                           ; BSR set to: 0
  1044                           ;application.c: 88:             ret = ADC_GetConversion_Interrupt (&adc_1, ADC_CHANNEL_A
      +                          N1);
  1045   0014F2  0ED5               	movlw	low _adc_1
  1046   0014F4  6E12               	movwf	ADC_GetConversion_Interrupt@_adc^0,c
  1047   0014F6  0E01               	movlw	1
  1048   0014F8  6E13               	movwf	ADC_GetConversion_Interrupt@channel^0,c
  1049   0014FA  ECDD  F014         	call	_ADC_GetConversion_Interrupt	;wreg free
  1050   0014FE  0100               	movlb	0	; () banked
  1051   001500  6FED               	movwf	_ret& (0+255),b
  1052   001502                     l5838:
  1053                           
  1054                           ; BSR set to: 0
  1055                           ;application.c: 92:         lm35_res_1_Celsius = res_1 * 4.88f;
  1056   001502  0EF6               	movlw	246
  1057   001504  6E1D               	movwf	___flmul@a^0,c
  1058   001506  0E28               	movlw	40
  1059   001508  6E1E               	movwf	(___flmul@a+1)^0,c
  1060   00150A  0E9C               	movlw	156
  1061   00150C  6E1F               	movwf	(___flmul@a+2)^0,c
  1062   00150E  0E40               	movlw	64
  1063   001510  6E20               	movwf	(___flmul@a+3)^0,c
  1064   001512  C04B  F00B         	movff	_res_1,___xxtofl@val
  1065   001516  C04C  F00C         	movff	_res_1+1,___xxtofl@val+1
  1066   00151A  6A0D               	clrf	(___xxtofl@val+2)^0,c
  1067   00151C  6A0E               	clrf	(___xxtofl@val+3)^0,c
  1068   00151E  0E00               	movlw	0
  1069   001520  EC35  F00C         	call	___xxtofl
  1070   001524  C00B  F019         	movff	?___xxtofl,___flmul@b
  1071   001528  C00C  F01A         	movff	?___xxtofl+1,___flmul@b+1
  1072   00152C  C00D  F01B         	movff	?___xxtofl+2,___flmul@b+2
  1073   001530  C00E  F01C         	movff	?___xxtofl+3,___flmul@b+3
  1074   001534  EC18  F008         	call	___flmul	;wreg free
  1075   001538  C019  F032         	movff	?___flmul,___fltol@f1
  1076   00153C  C01A  F033         	movff	?___flmul+1,___fltol@f1+1
  1077   001540  C01B  F034         	movff	?___flmul+2,___fltol@f1+2
  1078   001544  C01C  F035         	movff	?___flmul+3,___fltol@f1+3
  1079   001548  EC20  F00E         	call	___fltol	;wreg free
  1080   00154C  C032  F03A         	movff	?___fltol,_lm35_res_1_Celsius
  1081   001550  C033  F03B         	movff	?___fltol+1,_lm35_res_1_Celsius+1
  1082                           
  1083                           ;application.c: 93:         lm35_res_2_Celsius = res_2 * 4.88f;
  1084   001554  0EF6               	movlw	246
  1085   001556  6E1D               	movwf	___flmul@a^0,c
  1086   001558  0E28               	movlw	40
  1087   00155A  6E1E               	movwf	(___flmul@a+1)^0,c
  1088   00155C  0E9C               	movlw	156
  1089   00155E  6E1F               	movwf	(___flmul@a+2)^0,c
  1090   001560  0E40               	movlw	64
  1091   001562  6E20               	movwf	(___flmul@a+3)^0,c
  1092   001564  C049  F00B         	movff	_res_2,___xxtofl@val
  1093   001568  C04A  F00C         	movff	_res_2+1,___xxtofl@val+1
  1094   00156C  6A0D               	clrf	(___xxtofl@val+2)^0,c
  1095   00156E  6A0E               	clrf	(___xxtofl@val+3)^0,c
  1096   001570  0E00               	movlw	0
  1097   001572  EC35  F00C         	call	___xxtofl
  1098   001576  C00B  F019         	movff	?___xxtofl,___flmul@b
  1099   00157A  C00C  F01A         	movff	?___xxtofl+1,___flmul@b+1
  1100   00157E  C00D  F01B         	movff	?___xxtofl+2,___flmul@b+2
  1101   001582  C00E  F01C         	movff	?___xxtofl+3,___flmul@b+3
  1102   001586  EC18  F008         	call	___flmul	;wreg free
  1103   00158A  C019  F032         	movff	?___flmul,___fltol@f1
  1104   00158E  C01A  F033         	movff	?___flmul+1,___fltol@f1+1
  1105   001592  C01B  F034         	movff	?___flmul+2,___fltol@f1+2
  1106   001596  C01C  F035         	movff	?___flmul+3,___fltol@f1+3
  1107   00159A  EC20  F00E         	call	___fltol	;wreg free
  1108   00159E  C032  F038         	movff	?___fltol,_lm35_res_2_Celsius
  1109   0015A2  C033  F039         	movff	?___fltol+1,_lm35_res_2_Celsius+1
  1110   0015A6                     
  1111                           ;application.c: 95:         lm35_res_1_Celsius /= 10;
  1112   0015A6  C03A  F00B         	movff	_lm35_res_1_Celsius,___lwdiv@dividend
  1113   0015AA  C03B  F00C         	movff	_lm35_res_1_Celsius+1,___lwdiv@dividend+1
  1114   0015AE  0E00               	movlw	0
  1115   0015B0  6E0E               	movwf	(___lwdiv@divisor+1)^0,c
  1116   0015B2  0E0A               	movlw	10
  1117   0015B4  6E0D               	movwf	___lwdiv@divisor^0,c
  1118   0015B6  EC34  F012         	call	___lwdiv	;wreg free
  1119   0015BA  C00B  F03A         	movff	?___lwdiv,_lm35_res_1_Celsius
  1120   0015BE  C00C  F03B         	movff	?___lwdiv+1,_lm35_res_1_Celsius+1
  1121   0015C2                     
  1122                           ;application.c: 96:         lm35_res_2_Celsius /= 10;
  1123   0015C2  C038  F00B         	movff	_lm35_res_2_Celsius,___lwdiv@dividend
  1124   0015C6  C039  F00C         	movff	_lm35_res_2_Celsius+1,___lwdiv@dividend+1
  1125   0015CA  0E00               	movlw	0
  1126   0015CC  6E0E               	movwf	(___lwdiv@divisor+1)^0,c
  1127   0015CE  0E0A               	movlw	10
  1128   0015D0  6E0D               	movwf	___lwdiv@divisor^0,c
  1129   0015D2  EC34  F012         	call	___lwdiv	;wreg free
  1130   0015D6  C00B  F038         	movff	?___lwdiv,_lm35_res_2_Celsius
  1131   0015DA  C00C  F039         	movff	?___lwdiv+1,_lm35_res_2_Celsius+1
  1132   0015DE                     
  1133                           ;application.c: 98:         ret = convert_short_to_string(lm35_res_1_Celsius, adc_res_1_
      +                          txt);
  1134   0015DE  C03A  F0E2         	movff	_lm35_res_1_Celsius,convert_short_to_string@value
  1135   0015E2  C03B  F0E3         	movff	_lm35_res_1_Celsius+1,convert_short_to_string@value+1
  1136   0015E6  0EB1               	movlw	low _adc_res_1_txt
  1137   0015E8  0100               	movlb	0	; () banked
  1138   0015EA  6FE4               	movwf	convert_short_to_string@str& (0+255),b
  1139   0015EC  EC9A  F011         	call	_convert_short_to_string	;wreg free
  1140   0015F0  0100               	movlb	0	; () banked
  1141   0015F2  6FED               	movwf	_ret& (0+255),b
  1142   0015F4                     
  1143                           ; BSR set to: 0
  1144                           ;application.c: 99:         ret = convert_short_to_string(lm35_res_2_Celsius, adc_res_2_
      +                          txt);
  1145   0015F4  C038  F0E2         	movff	_lm35_res_2_Celsius,convert_short_to_string@value
  1146   0015F8  C039  F0E3         	movff	_lm35_res_2_Celsius+1,convert_short_to_string@value+1
  1147   0015FC  0EAB               	movlw	low _adc_res_2_txt
  1148   0015FE  6FE4               	movwf	convert_short_to_string@str& (0+255),b
  1149   001600  EC9A  F011         	call	_convert_short_to_string	;wreg free
  1150   001604  0100               	movlb	0	; () banked
  1151   001606  6FED               	movwf	_ret& (0+255),b
  1152   001608                     
  1153                           ; BSR set to: 0
  1154                           ;application.c: 101:         ret = lcd_4bit_send_string_pos(&lcd_1,2, 8, adc_res_1_txt);
  1155   001608  0EDC               	movlw	low _lcd_1
  1156   00160A  6E1D               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1157   00160C  0E02               	movlw	2
  1158   00160E  6E1E               	movwf	lcd_4bit_send_string_pos@row^0,c
  1159   001610  0E08               	movlw	8
  1160   001612  6E1F               	movwf	lcd_4bit_send_string_pos@coulmn^0,c
  1161   001614  0EB1               	movlw	low _adc_res_1_txt
  1162   001616  6E20               	movwf	lcd_4bit_send_string_pos@str^0,c
  1163   001618  6A21               	clrf	(lcd_4bit_send_string_pos@str+1)^0,c
  1164   00161A  EC46  F011         	call	_lcd_4bit_send_string_pos	;wreg free
  1165   00161E  0100               	movlb	0	; () banked
  1166   001620  6FED               	movwf	_ret& (0+255),b
  1167   001622                     
  1168                           ; BSR set to: 0
  1169                           ;application.c: 102:         ret = lcd_4bit_send_string_pos(&lcd_1,3, 8, adc_res_2_txt);
  1170   001622  0EDC               	movlw	low _lcd_1
  1171   001624  6E1D               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1172   001626  0E03               	movlw	3
  1173   001628  6E1E               	movwf	lcd_4bit_send_string_pos@row^0,c
  1174   00162A  0E08               	movlw	8
  1175   00162C  6E1F               	movwf	lcd_4bit_send_string_pos@coulmn^0,c
  1176   00162E  0EAB               	movlw	low _adc_res_2_txt
  1177   001630  6E20               	movwf	lcd_4bit_send_string_pos@str^0,c
  1178   001632  6A21               	clrf	(lcd_4bit_send_string_pos@str+1)^0,c
  1179   001634  EC46  F011         	call	_lcd_4bit_send_string_pos	;wreg free
  1180   001638  0100               	movlb	0	; () banked
  1181   00163A  6FED               	movwf	_ret& (0+255),b
  1182   00163C                     
  1183                           ; BSR set to: 0
  1184                           ;application.c: 104:         if (lm35_res_1_Celsius > 20 ){
  1185   00163C  503B               	movf	(_lm35_res_1_Celsius+1)^0,w,c
  1186   00163E  E109               	bnz	u5770
  1187   001640  0E15               	movlw	21
  1188   001642  5C3A               	subwf	_lm35_res_1_Celsius^0,w,c
  1189   001644  A0D8               	btfss	status,0,c
  1190   001646  EF27  F00B         	goto	u5771
  1191   00164A  EF29  F00B         	goto	u5770
  1192   00164E                     u5771:
  1193   00164E  EF31  F00B         	goto	l5856
  1194   001652                     u5770:
  1195   001652                     
  1196                           ; BSR set to: 0
  1197                           ;application.c: 105:             ret = dc_motor_move_right(&motor_1);
  1198   001652  0E53               	movlw	low _motor_1
  1199   001654  6E13               	movwf	dc_motor_move_right@_dc_motor^0,c
  1200   001656  EC3A  F014         	call	_dc_motor_move_right	;wreg free
  1201   00165A  0100               	movlb	0	; () banked
  1202   00165C  6FED               	movwf	_ret& (0+255),b
  1203                           
  1204                           ;application.c: 106:         }
  1205   00165E  EF37  F00B         	goto	l5858
  1206   001662                     l5856:
  1207                           
  1208                           ; BSR set to: 0
  1209                           ;application.c: 108:             ret = dc_motor_stop(&motor_1);
  1210   001662  0E53               	movlw	low _motor_1
  1211   001664  6E13               	movwf	dc_motor_stop@_dc_motor^0,c
  1212   001666  EC1E  F014         	call	_dc_motor_stop	;wreg free
  1213   00166A  0100               	movlb	0	; () banked
  1214   00166C  6FED               	movwf	_ret& (0+255),b
  1215   00166E                     l5858:
  1216                           
  1217                           ; BSR set to: 0
  1218                           ;application.c: 110:         if (lm35_res_2_Celsius > 25 ){
  1219   00166E  5039               	movf	(_lm35_res_2_Celsius+1)^0,w,c
  1220   001670  E109               	bnz	u5780
  1221   001672  0E1A               	movlw	26
  1222   001674  5C38               	subwf	_lm35_res_2_Celsius^0,w,c
  1223   001676  A0D8               	btfss	status,0,c
  1224   001678  EF40  F00B         	goto	u5781
  1225   00167C  EF42  F00B         	goto	u5780
  1226   001680                     u5781:
  1227   001680  EF4A  F00B         	goto	l5862
  1228   001684                     u5780:
  1229   001684                     
  1230                           ; BSR set to: 0
  1231                           ;application.c: 111:             ret = dc_motor_move_left(&motor_2);
  1232   001684  0E51               	movlw	low _motor_2
  1233   001686  6E13               	movwf	dc_motor_move_left@_dc_motor^0,c
  1234   001688  EC56  F014         	call	_dc_motor_move_left	;wreg free
  1235   00168C  0100               	movlb	0	; () banked
  1236   00168E  6FED               	movwf	_ret& (0+255),b
  1237                           
  1238                           ;application.c: 112:         }
  1239   001690  EF5F  F00A         	goto	l5830
  1240   001694                     l5862:
  1241                           
  1242                           ; BSR set to: 0
  1243                           ;application.c: 114:             ret = dc_motor_stop(&motor_2);
  1244   001694  0E51               	movlw	low _motor_2
  1245   001696  6E13               	movwf	dc_motor_stop@_dc_motor^0,c
  1246   001698  EC1E  F014         	call	_dc_motor_stop	;wreg free
  1247   00169C  0100               	movlb	0	; () banked
  1248   00169E  6FED               	movwf	_ret& (0+255),b
  1249   0016A0  EF5F  F00A         	goto	l5830
  1250   0016A4  EF67  F001         	goto	start
  1251   0016A8                     __end_of_main:
  1252                           	callstack 0
  1253                           
  1254 ;; *************** function _lcd_4bit_send_string_pos *****************
  1255 ;; Defined at:
  1256 ;;		line 163 in file "ECU_Layer/chr_lcd/ecu_chr_lcd.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;  lcd             1   28[COMRAM] PTR const struct .
  1259 ;;		 -> lcd_1(6), 
  1260 ;;  row             1   29[COMRAM] unsigned char 
  1261 ;;  coulmn          1   30[COMRAM] unsigned char 
  1262 ;;  str             2   31[COMRAM] PTR unsigned char 
  1263 ;;		 -> adc_res_2_txt(6), adc_res_1_txt(6), STR_6(8), STR_5(8), 
  1264 ;;		 -> STR_4(10), 
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;  ret             1   33[COMRAM] unsigned char 
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  1    wreg      unsigned char 
  1269 ;; Registers used:
  1270 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1276 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1277 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1279 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1280 ;;Total ram usage:        6 bytes
  1281 ;; Hardware stack levels used: 1
  1282 ;; Hardware stack levels required when called: 8
  1283 ;; This function calls:
  1284 ;;		_lcd_4bit_send_char_data
  1285 ;;		_lcd_4bit_set_cursor
  1286 ;; This function is called by:
  1287 ;;		_main
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           	psect	text1
  1292   00228C                     __ptext1:
  1293                           	callstack 0
  1294   00228C                     _lcd_4bit_send_string_pos:
  1295                           	callstack 22
  1296   00228C                     
  1297                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 166:     if (((void*)0) == lcd || ((void*)0) == str)
  1298   00228C  501D               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
  1299   00228E  B4D8               	btfsc	status,2,c
  1300   002290  EF4C  F011         	goto	u3461
  1301   002294  EF4E  F011         	goto	u3460
  1302   002298                     u3461:
  1303   002298  EF57  F011         	goto	l4264
  1304   00229C                     u3460:
  1305   00229C  5020               	movf	lcd_4bit_send_string_pos@str^0,w,c
  1306   00229E  1021               	iorwf	(lcd_4bit_send_string_pos@str+1)^0,w,c
  1307   0022A0  A4D8               	btfss	status,2,c
  1308   0022A2  EF55  F011         	goto	u3471
  1309   0022A6  EF57  F011         	goto	u3470
  1310   0022AA                     u3471:
  1311   0022AA  EF5B  F011         	goto	l4266
  1312   0022AE                     u3470:
  1313   0022AE                     l4264:
  1314                           
  1315                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 167:     {;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 168:      
      +                             ret = (Std_ReturnType)0x00;
  1316   0022AE  0E00               	movlw	0
  1317   0022B0  6E22               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1318                           
  1319                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 169:     }
  1320   0022B2  EF98  F011         	goto	l4274
  1321   0022B6                     l4266:
  1322                           
  1323                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 171:     {;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 172:      
      +                             ret = lcd_4bit_set_cursor(lcd, row, coulmn);
  1324   0022B6  C01D  F019         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_cursor@lcd
  1325   0022BA  C01E  F01A         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor@row
  1326   0022BE  C01F  F01B         	movff	lcd_4bit_send_string_pos@coulmn,lcd_4bit_set_cursor@coulmn
  1327   0022C2  ECEA  F011         	call	_lcd_4bit_set_cursor	;wreg free
  1328   0022C6  6E22               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1329                           
  1330                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 173:         while (*str)
  1331   0022C8  EF7F  F011         	goto	l4272
  1332   0022CC                     l4268:
  1333                           
  1334                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 174:         {;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 175:  
      +                                     ret = lcd_4bit_send_char_data(lcd, *str++);
  1335   0022CC  C01D  F016         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_char_data@lcd
  1336   0022D0  C020  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  1337   0022D4  C021  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  1338   0022D8  0E00               	movlw	low (__smallconst shr (0+16))
  1339   0022DA  6EF8               	movwf	tblptru,c
  1340   0022DC  0E0F               	movlw	(high __ramtop+-1)
  1341   0022DE  64F7               	cpfsgt	tblptrh,c
  1342   0022E0  D003               	bra	u3487
  1343   0022E2  0008               	tblrd		*
  1344   0022E4  50F5               	movf	tablat,w,c
  1345   0022E6  D005               	bra	u3480
  1346   0022E8                     u3487:
  1347   0022E8  CFF6 FFE9          	movff	tblptrl,fsr0l
  1348   0022EC  CFF7 FFEA          	movff	tblptrh,fsr0h
  1349   0022F0  50EF               	movf	indf0,w,c
  1350   0022F2                     u3480:
  1351   0022F2  6E17               	movwf	lcd_4bit_send_char_data@data^0,c
  1352   0022F4  EC05  F013         	call	_lcd_4bit_send_char_data	;wreg free
  1353   0022F8  6E22               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1354   0022FA  4A20               	infsnz	lcd_4bit_send_string_pos@str^0,f,c
  1355   0022FC  2A21               	incf	(lcd_4bit_send_string_pos@str+1)^0,f,c
  1356   0022FE                     l4272:
  1357                           
  1358                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 173:         while (*str)
  1359   0022FE  C020  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  1360   002302  C021  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  1361   002306  0E00               	movlw	low (__smallconst shr (0+16))
  1362   002308  6EF8               	movwf	tblptru,c
  1363   00230A  0E0F               	movlw	(high __ramtop+-1)
  1364   00230C  64F7               	cpfsgt	tblptrh,c
  1365   00230E  D003               	bra	u3497
  1366   002310  0008               	tblrd		*
  1367   002312  50F5               	movf	tablat,w,c
  1368   002314  D005               	bra	u3490
  1369   002316                     u3497:
  1370   002316  CFF6 FFE9          	movff	tblptrl,fsr0l
  1371   00231A  CFF7 FFEA          	movff	tblptrh,fsr0h
  1372   00231E  50EF               	movf	indf0,w,c
  1373   002320                     u3490:
  1374   002320  0900               	iorlw	0
  1375   002322  A4D8               	btfss	status,2,c
  1376   002324  EF96  F011         	goto	u3501
  1377   002328  EF98  F011         	goto	u3500
  1378   00232C                     u3501:
  1379   00232C  EF66  F011         	goto	l4268
  1380   002330                     u3500:
  1381   002330                     l4274:
  1382                           
  1383                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 178:     return ret;
  1384   002330  5022               	movf	lcd_4bit_send_string_pos@ret^0,w,c
  1385   002332  0012               	return		;funcret
  1386   002334                     __end_of_lcd_4bit_send_string_pos:
  1387                           	callstack 0
  1388                           
  1389 ;; *************** function _lcd_4bit_set_cursor *****************
  1390 ;; Defined at:
  1391 ;;		line 580 in file "ECU_Layer/chr_lcd/ecu_chr_lcd.c"
  1392 ;; Parameters:    Size  Location     Type
  1393 ;;  lcd             1   24[COMRAM] PTR const struct .
  1394 ;;		 -> lcd_1(6), 
  1395 ;;  row             1   25[COMRAM] unsigned char 
  1396 ;;  coulmn          1   26[COMRAM] unsigned char 
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;  ret             1   27[COMRAM] unsigned char 
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  1    wreg      unsigned char 
  1401 ;; Registers used:
  1402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1408 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1409 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1411 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1412 ;;Total ram usage:        4 bytes
  1413 ;; Hardware stack levels used: 1
  1414 ;; Hardware stack levels required when called: 7
  1415 ;; This function calls:
  1416 ;;		_lcd_4bit_send_command
  1417 ;; This function is called by:
  1418 ;;		_lcd_4bit_send_string_pos
  1419 ;;		_lcd_4bit_send_char_data_pos
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           	psect	text2
  1424   0023D4                     __ptext2:
  1425                           	callstack 0
  1426   0023D4                     _lcd_4bit_set_cursor:
  1427                           	callstack 22
  1428   0023D4                     
  1429                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 582:     ret = (Std_ReturnType)0x01;
  1430   0023D4  0E01               	movlw	1
  1431   0023D6  6E1C               	movwf	lcd_4bit_set_cursor@ret^0,c
  1432                           
  1433                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 583:     if (lcd == ((void*)0))
  1434   0023D8  5019               	movf	lcd_4bit_set_cursor@lcd^0,w,c
  1435   0023DA  A4D8               	btfss	status,2,c
  1436   0023DC  EFF2  F011         	goto	u3331
  1437   0023E0  EFF4  F011         	goto	u3330
  1438   0023E4                     u3331:
  1439   0023E4  EFF8  F011         	goto	l4100
  1440   0023E8                     u3330:
  1441   0023E8                     
  1442                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 584:     {;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 585:      
      +                             ret = (Std_ReturnType)0x00;
  1443   0023E8  0E00               	movlw	0
  1444   0023EA  6E1C               	movwf	lcd_4bit_set_cursor@ret^0,c
  1445                           
  1446                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 586:     }
  1447   0023EC  EF32  F012         	goto	l4114
  1448   0023F0                     l4100:
  1449                           
  1450                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 588:     {;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 589:      
      +                             coulmn--;
  1451   0023F0  061B               	decf	lcd_4bit_set_cursor@coulmn^0,f,c
  1452                           
  1453                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 590:         switch(row)
  1454   0023F2  EF1F  F012         	goto	l4112
  1455   0023F6                     l4102:
  1456   0023F6  C019  F016         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1457   0023FA  501B               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  1458   0023FC  0F80               	addlw	128
  1459   0023FE  6E17               	movwf	lcd_4bit_send_command@command^0,c
  1460   002400  EC33  F013         	call	_lcd_4bit_send_command	;wreg free
  1461   002404  EF32  F012         	goto	l4114
  1462   002408                     l4104:
  1463   002408  C019  F016         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1464   00240C  501B               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  1465   00240E  0FC0               	addlw	192
  1466   002410  6E17               	movwf	lcd_4bit_send_command@command^0,c
  1467   002412  EC33  F013         	call	_lcd_4bit_send_command	;wreg free
  1468   002416  EF32  F012         	goto	l4114
  1469   00241A                     l4106:
  1470   00241A  C019  F016         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1471   00241E  501B               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  1472   002420  0F94               	addlw	148
  1473   002422  6E17               	movwf	lcd_4bit_send_command@command^0,c
  1474   002424  EC33  F013         	call	_lcd_4bit_send_command	;wreg free
  1475   002428  EF32  F012         	goto	l4114
  1476   00242C                     l4108:
  1477   00242C  C019  F016         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1478   002430  501B               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  1479   002432  0FD4               	addlw	212
  1480   002434  6E17               	movwf	lcd_4bit_send_command@command^0,c
  1481   002436  EC33  F013         	call	_lcd_4bit_send_command	;wreg free
  1482   00243A  EF32  F012         	goto	l4114
  1483   00243E                     l4112:
  1484   00243E  501A               	movf	lcd_4bit_set_cursor@row^0,w,c
  1485                           
  1486                           ; Switch size 1, requested type "simple"
  1487                           ; Number of cases is 4, Range of values is 1 to 4
  1488                           ; switch strategies available:
  1489                           ; Name         Instructions Cycles
  1490                           ; simple_byte           13     7 (average)
  1491                           ;	Chosen strategy is simple_byte
  1492   002440  0A01               	xorlw	1	; case 1
  1493   002442  B4D8               	btfsc	status,2,c
  1494   002444  EFFB  F011         	goto	l4102
  1495   002448  0A03               	xorlw	3	; case 2
  1496   00244A  B4D8               	btfsc	status,2,c
  1497   00244C  EF04  F012         	goto	l4104
  1498   002450  0A01               	xorlw	1	; case 3
  1499   002452  B4D8               	btfsc	status,2,c
  1500   002454  EF0D  F012         	goto	l4106
  1501   002458  0A07               	xorlw	7	; case 4
  1502   00245A  B4D8               	btfsc	status,2,c
  1503   00245C  EF16  F012         	goto	l4108
  1504   002460  EF32  F012         	goto	l4114
  1505   002464                     l4114:
  1506                           
  1507                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 599:     return ret;
  1508   002464  501C               	movf	lcd_4bit_set_cursor@ret^0,w,c
  1509   002466  0012               	return		;funcret
  1510   002468                     __end_of_lcd_4bit_set_cursor:
  1511                           	callstack 0
  1512                           
  1513 ;; *************** function _lcd_4bit_send_char_data *****************
  1514 ;; Defined at:
  1515 ;;		line 88 in file "ECU_Layer/chr_lcd/ecu_chr_lcd.c"
  1516 ;; Parameters:    Size  Location     Type
  1517 ;;  lcd             1   21[COMRAM] PTR const struct .
  1518 ;;		 -> lcd_1(6), 
  1519 ;;  data            1   22[COMRAM] unsigned char 
  1520 ;; Auto vars:     Size  Location     Type
  1521 ;;  ret             1   23[COMRAM] unsigned char 
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  1    wreg      unsigned char 
  1524 ;; Registers used:
  1525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1531 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1532 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1534 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1535 ;;Total ram usage:        3 bytes
  1536 ;; Hardware stack levels used: 1
  1537 ;; Hardware stack levels required when called: 6
  1538 ;; This function calls:
  1539 ;;		_gpio_pin_write_logic
  1540 ;;		_lcd_send_4bits
  1541 ;;		_lcd_send_4bits_enable_signal
  1542 ;; This function is called by:
  1543 ;;		_lcd_4bit_send_string_pos
  1544 ;;		_lcd_4bit_send_char_data_pos
  1545 ;;		_lcd_4bit_send_string
  1546 ;;		_lcd_4bit_send_custom_char
  1547 ;; This function uses a non-reentrant model
  1548 ;;
  1549                           
  1550                           	psect	text3
  1551   00260A                     __ptext3:
  1552                           	callstack 0
  1553   00260A                     _lcd_4bit_send_char_data:
  1554                           	callstack 23
  1555   00260A                     
  1556                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 90:     if (((void*)0) == lcd)
  1557   00260A  5016               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  1558   00260C  A4D8               	btfss	status,2,c
  1559   00260E  EF0B  F013         	goto	u3321
  1560   002612  EF0D  F013         	goto	u3320
  1561   002616                     u3321:
  1562   002616  EF11  F013         	goto	l4090
  1563   00261A                     u3320:
  1564   00261A                     
  1565                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 91:     {;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 92:        
      +                           ret = (Std_ReturnType)0x00;
  1566   00261A  0E00               	movlw	0
  1567   00261C  6E18               	movwf	lcd_4bit_send_char_data@ret^0,c
  1568                           
  1569                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 93:     }
  1570   00261E  EF31  F013         	goto	l4092
  1571   002622                     l4090:
  1572                           
  1573                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 95:     {;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 96:        
      +                           ret = gpio_pin_write_logic(&(lcd->lcd_rs), GPIO_HIGH);
  1574   002622  C016  F00B         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
  1575   002626  0E01               	movlw	1
  1576   002628  6E0C               	movwf	gpio_pin_write_logic@logic^0,c
  1577   00262A  EC98  F00D         	call	_gpio_pin_write_logic	;wreg free
  1578   00262E  6E18               	movwf	lcd_4bit_send_char_data@ret^0,c
  1579                           
  1580                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 98:         ret = lcd_send_4bits(lcd, (data >> 4));
  1581   002630  C016  F013         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1582   002634  3817               	swapf	lcd_4bit_send_char_data@data^0,w,c
  1583   002636  0B0F               	andlw	15
  1584   002638  6E14               	movwf	lcd_send_4bits@_data_command^0,c
  1585   00263A  EC6E  F012         	call	_lcd_send_4bits	;wreg free
  1586   00263E  6E18               	movwf	lcd_4bit_send_char_data@ret^0,c
  1587                           
  1588                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 99:         ret = lcd_send_4bits_enable_signal(lcd);
  1589   002640  C016  F013         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits_enable_signal@lcd
  1590   002644  ECFF  F013         	call	_lcd_send_4bits_enable_signal	;wreg free
  1591   002648  6E18               	movwf	lcd_4bit_send_char_data@ret^0,c
  1592                           
  1593                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 100:         ret = lcd_send_4bits(lcd, data);
  1594   00264A  C016  F013         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1595   00264E  C017  F014         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@_data_command
  1596   002652  EC6E  F012         	call	_lcd_send_4bits	;wreg free
  1597   002656  6E18               	movwf	lcd_4bit_send_char_data@ret^0,c
  1598                           
  1599                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 101:         ret = lcd_send_4bits_enable_signal(lcd);
  1600   002658  C016  F013         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits_enable_signal@lcd
  1601   00265C  ECFF  F013         	call	_lcd_send_4bits_enable_signal	;wreg free
  1602   002660  6E18               	movwf	lcd_4bit_send_char_data@ret^0,c
  1603   002662                     l4092:
  1604                           
  1605                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 103:     return ret;
  1606   002662  5018               	movf	lcd_4bit_send_char_data@ret^0,w,c
  1607   002664  0012               	return		;funcret
  1608   002666                     __end_of_lcd_4bit_send_char_data:
  1609                           	callstack 0
  1610                           
  1611 ;; *************** function _dc_motor_stop *****************
  1612 ;; Defined at:
  1613 ;;		line 82 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;  _dc_motor       1   18[COMRAM] PTR struct .
  1616 ;;		 -> motor_2(2), motor_1(2), 
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;  ret             1   19[COMRAM] unsigned char 
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  1    wreg      unsigned char 
  1621 ;; Registers used:
  1622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1628 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1629 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1631 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1632 ;;Total ram usage:        2 bytes
  1633 ;; Hardware stack levels used: 1
  1634 ;; Hardware stack levels required when called: 5
  1635 ;; This function calls:
  1636 ;;		_gpio_pin_write_logic
  1637 ;; This function is called by:
  1638 ;;		_main
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642                           	psect	text4
  1643   00283C                     __ptext4:
  1644                           	callstack 0
  1645   00283C                     _dc_motor_stop:
  1646                           	callstack 25
  1647   00283C                     
  1648                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 83:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1649   00283C  0E01               	movlw	1
  1650   00283E  6E14               	movwf	dc_motor_stop@ret^0,c
  1651                           
  1652                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 84:     if (_dc_motor == ((void*)0))
  1653   002840  5013               	movf	dc_motor_stop@_dc_motor^0,w,c
  1654   002842  A4D8               	btfss	status,2,c
  1655   002844  EF26  F014         	goto	u3601
  1656   002848  EF28  F014         	goto	u3600
  1657   00284C                     u3601:
  1658   00284C  EF2C  F014         	goto	l4366
  1659   002850                     u3600:
  1660   002850                     
  1661                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 85:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 86:    
      +                               ret = (Std_ReturnType)0x00;
  1662   002850  0E00               	movlw	0
  1663   002852  6E14               	movwf	dc_motor_stop@ret^0,c
  1664                           
  1665                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 87:     }
  1666   002854  EF38  F014         	goto	l4368
  1667   002858                     l4366:
  1668                           
  1669                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 89:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 90:    
      +                               gpio_pin_write_logic(&(_dc_motor->dc_motor[0X00U]), GPIO_LOW);
  1670   002858  C013  F00B         	movff	dc_motor_stop@_dc_motor,gpio_pin_write_logic@_pin_config
  1671   00285C  0E00               	movlw	0
  1672   00285E  6E0C               	movwf	gpio_pin_write_logic@logic^0,c
  1673   002860  EC98  F00D         	call	_gpio_pin_write_logic	;wreg free
  1674                           
  1675                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 91:         gpio_pin_write_logic(&(_dc_motor->dc_mot
      +                          or[0X01U]), GPIO_LOW);
  1676   002864  2813               	incf	dc_motor_stop@_dc_motor^0,w,c
  1677   002866  6E0B               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1678   002868  0E00               	movlw	0
  1679   00286A  6E0C               	movwf	gpio_pin_write_logic@logic^0,c
  1680   00286C  EC98  F00D         	call	_gpio_pin_write_logic	;wreg free
  1681   002870                     l4368:
  1682                           
  1683                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 93:     return ret;
  1684   002870  5014               	movf	dc_motor_stop@ret^0,w,c
  1685   002872  0012               	return		;funcret
  1686   002874                     __end_of_dc_motor_stop:
  1687                           	callstack 0
  1688                           
  1689 ;; *************** function _dc_motor_move_right *****************
  1690 ;; Defined at:
  1691 ;;		line 40 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;  _dc_motor       1   18[COMRAM] PTR struct .
  1694 ;;		 -> motor_1(2), 
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;  ret             1   19[COMRAM] unsigned char 
  1697 ;; Return value:  Size  Location     Type
  1698 ;;                  1    wreg      unsigned char 
  1699 ;; Registers used:
  1700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1701 ;; Tracked objects:
  1702 ;;		On entry : 0/0
  1703 ;;		On exit  : 0/0
  1704 ;;		Unchanged: 0/0
  1705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1706 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1707 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1709 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1710 ;;Total ram usage:        2 bytes
  1711 ;; Hardware stack levels used: 1
  1712 ;; Hardware stack levels required when called: 5
  1713 ;; This function calls:
  1714 ;;		_gpio_pin_write_logic
  1715 ;; This function is called by:
  1716 ;;		_main
  1717 ;; This function uses a non-reentrant model
  1718 ;;
  1719                           
  1720                           	psect	text5
  1721   002874                     __ptext5:
  1722                           	callstack 0
  1723   002874                     _dc_motor_move_right:
  1724                           	callstack 25
  1725   002874                     
  1726                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 41:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1727   002874  0E01               	movlw	1
  1728   002876  6E14               	movwf	dc_motor_move_right@ret^0,c
  1729                           
  1730                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 42:     if (_dc_motor == ((void*)0))
  1731   002878  5013               	movf	dc_motor_move_right@_dc_motor^0,w,c
  1732   00287A  A4D8               	btfss	status,2,c
  1733   00287C  EF42  F014         	goto	u3581
  1734   002880  EF44  F014         	goto	u3580
  1735   002884                     u3581:
  1736   002884  EF48  F014         	goto	l4346
  1737   002888                     u3580:
  1738   002888                     
  1739                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 43:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 44:    
      +                               ret = (Std_ReturnType)0x00;
  1740   002888  0E00               	movlw	0
  1741   00288A  6E14               	movwf	dc_motor_move_right@ret^0,c
  1742                           
  1743                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 45:     }
  1744   00288C  EF54  F014         	goto	l4348
  1745   002890                     l4346:
  1746                           
  1747                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 47:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 48:    
      +                               gpio_pin_write_logic(&(_dc_motor->dc_motor[0X00U]), GPIO_HIGH);
  1748   002890  C013  F00B         	movff	dc_motor_move_right@_dc_motor,gpio_pin_write_logic@_pin_config
  1749   002894  0E01               	movlw	1
  1750   002896  6E0C               	movwf	gpio_pin_write_logic@logic^0,c
  1751   002898  EC98  F00D         	call	_gpio_pin_write_logic	;wreg free
  1752                           
  1753                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 49:         gpio_pin_write_logic(&(_dc_motor->dc_mot
      +                          or[0X01U]), GPIO_LOW);
  1754   00289C  2813               	incf	dc_motor_move_right@_dc_motor^0,w,c
  1755   00289E  6E0B               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1756   0028A0  0E00               	movlw	0
  1757   0028A2  6E0C               	movwf	gpio_pin_write_logic@logic^0,c
  1758   0028A4  EC98  F00D         	call	_gpio_pin_write_logic	;wreg free
  1759   0028A8                     l4348:
  1760                           
  1761                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 51:     return ret;
  1762   0028A8  5014               	movf	dc_motor_move_right@ret^0,w,c
  1763   0028AA  0012               	return		;funcret
  1764   0028AC                     __end_of_dc_motor_move_right:
  1765                           	callstack 0
  1766                           
  1767 ;; *************** function _dc_motor_move_left *****************
  1768 ;; Defined at:
  1769 ;;		line 61 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;  _dc_motor       1   18[COMRAM] PTR struct .
  1772 ;;		 -> motor_2(2), 
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;  ret             1   19[COMRAM] unsigned char 
  1775 ;; Return value:  Size  Location     Type
  1776 ;;                  1    wreg      unsigned char 
  1777 ;; Registers used:
  1778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1779 ;; Tracked objects:
  1780 ;;		On entry : 0/0
  1781 ;;		On exit  : 0/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1784 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1785 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1787 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1788 ;;Total ram usage:        2 bytes
  1789 ;; Hardware stack levels used: 1
  1790 ;; Hardware stack levels required when called: 5
  1791 ;; This function calls:
  1792 ;;		_gpio_pin_write_logic
  1793 ;; This function is called by:
  1794 ;;		_main
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           	psect	text6
  1799   0028AC                     __ptext6:
  1800                           	callstack 0
  1801   0028AC                     _dc_motor_move_left:
  1802                           	callstack 25
  1803   0028AC                     
  1804                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 62:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1805   0028AC  0E01               	movlw	1
  1806   0028AE  6E14               	movwf	dc_motor_move_left@ret^0,c
  1807                           
  1808                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 63:     if (_dc_motor == ((void*)0))
  1809   0028B0  5013               	movf	dc_motor_move_left@_dc_motor^0,w,c
  1810   0028B2  A4D8               	btfss	status,2,c
  1811   0028B4  EF5E  F014         	goto	u3591
  1812   0028B8  EF60  F014         	goto	u3590
  1813   0028BC                     u3591:
  1814   0028BC  EF64  F014         	goto	l4356
  1815   0028C0                     u3590:
  1816   0028C0                     
  1817                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 64:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 65:    
      +                               ret = (Std_ReturnType)0x00;
  1818   0028C0  0E00               	movlw	0
  1819   0028C2  6E14               	movwf	dc_motor_move_left@ret^0,c
  1820                           
  1821                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 66:     }
  1822   0028C4  EF70  F014         	goto	l4358
  1823   0028C8                     l4356:
  1824                           
  1825                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 68:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 69:    
      +                               gpio_pin_write_logic(&(_dc_motor->dc_motor[0X00U]), GPIO_LOW);
  1826   0028C8  C013  F00B         	movff	dc_motor_move_left@_dc_motor,gpio_pin_write_logic@_pin_config
  1827   0028CC  0E00               	movlw	0
  1828   0028CE  6E0C               	movwf	gpio_pin_write_logic@logic^0,c
  1829   0028D0  EC98  F00D         	call	_gpio_pin_write_logic	;wreg free
  1830                           
  1831                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 70:         gpio_pin_write_logic(&(_dc_motor->dc_mot
      +                          or[0X01U]), GPIO_HIGH);
  1832   0028D4  2813               	incf	dc_motor_move_left@_dc_motor^0,w,c
  1833   0028D6  6E0B               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1834   0028D8  0E01               	movlw	1
  1835   0028DA  6E0C               	movwf	gpio_pin_write_logic@logic^0,c
  1836   0028DC  EC98  F00D         	call	_gpio_pin_write_logic	;wreg free
  1837   0028E0                     l4358:
  1838                           
  1839                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 72:     return ret;
  1840   0028E0  5014               	movf	dc_motor_move_left@ret^0,w,c
  1841   0028E2  0012               	return		;funcret
  1842   0028E4                     __end_of_dc_motor_move_left:
  1843                           	callstack 0
  1844                           
  1845 ;; *************** function _convert_short_to_string *****************
  1846 ;; Defined at:
  1847 ;;		line 442 in file "ECU_Layer/chr_lcd/ecu_chr_lcd.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;  value           2    0[BANK0 ] unsigned short 
  1850 ;;  str             1    2[BANK0 ] PTR unsigned char 
  1851 ;;		 -> adc_res_2_txt(6), adc_res_1_txt(6), 
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;  Temp_String     6    3[BANK0 ] unsigned char [6]
  1854 ;;  DataCounter     1   10[BANK0 ] unsigned char 
  1855 ;;  ret             1    9[BANK0 ] unsigned char 
  1856 ;; Return value:  Size  Location     Type
  1857 ;;                  1    wreg      unsigned char 
  1858 ;; Registers used:
  1859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1860 ;; Tracked objects:
  1861 ;;		On entry : 0/0
  1862 ;;		On exit  : 0/0
  1863 ;;		Unchanged: 0/0
  1864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1865 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1866 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1868 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1869 ;;Total ram usage:       11 bytes
  1870 ;; Hardware stack levels used: 1
  1871 ;; Hardware stack levels required when called: 9
  1872 ;; This function calls:
  1873 ;;		_memset
  1874 ;;		_sprintf
  1875 ;; This function is called by:
  1876 ;;		_main
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880                           	psect	text7
  1881   002334                     __ptext7:
  1882                           	callstack 0
  1883   002334                     _convert_short_to_string:
  1884                           	callstack 21
  1885   002334                     
  1886                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 443:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1887   002334  0E01               	movlw	1
  1888   002336  0100               	movlb	0	; () banked
  1889   002338  6FEB               	movwf	convert_short_to_string@ret& (0+255),b
  1890   00233A                     
  1891                           ; BSR set to: 0
  1892                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 444:     uint8 Temp_String[6] = {0};
  1893   00233A  EE20  F0E5         	lfsr	2,convert_short_to_string@Temp_String
  1894   00233E  0E05               	movlw	5
  1895   002340                     u5601:
  1896   002340  6ADE               	clrf	postinc2,c
  1897   002342  06E8               	decf	wreg,f,c
  1898   002344  E2FD               	bc	u5601
  1899   002346                     
  1900                           ; BSR set to: 0
  1901                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 445:     uint8 DataCounter = 0;
  1902   002346  0E00               	movlw	0
  1903   002348  6FEC               	movwf	convert_short_to_string@DataCounter& (0+255),b
  1904   00234A                     
  1905                           ; BSR set to: 0
  1906                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 446:     if (((void*)0) == str)
  1907   00234A  51E4               	movf	convert_short_to_string@str& (0+255),w,b
  1908   00234C  A4D8               	btfss	status,2,c
  1909   00234E  EFAB  F011         	goto	u5611
  1910   002352  EFAD  F011         	goto	u5610
  1911   002356                     u5611:
  1912   002356  EFB1  F011         	goto	l5722
  1913   00235A                     u5610:
  1914   00235A                     
  1915                           ; BSR set to: 0
  1916                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 447:     {;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 448:      
      +                             ret = (Std_ReturnType)0x00;
  1917   00235A  0E00               	movlw	0
  1918   00235C  6FEB               	movwf	convert_short_to_string@ret& (0+255),b
  1919                           
  1920                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 449:     }
  1921   00235E  EFE8  F011         	goto	l5734
  1922   002362                     l5722:
  1923                           
  1924                           ; BSR set to: 0
  1925                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 451:     {;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 452:      
      +                             memset(str, ' ', 5);
  1926   002362  C0E4  F00B         	movff	convert_short_to_string@str,memset@dest
  1927   002366  0E00               	movlw	0
  1928   002368  6E0D               	movwf	(memset@c+1)^0,c
  1929   00236A  0E20               	movlw	32
  1930   00236C  6E0C               	movwf	memset@c^0,c
  1931   00236E  0E00               	movlw	0
  1932   002370  6E0F               	movwf	(memset@n+1)^0,c
  1933   002372  0E05               	movlw	5
  1934   002374  6E0E               	movwf	memset@n^0,c
  1935   002376  ECF7  F014         	call	_memset	;wreg free
  1936   00237A                     
  1937                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 453:         str[5] = '\0';
  1938   00237A  0100               	movlb	0	; () banked
  1939   00237C  51E4               	movf	convert_short_to_string@str& (0+255),w,b
  1940   00237E  6ED9               	movwf	fsr2l,c
  1941   002380  6ADA               	clrf	fsr2h,c
  1942   002382  0E05               	movlw	5
  1943   002384  26D9               	addwf	fsr2l,f,c
  1944   002386  6ADF               	clrf	indf2,c
  1945   002388                     
  1946                           ; BSR set to: 0
  1947                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 454:         sprintf((char *)Temp_String, "%i", value)
      +                          ;
  1948   002388  0EE5               	movlw	low convert_short_to_string@Temp_String
  1949   00238A  6E24               	movwf	sprintf@s^0,c
  1950   00238C  0E2B               	movlw	low STR_1
  1951   00238E  6E25               	movwf	sprintf@fmt^0,c
  1952   002390  C0E2  F026         	movff	convert_short_to_string@value,?_sprintf+2
  1953   002394  C0E3  F027         	movff	convert_short_to_string@value+1,?_sprintf+3
  1954   002398  ECA9  F014         	call	_sprintf	;wreg free
  1955                           
  1956                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 455:         while (Temp_String[DataCounter] != '\0'){
  1957   00239C  EFDB  F011         	goto	l5732
  1958   0023A0                     l5728:
  1959                           
  1960                           ; BSR set to: 0
  1961                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 456:             str[DataCounter] = Temp_String[DataCo
      +                          unter];
  1962   0023A0  51EC               	movf	convert_short_to_string@DataCounter& (0+255),w,b
  1963   0023A2  0FE5               	addlw	low convert_short_to_string@Temp_String
  1964   0023A4  6ED9               	movwf	fsr2l,c
  1965   0023A6  6ADA               	clrf	fsr2h,c
  1966   0023A8  51E4               	movf	convert_short_to_string@str& (0+255),w,b
  1967   0023AA  25EC               	addwf	convert_short_to_string@DataCounter& (0+255),w,b
  1968   0023AC  6EE1               	movwf	fsr1l,c
  1969   0023AE  6AE2               	clrf	fsr1h,c
  1970   0023B0  CFDF FFE7          	movff	indf2,indf1
  1971   0023B4                     
  1972                           ; BSR set to: 0
  1973                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 457:             DataCounter++;
  1974   0023B4  2BEC               	incf	convert_short_to_string@DataCounter& (0+255),f,b
  1975   0023B6                     l5732:
  1976                           
  1977                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 455:         while (Temp_String[DataCounter] != '\0'){
  1978   0023B6  0100               	movlb	0	; () banked
  1979   0023B8  51EC               	movf	convert_short_to_string@DataCounter& (0+255),w,b
  1980   0023BA  0FE5               	addlw	low convert_short_to_string@Temp_String
  1981   0023BC  6ED9               	movwf	fsr2l,c
  1982   0023BE  6ADA               	clrf	fsr2h,c
  1983   0023C0  50DF               	movf	indf2,w,c
  1984   0023C2  A4D8               	btfss	status,2,c
  1985   0023C4  EFE6  F011         	goto	u5621
  1986   0023C8  EFE8  F011         	goto	u5620
  1987   0023CC                     u5621:
  1988   0023CC  EFD0  F011         	goto	l5728
  1989   0023D0                     u5620:
  1990   0023D0                     l5734:
  1991                           
  1992                           ; BSR set to: 0
  1993                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 460:     return ret;
  1994   0023D0  51EB               	movf	convert_short_to_string@ret& (0+255),w,b
  1995   0023D2                     
  1996                           ; BSR set to: 0
  1997   0023D2  0012               	return		;funcret
  1998   0023D4                     __end_of_convert_short_to_string:
  1999                           	callstack 0
  2000                           
  2001 ;; *************** function _sprintf *****************
  2002 ;; Defined at:
  2003 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  2004 ;; Parameters:    Size  Location     Type
  2005 ;;  s               1   35[COMRAM] PTR unsigned char 
  2006 ;;		 -> convert_int_to_string@Temp_String(11), convert_short_to_string@Temp_String(6), convert_byte_to_string@Temp_Strin
      +g(4), 
  2007 ;;  fmt             1   36[COMRAM] PTR const unsigned char 
  2008 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;  f              12   40[COMRAM] struct _IO_FILE
  2011 ;;  ret             2    0        int 
  2012 ;;  ap              1   39[COMRAM] PTR void [1]
  2013 ;;		 -> ?_sprintf(2), 
  2014 ;; Return value:  Size  Location     Type
  2015 ;;                  2   35[COMRAM] int 
  2016 ;; Registers used:
  2017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2018 ;; Tracked objects:
  2019 ;;		On entry : 0/0
  2020 ;;		On exit  : 0/0
  2021 ;;		Unchanged: 0/0
  2022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2023 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2024 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2026 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2027 ;;Total ram usage:       17 bytes
  2028 ;; Hardware stack levels used: 1
  2029 ;; Hardware stack levels required when called: 8
  2030 ;; This function calls:
  2031 ;;		_vfprintf
  2032 ;; This function is called by:
  2033 ;;		_convert_short_to_string
  2034 ;;		_convert_byte_to_string
  2035 ;;		_convert_int_to_string
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           	psect	text8
  2040   002952                     __ptext8:
  2041                           	callstack 0
  2042   002952                     _sprintf:
  2043                           	callstack 21
  2044   002952  0E26               	movlw	low (?_sprintf+2)
  2045   002954  6E28               	movwf	sprintf@ap^0,c
  2046   002956  C024  F029         	movff	sprintf@s,sprintf@f
  2047   00295A  0E00               	movlw	0
  2048   00295C  6E2D               	movwf	(sprintf@f+4)^0,c
  2049   00295E  0E00               	movlw	0
  2050   002960  6E2C               	movwf	(sprintf@f+3)^0,c
  2051   002962  0E00               	movlw	0
  2052   002964  6E34               	movwf	(sprintf@f+11)^0,c
  2053   002966  0E00               	movlw	0
  2054   002968  6E33               	movwf	(sprintf@f+10)^0,c
  2055   00296A  0E29               	movlw	low sprintf@f
  2056   00296C  6E20               	movwf	vfprintf@fp^0,c
  2057   00296E  C025  F021         	movff	sprintf@fmt,vfprintf@fmt
  2058   002972  0E28               	movlw	low sprintf@ap
  2059   002974  6E22               	movwf	vfprintf@ap^0,c
  2060   002976  ECDF  F013         	call	_vfprintf	;wreg free
  2061   00297A  5024               	movf	sprintf@s^0,w,c
  2062   00297C  242C               	addwf	(sprintf@f+3)^0,w,c
  2063   00297E  6ED9               	movwf	fsr2l,c
  2064   002980  6ADA               	clrf	fsr2h,c
  2065   002982  6ADF               	clrf	indf2,c
  2066   002984  0012               	return		;funcret
  2067   002986                     __end_of_sprintf:
  2068                           	callstack 0
  2069                           
  2070 ;; *************** function _vfprintf *****************
  2071 ;; Defined at:
  2072 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;  fp              1   31[COMRAM] PTR struct _IO_FILE
  2075 ;;		 -> sprintf@f(12), 
  2076 ;;  fmt             1   32[COMRAM] PTR const unsigned char 
  2077 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2078 ;;  ap              1   33[COMRAM] PTR PTR void 
  2079 ;;		 -> sprintf@ap(1), 
  2080 ;; Auto vars:     Size  Location     Type
  2081 ;;  cfmt            1   34[COMRAM] PTR unsigned char 
  2082 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2083 ;; Return value:  Size  Location     Type
  2084 ;;                  2   31[COMRAM] int 
  2085 ;; Registers used:
  2086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2087 ;; Tracked objects:
  2088 ;;		On entry : 0/0
  2089 ;;		On exit  : 0/0
  2090 ;;		Unchanged: 0/0
  2091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2092 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2093 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2095 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2096 ;;Total ram usage:        4 bytes
  2097 ;; Hardware stack levels used: 1
  2098 ;; Hardware stack levels required when called: 7
  2099 ;; This function calls:
  2100 ;;		_vfpfcnvrt
  2101 ;; This function is called by:
  2102 ;;		_sprintf
  2103 ;; This function uses a non-reentrant model
  2104 ;;
  2105                           
  2106                           	psect	text9
  2107   0027BE                     __ptext9:
  2108                           	callstack 0
  2109   0027BE                     _vfprintf:
  2110                           	callstack 21
  2111   0027BE                     
  2112                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2113   0027BE  C021  F023         	movff	vfprintf@fmt,vfprintf@cfmt
  2114                           
  2115                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2116   0027C2  EFEB  F013         	goto	l5686
  2117   0027C6                     l5684:
  2118                           
  2119                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2120   0027C6  C020  F015         	movff	vfprintf@fp,vfpfcnvrt@fp
  2121   0027CA  0E23               	movlw	low vfprintf@cfmt
  2122   0027CC  6E16               	movwf	vfpfcnvrt@fmt^0,c
  2123   0027CE  C022  F017         	movff	vfprintf@ap,vfpfcnvrt@ap
  2124   0027D2  EC54  F00B         	call	_vfpfcnvrt	;wreg free
  2125   0027D6                     l5686:
  2126                           
  2127                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2128   0027D6  C023  FFF6         	movff	vfprintf@cfmt,tblptrl
  2129   0027DA                     	if	1	;There is more than 1 active tblptr byte
  2130   0027DA  0E10               	movlw	high __smallconst
  2131   0027DC  6EF7               	movwf	tblptrh,c
  2132   0027DE                     	endif
  2133   0027DE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2134   0027DE  6AF8               	clrf	tblptru,c
  2135   0027E0                     	endif
  2136   0027E0                     	if	0	;tblptru may be non-zero
  2137   0027E0                     	endif
  2138   0027E0  0008               	tblrd		*
  2139   0027E2  50F5               	movf	tablat,w,c
  2140   0027E4  0900               	iorlw	0
  2141   0027E6  A4D8               	btfss	status,2,c
  2142   0027E8  EFF8  F013         	goto	u5581
  2143   0027EC  EFFA  F013         	goto	u5580
  2144   0027F0                     u5581:
  2145   0027F0  EFE3  F013         	goto	l5684
  2146   0027F4                     u5580:
  2147   0027F4                     
  2148                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2149   0027F4  0E00               	movlw	0
  2150   0027F6  6E21               	movwf	(?_vfprintf+1)^0,c
  2151   0027F8  0E00               	movlw	0
  2152   0027FA  6E20               	movwf	?_vfprintf^0,c
  2153   0027FC  0012               	return		;funcret
  2154   0027FE                     __end_of_vfprintf:
  2155                           	callstack 0
  2156                           
  2157 ;; *************** function _vfpfcnvrt *****************
  2158 ;; Defined at:
  2159 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2160 ;; Parameters:    Size  Location     Type
  2161 ;;  fp              1   20[COMRAM] PTR struct _IO_FILE
  2162 ;;		 -> sprintf@f(12), 
  2163 ;;  fmt             1   21[COMRAM] PTR PTR unsigned char 
  2164 ;;		 -> vfprintf@cfmt(1), 
  2165 ;;  ap              1   22[COMRAM] PTR PTR void 
  2166 ;;		 -> sprintf@ap(1), 
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;  convarg         4   26[COMRAM] struct .
  2169 ;;  c               1   30[COMRAM] unsigned char 
  2170 ;;  cp              1   25[COMRAM] PTR unsigned char 
  2171 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2172 ;;  done            1   24[COMRAM] _Bool 
  2173 ;; Return value:  Size  Location     Type
  2174 ;;                  1    wreg      void 
  2175 ;; Registers used:
  2176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2177 ;; Tracked objects:
  2178 ;;		On entry : 0/0
  2179 ;;		On exit  : 0/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2182 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2183 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2184 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2185 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2186 ;;Total ram usage:       11 bytes
  2187 ;; Hardware stack levels used: 1
  2188 ;; Hardware stack levels required when called: 6
  2189 ;; This function calls:
  2190 ;;		___awdiv
  2191 ;;		___awmod
  2192 ;;		_abs
  2193 ;;		_fputc
  2194 ;; This function is called by:
  2195 ;;		_vfprintf
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           	psect	text10
  2200   0016A8                     __ptext10:
  2201                           	callstack 0
  2202   0016A8                     _vfpfcnvrt:
  2203                           	callstack 21
  2204   0016A8                     
  2205                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2206   0016A8  5016               	movf	vfpfcnvrt@fmt^0,w,c
  2207   0016AA  6ED9               	movwf	fsr2l,c
  2208   0016AC  6ADA               	clrf	fsr2h,c
  2209   0016AE  CFDF FFF6          	movff	indf2,tblptrl
  2210   0016B2                     	if	1	;There is more than 1 active tblptr byte
  2211   0016B2  0E10               	movlw	high __smallconst
  2212   0016B4  6EF7               	movwf	tblptrh,c
  2213   0016B6                     	endif
  2214   0016B6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2215   0016B6  6AF8               	clrf	tblptru,c
  2216   0016B8                     	endif
  2217   0016B8                     	if	0	;tblptru may be non-zero
  2218   0016B8                     	endif
  2219   0016B8  0008               	tblrd		*
  2220   0016BA  50F5               	movf	tablat,w,c
  2221   0016BC  0A25               	xorlw	37
  2222   0016BE  A4D8               	btfss	status,2,c
  2223   0016C0  EF64  F00B         	goto	u5481
  2224   0016C4  EF66  F00B         	goto	u5480
  2225   0016C8                     u5481:
  2226   0016C8  EF22  F00C         	goto	l5676
  2227   0016CC                     u5480:
  2228   0016CC                     
  2229                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2230   0016CC  5016               	movf	vfpfcnvrt@fmt^0,w,c
  2231   0016CE  6ED9               	movwf	fsr2l,c
  2232   0016D0  6ADA               	clrf	fsr2h,c
  2233   0016D2  2ADF               	incf	indf2,f,c
  2234   0016D4                     
  2235                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2236   0016D4  0E00               	movlw	0
  2237   0016D6  0100               	movlb	0	; () banked
  2238   0016D8  6F96               	movwf	(_width+1)& (0+255),b
  2239   0016DA  0E00               	movlw	0
  2240   0016DC  6F95               	movwf	_width& (0+255),b
  2241   0016DE  C095  F040         	movff	_width,_flags
  2242   0016E2                     
  2243                           ; BSR set to: 0
  2244                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2245   0016E2  6997               	setf	_prec& (0+255),b
  2246   0016E4  6998               	setf	(_prec+1)& (0+255),b
  2247   0016E6                     
  2248                           ; BSR set to: 0
  2249                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2250   0016E6  5016               	movf	vfpfcnvrt@fmt^0,w,c
  2251   0016E8  6ED9               	movwf	fsr2l,c
  2252   0016EA  6ADA               	clrf	fsr2h,c
  2253   0016EC  50DF               	movf	indf2,w,c
  2254   0016EE  6E1A               	movwf	vfpfcnvrt@cp^0,c
  2255   0016F0                     
  2256                           ; BSR set to: 0
  2257                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2258   0016F0  C01A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2259   0016F4                     	if	1	;There is more than 1 active tblptr byte
  2260   0016F4  0E10               	movlw	high __smallconst
  2261   0016F6  6EF7               	movwf	tblptrh,c
  2262   0016F8                     	endif
  2263   0016F8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2264   0016F8  6AF8               	clrf	tblptru,c
  2265   0016FA                     	endif
  2266   0016FA                     	if	0	;tblptru may be non-zero
  2267   0016FA                     	endif
  2268   0016FA  0008               	tblrd		*
  2269   0016FC  50F5               	movf	tablat,w,c
  2270   0016FE  0A64               	xorlw	100
  2271   001700  B4D8               	btfsc	status,2,c
  2272   001702  EF85  F00B         	goto	u5491
  2273   001706  EF87  F00B         	goto	u5490
  2274   00170A                     u5491:
  2275   00170A  EF96  F00B         	goto	l5646
  2276   00170E                     u5490:
  2277   00170E                     
  2278                           ; BSR set to: 0
  2279   00170E  C01A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2280   001712                     	if	1	;There is more than 1 active tblptr byte
  2281   001712  0E10               	movlw	high __smallconst
  2282   001714  6EF7               	movwf	tblptrh,c
  2283   001716                     	endif
  2284   001716                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2285   001716  6AF8               	clrf	tblptru,c
  2286   001718                     	endif
  2287   001718                     	if	0	;tblptru may be non-zero
  2288   001718                     	endif
  2289   001718  0008               	tblrd		*
  2290   00171A  50F5               	movf	tablat,w,c
  2291   00171C  0A69               	xorlw	105
  2292   00171E  A4D8               	btfss	status,2,c
  2293   001720  EF94  F00B         	goto	u5501
  2294   001724  EF96  F00B         	goto	u5500
  2295   001728                     u5501:
  2296   001728  EF1C  F00C         	goto	l5672
  2297   00172C                     u5500:
  2298   00172C                     l5646:
  2299                           
  2300                           ; BSR set to: 0
  2301                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2302   00172C  5017               	movf	vfpfcnvrt@ap^0,w,c
  2303   00172E  6ED9               	movwf	fsr2l,c
  2304   001730  6ADA               	clrf	fsr2h,c
  2305   001732  0E02               	movlw	2
  2306   001734  26DF               	addwf	indf2,f,c
  2307   001736  5CDF               	subwf	indf2,w,c
  2308   001738  6ED9               	movwf	fsr2l,c
  2309   00173A  6ADA               	clrf	fsr2h,c
  2310   00173C  CFDE F01B          	movff	postinc2,vfpfcnvrt@convarg
  2311   001740  CFDE F01C          	movff	postinc2,vfpfcnvrt@convarg+1
  2312   001744                     
  2313                           ; BSR set to: 0
  2314                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2315   001744  5016               	movf	vfpfcnvrt@fmt^0,w,c
  2316   001746  6ED9               	movwf	fsr2l,c
  2317   001748  6ADA               	clrf	fsr2h,c
  2318   00174A  281A               	incf	vfpfcnvrt@cp^0,w,c
  2319   00174C  6EDF               	movwf	indf2,c
  2320   00174E                     
  2321                           ; BSR set to: 0
  2322                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  2323   00174E  0E20               	movlw	32
  2324   001750  6E1F               	movwf	vfpfcnvrt@c^0,c
  2325                           
  2326                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  2327   001752  BE1C               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2328   001754  EFAE  F00B         	goto	u5511
  2329   001758  EFB1  F00B         	goto	u5510
  2330   00175C                     u5511:
  2331   00175C  0E01               	movlw	1
  2332   00175E  EFB2  F00B         	goto	u5520
  2333   001762                     u5510:
  2334   001762  0E00               	movlw	0
  2335   001764                     u5520:
  2336   001764  6E19               	movwf	vfpfcnvrt@done^0,c
  2337   001766                     l5652:
  2338                           
  2339                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  2340   001766  061F               	decf	vfpfcnvrt@c^0,f,c
  2341   001768  501F               	movf	vfpfcnvrt@c^0,w,c
  2342   00176A  0F60               	addlw	low _dbuf
  2343   00176C  6ED9               	movwf	fsr2l,c
  2344   00176E  6ADA               	clrf	fsr2h,c
  2345   001770  C01B  F00B         	movff	vfpfcnvrt@convarg,___awmod@dividend
  2346   001774  C01C  F00C         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  2347   001778  0E00               	movlw	0
  2348   00177A  6E0E               	movwf	(___awmod@divisor+1)^0,c
  2349   00177C  0E0A               	movlw	10
  2350   00177E  6E0D               	movwf	___awmod@divisor^0,c
  2351   001780  EC43  F010         	call	___awmod	;wreg free
  2352   001784  C00B  F011         	movff	?___awmod,abs@a
  2353   001788  C00C  F012         	movff	?___awmod+1,abs@a+1
  2354   00178C  ECC3  F014         	call	_abs	;wreg free
  2355   001790  5011               	movf	?_abs^0,w,c
  2356   001792  0F30               	addlw	48
  2357   001794  6EDF               	movwf	indf2,c
  2358   001796                     
  2359                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  2360   001796  C01B  F00B         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  2361   00179A  C01C  F00C         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  2362   00179E  0E00               	movlw	0
  2363   0017A0  6E0E               	movwf	(___awdiv@divisor+1)^0,c
  2364   0017A2  0E0A               	movlw	10
  2365   0017A4  6E0D               	movwf	___awdiv@divisor^0,c
  2366   0017A6  EC85  F00F         	call	___awdiv	;wreg free
  2367   0017AA  C00B  F01B         	movff	?___awdiv,vfpfcnvrt@convarg
  2368   0017AE  C00C  F01C         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  2369   0017B2                     
  2370                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  2371   0017B2  501B               	movf	vfpfcnvrt@convarg^0,w,c
  2372   0017B4  101C               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  2373   0017B6  B4D8               	btfsc	status,2,c
  2374   0017B8  EFE0  F00B         	goto	u5531
  2375   0017BC  EFE2  F00B         	goto	u5530
  2376   0017C0                     u5531:
  2377   0017C0  EFEA  F00B         	goto	l5660
  2378   0017C4                     u5530:
  2379   0017C4  501F               	movf	vfpfcnvrt@c^0,w,c
  2380   0017C6  A4D8               	btfss	status,2,c
  2381   0017C8  EFE8  F00B         	goto	u5541
  2382   0017CC  EFEA  F00B         	goto	u5540
  2383   0017D0                     u5541:
  2384   0017D0  EFB3  F00B         	goto	l5652
  2385   0017D4                     u5540:
  2386   0017D4                     l5660:
  2387                           
  2388                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  2389   0017D4  501F               	movf	vfpfcnvrt@c^0,w,c
  2390   0017D6  B4D8               	btfsc	status,2,c
  2391   0017D8  EFF0  F00B         	goto	u5551
  2392   0017DC  EFF2  F00B         	goto	u5550
  2393   0017E0                     u5551:
  2394   0017E0  EF11  F00C         	goto	l5670
  2395   0017E4                     u5550:
  2396   0017E4  5019               	movf	vfpfcnvrt@done^0,w,c
  2397   0017E6  B4D8               	btfsc	status,2,c
  2398   0017E8  EFF8  F00B         	goto	u5561
  2399   0017EC  EFFA  F00B         	goto	u5560
  2400   0017F0                     u5561:
  2401   0017F0  EF11  F00C         	goto	l5670
  2402   0017F4                     u5560:
  2403   0017F4                     
  2404                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  2405   0017F4  061F               	decf	vfpfcnvrt@c^0,f,c
  2406   0017F6  501F               	movf	vfpfcnvrt@c^0,w,c
  2407   0017F8  0F60               	addlw	low _dbuf
  2408   0017FA  6ED9               	movwf	fsr2l,c
  2409   0017FC  6ADA               	clrf	fsr2h,c
  2410   0017FE  0E2D               	movlw	45
  2411   001800  6EDF               	movwf	indf2,c
  2412   001802  EF11  F00C         	goto	l5670
  2413   001806                     l5666:
  2414                           
  2415                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  2416   001806  501F               	movf	vfpfcnvrt@c^0,w,c
  2417   001808  0F60               	addlw	low _dbuf
  2418   00180A  6ED9               	movwf	fsr2l,c
  2419   00180C  6ADA               	clrf	fsr2h,c
  2420   00180E  50DF               	movf	indf2,w,c
  2421   001810  6E18               	movwf	??_vfpfcnvrt^0,c
  2422   001812  5018               	movf	??_vfpfcnvrt^0,w,c
  2423   001814  6E0B               	movwf	fputc@c^0,c
  2424   001816  6A0C               	clrf	(fputc@c+1)^0,c
  2425   001818  C015  F00D         	movff	vfpfcnvrt@fp,fputc@fp
  2426   00181C  ECF1  F010         	call	_fputc	;wreg free
  2427   001820  2A1F               	incf	vfpfcnvrt@c^0,f,c
  2428   001822                     l5670:
  2429                           
  2430                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  2431   001822  0E20               	movlw	32
  2432   001824  181F               	xorwf	vfpfcnvrt@c^0,w,c
  2433   001826  A4D8               	btfss	status,2,c
  2434   001828  EF18  F00C         	goto	u5571
  2435   00182C  EF1A  F00C         	goto	u5570
  2436   001830                     u5571:
  2437   001830  EF03  F00C         	goto	l5666
  2438   001834                     u5570:
  2439   001834  EF34  F00C         	goto	l1698
  2440   001838                     l5672:
  2441                           
  2442                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2443   001838  5016               	movf	vfpfcnvrt@fmt^0,w,c
  2444   00183A  6ED9               	movwf	fsr2l,c
  2445   00183C  6ADA               	clrf	fsr2h,c
  2446   00183E  2ADF               	incf	indf2,f,c
  2447   001840  EF34  F00C         	goto	l1698
  2448   001844                     l5676:
  2449                           
  2450                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2451   001844  5016               	movf	vfpfcnvrt@fmt^0,w,c
  2452   001846  6ED9               	movwf	fsr2l,c
  2453   001848  6ADA               	clrf	fsr2h,c
  2454   00184A  CFDF FFF6          	movff	indf2,tblptrl
  2455   00184E                     	if	1	;There is more than 1 active tblptr byte
  2456   00184E  0E10               	movlw	high __smallconst
  2457   001850  6EF7               	movwf	tblptrh,c
  2458   001852                     	endif
  2459   001852                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2460   001852  6AF8               	clrf	tblptru,c
  2461   001854                     	endif
  2462   001854                     	if	0	;tblptru may be non-zero
  2463   001854                     	endif
  2464   001854  0008               	tblrd		*
  2465   001856  50F5               	movf	tablat,w,c
  2466   001858  6E0B               	movwf	fputc@c^0,c
  2467   00185A  6A0C               	clrf	(fputc@c+1)^0,c
  2468   00185C  C015  F00D         	movff	vfpfcnvrt@fp,fputc@fp
  2469   001860  ECF1  F010         	call	_fputc	;wreg free
  2470   001864  EF1C  F00C         	goto	l5672
  2471   001868                     l1698:
  2472   001868  0012               	return		;funcret
  2473   00186A                     __end_of_vfpfcnvrt:
  2474                           	callstack 0
  2475                           
  2476 ;; *************** function _fputc *****************
  2477 ;; Defined at:
  2478 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;  c               2   10[COMRAM] int 
  2481 ;;  fp              1   12[COMRAM] PTR struct _IO_FILE
  2482 ;;		 -> sprintf@f(12), 
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;		None
  2485 ;; Return value:  Size  Location     Type
  2486 ;;                  2   10[COMRAM] int 
  2487 ;; Registers used:
  2488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2494 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2496 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2497 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2498 ;;Total ram usage:        8 bytes
  2499 ;; Hardware stack levels used: 1
  2500 ;; Hardware stack levels required when called: 5
  2501 ;; This function calls:
  2502 ;;		_putch
  2503 ;; This function is called by:
  2504 ;;		_vfpfcnvrt
  2505 ;; This function uses a non-reentrant model
  2506 ;;
  2507                           
  2508                           	psect	text11
  2509   0021E2                     __ptext11:
  2510                           	callstack 0
  2511   0021E2                     _fputc:
  2512                           	callstack 21
  2513   0021E2  500D               	movf	fputc@fp^0,w,c
  2514   0021E4  B4D8               	btfsc	status,2,c
  2515   0021E6  EFF7  F010         	goto	u5431
  2516   0021EA  EFF9  F010         	goto	u5430
  2517   0021EE                     u5431:
  2518   0021EE  EF01  F011         	goto	l5618
  2519   0021F2                     u5430:
  2520   0021F2  500D               	movf	fputc@fp^0,w,c
  2521   0021F4  A4D8               	btfss	status,2,c
  2522   0021F6  EFFF  F010         	goto	u5441
  2523   0021FA  EF01  F011         	goto	u5440
  2524   0021FE                     u5441:
  2525   0021FE  EF06  F011         	goto	l5620
  2526   002202                     u5440:
  2527   002202                     l5618:
  2528   002202  500B               	movf	fputc@c^0,w,c
  2529   002204  ECA3  F015         	call	_putch
  2530   002208  EF45  F011         	goto	l1723
  2531   00220C                     l5620:
  2532   00220C  500D               	movf	fputc@fp^0,w,c
  2533   00220E  6ED9               	movwf	fsr2l,c
  2534   002210  6ADA               	clrf	fsr2h,c
  2535   002212  0E0A               	movlw	10
  2536   002214  26D9               	addwf	fsr2l,f,c
  2537   002216  50DE               	movf	postinc2,w,c
  2538   002218  10DE               	iorwf	postinc2,w,c
  2539   00221A  B4D8               	btfsc	status,2,c
  2540   00221C  EF12  F011         	goto	u5451
  2541   002220  EF14  F011         	goto	u5450
  2542   002224                     u5451:
  2543   002224  EF2D  F011         	goto	l5624
  2544   002228                     u5450:
  2545   002228  500D               	movf	fputc@fp^0,w,c
  2546   00222A  6ED9               	movwf	fsr2l,c
  2547   00222C  6ADA               	clrf	fsr2h,c
  2548   00222E  0E0A               	movlw	10
  2549   002230  26D9               	addwf	fsr2l,f,c
  2550   002232  500D               	movf	fputc@fp^0,w,c
  2551   002234  6EE1               	movwf	fsr1l,c
  2552   002236  6AE2               	clrf	fsr1h,c
  2553   002238  0E03               	movlw	3
  2554   00223A  26E1               	addwf	fsr1l,f,c
  2555   00223C  50DE               	movf	postinc2,w,c
  2556   00223E  5CE6               	subwf	postinc1,w,c
  2557   002240  50E6               	movf	postinc1,w,c
  2558   002242  0A80               	xorlw	128
  2559   002244  6E12               	movwf	(??_fputc+4)^0,c
  2560   002246  50DE               	movf	postinc2,w,c
  2561   002248  0A80               	xorlw	128
  2562   00224A  5812               	subwfb	(??_fputc+4)^0,w,c
  2563   00224C  B0D8               	btfsc	status,0,c
  2564   00224E  EF2B  F011         	goto	u5461
  2565   002252  EF2D  F011         	goto	u5460
  2566   002256                     u5461:
  2567   002256  EF45  F011         	goto	l1723
  2568   00225A                     u5460:
  2569   00225A                     l5624:
  2570   00225A  500D               	movf	fputc@fp^0,w,c
  2571   00225C  6ED9               	movwf	fsr2l,c
  2572   00225E  6ADA               	clrf	fsr2h,c
  2573   002260  0E03               	movlw	3
  2574   002262  26D9               	addwf	fsr2l,f,c
  2575   002264  50DF               	movf	indf2,w,c
  2576   002266  6E0E               	movwf	??_fputc^0,c
  2577   002268  500D               	movf	fputc@fp^0,w,c
  2578   00226A  6ED9               	movwf	fsr2l,c
  2579   00226C  6ADA               	clrf	fsr2h,c
  2580   00226E  50DF               	movf	indf2,w,c
  2581   002270  240E               	addwf	??_fputc^0,w,c
  2582   002272  6ED9               	movwf	fsr2l,c
  2583   002274  6ADA               	clrf	fsr2h,c
  2584   002276  C00B  FFDF         	movff	fputc@c,indf2
  2585   00227A  500D               	movf	fputc@fp^0,w,c
  2586   00227C  6ED9               	movwf	fsr2l,c
  2587   00227E  6ADA               	clrf	fsr2h,c
  2588   002280  0E03               	movlw	3
  2589   002282  26D9               	addwf	fsr2l,f,c
  2590   002284  2ADE               	incf	postinc2,f,c
  2591   002286  0E00               	movlw	0
  2592   002288  22DD               	addwfc	postdec2,f,c
  2593   00228A                     l1723:
  2594   00228A  0012               	return		;funcret
  2595   00228C                     __end_of_fputc:
  2596                           	callstack 0
  2597                           
  2598 ;; *************** function _putch *****************
  2599 ;; Defined at:
  2600 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;  c               1    wreg     unsigned char 
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;  c               1    0[COMRAM] unsigned char 
  2605 ;; Return value:  Size  Location     Type
  2606 ;;                  1    wreg      void 
  2607 ;; Registers used:
  2608 ;;		wreg
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2618 ;;Total ram usage:        0 bytes
  2619 ;; Hardware stack levels used: 1
  2620 ;; Hardware stack levels required when called: 4
  2621 ;; This function calls:
  2622 ;;		Nothing
  2623 ;; This function is called by:
  2624 ;;		_fputc
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           	psect	text12
  2629   002B46                     __ptext12:
  2630                           	callstack 0
  2631   002B46                     _putch:
  2632                           	callstack 21
  2633   002B46  0012               	return		;funcret
  2634   002B48                     __end_of_putch:
  2635                           	callstack 0
  2636                           
  2637 ;; *************** function _abs *****************
  2638 ;; Defined at:
  2639 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  2640 ;; Parameters:    Size  Location     Type
  2641 ;;  a               2   16[COMRAM] int 
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;		None
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  2   16[COMRAM] int 
  2646 ;; Registers used:
  2647 ;;		wreg, status,2, status,0
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2653 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2655 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2656 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2657 ;;Total ram usage:        4 bytes
  2658 ;; Hardware stack levels used: 1
  2659 ;; Hardware stack levels required when called: 4
  2660 ;; This function calls:
  2661 ;;		Nothing
  2662 ;; This function is called by:
  2663 ;;		_vfpfcnvrt
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667                           	psect	text13
  2668   002986                     __ptext13:
  2669                           	callstack 0
  2670   002986                     _abs:
  2671                           	callstack 22
  2672   002986  BE12               	btfsc	(abs@a+1)^0,7,c
  2673   002988  EFC8  F014         	goto	u5471
  2674   00298C  EFCA  F014         	goto	u5470
  2675   002990                     u5471:
  2676   002990  EFD0  F014         	goto	l1708
  2677   002994                     u5470:
  2678   002994  C011  F011         	movff	abs@a,?_abs
  2679   002998  C012  F012         	movff	abs@a+1,?_abs+1
  2680   00299C  EFDC  F014         	goto	l1711
  2681   0029A0                     l1708:
  2682   0029A0  C011  F013         	movff	abs@a,??_abs
  2683   0029A4  C012  F014         	movff	abs@a+1,??_abs+1
  2684   0029A8  1E13               	comf	??_abs^0,f,c
  2685   0029AA  1E14               	comf	(??_abs+1)^0,f,c
  2686   0029AC  4A13               	infsnz	??_abs^0,f,c
  2687   0029AE  2A14               	incf	(??_abs+1)^0,f,c
  2688   0029B0  C013  F011         	movff	??_abs,?_abs
  2689   0029B4  C014  F012         	movff	??_abs+1,?_abs+1
  2690   0029B8                     l1711:
  2691   0029B8  0012               	return		;funcret
  2692   0029BA                     __end_of_abs:
  2693                           	callstack 0
  2694                           
  2695 ;; *************** function ___awmod *****************
  2696 ;; Defined at:
  2697 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;  dividend        2   10[COMRAM] int 
  2700 ;;  divisor         2   12[COMRAM] int 
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;  sign            1   15[COMRAM] unsigned char 
  2703 ;;  counter         1   14[COMRAM] unsigned char 
  2704 ;; Return value:  Size  Location     Type
  2705 ;;                  2   10[COMRAM] int 
  2706 ;; Registers used:
  2707 ;;		wreg, status,2, status,0
  2708 ;; Tracked objects:
  2709 ;;		On entry : 0/0
  2710 ;;		On exit  : 0/0
  2711 ;;		Unchanged: 0/0
  2712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2713 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2714 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2716 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2717 ;;Total ram usage:        6 bytes
  2718 ;; Hardware stack levels used: 1
  2719 ;; Hardware stack levels required when called: 4
  2720 ;; This function calls:
  2721 ;;		Nothing
  2722 ;; This function is called by:
  2723 ;;		_vfpfcnvrt
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           
  2727                           	psect	text14
  2728   002086                     __ptext14:
  2729                           	callstack 0
  2730   002086                     ___awmod:
  2731                           	callstack 22
  2732   002086  0E00               	movlw	0
  2733   002088  6E10               	movwf	___awmod@sign^0,c
  2734   00208A  BE0C               	btfsc	(___awmod@dividend+1)^0,7,c
  2735   00208C  EF4C  F010         	goto	u5370
  2736   002090  EF4A  F010         	goto	u5371
  2737   002094                     u5371:
  2738   002094  EF52  F010         	goto	l5586
  2739   002098                     u5370:
  2740   002098  6C0B               	negf	___awmod@dividend^0,c
  2741   00209A  1E0C               	comf	(___awmod@dividend+1)^0,f,c
  2742   00209C  B0D8               	btfsc	status,0,c
  2743   00209E  2A0C               	incf	(___awmod@dividend+1)^0,f,c
  2744   0020A0  0E01               	movlw	1
  2745   0020A2  6E10               	movwf	___awmod@sign^0,c
  2746   0020A4                     l5586:
  2747   0020A4  BE0E               	btfsc	(___awmod@divisor+1)^0,7,c
  2748   0020A6  EF59  F010         	goto	u5380
  2749   0020AA  EF57  F010         	goto	u5381
  2750   0020AE                     u5381:
  2751   0020AE  EF5D  F010         	goto	l5590
  2752   0020B2                     u5380:
  2753   0020B2  6C0D               	negf	___awmod@divisor^0,c
  2754   0020B4  1E0E               	comf	(___awmod@divisor+1)^0,f,c
  2755   0020B6  B0D8               	btfsc	status,0,c
  2756   0020B8  2A0E               	incf	(___awmod@divisor+1)^0,f,c
  2757   0020BA                     l5590:
  2758   0020BA  500D               	movf	___awmod@divisor^0,w,c
  2759   0020BC  100E               	iorwf	(___awmod@divisor+1)^0,w,c
  2760   0020BE  B4D8               	btfsc	status,2,c
  2761   0020C0  EF64  F010         	goto	u5391
  2762   0020C4  EF66  F010         	goto	u5390
  2763   0020C8                     u5391:
  2764   0020C8  EF8A  F010         	goto	l5606
  2765   0020CC                     u5390:
  2766   0020CC  0E01               	movlw	1
  2767   0020CE  6E0F               	movwf	___awmod@counter^0,c
  2768   0020D0  EF6E  F010         	goto	l5596
  2769   0020D4                     l5594:
  2770   0020D4  90D8               	bcf	status,0,c
  2771   0020D6  360D               	rlcf	___awmod@divisor^0,f,c
  2772   0020D8  360E               	rlcf	(___awmod@divisor+1)^0,f,c
  2773   0020DA  2A0F               	incf	___awmod@counter^0,f,c
  2774   0020DC                     l5596:
  2775   0020DC  AE0E               	btfss	(___awmod@divisor+1)^0,7,c
  2776   0020DE  EF73  F010         	goto	u5401
  2777   0020E2  EF75  F010         	goto	u5400
  2778   0020E6                     u5401:
  2779   0020E6  EF6A  F010         	goto	l5594
  2780   0020EA                     u5400:
  2781   0020EA                     l5598:
  2782   0020EA  500D               	movf	___awmod@divisor^0,w,c
  2783   0020EC  5C0B               	subwf	___awmod@dividend^0,w,c
  2784   0020EE  500E               	movf	(___awmod@divisor+1)^0,w,c
  2785   0020F0  580C               	subwfb	(___awmod@dividend+1)^0,w,c
  2786   0020F2  A0D8               	btfss	status,0,c
  2787   0020F4  EF7E  F010         	goto	u5411
  2788   0020F8  EF80  F010         	goto	u5410
  2789   0020FC                     u5411:
  2790   0020FC  EF84  F010         	goto	l5602
  2791   002100                     u5410:
  2792   002100  500D               	movf	___awmod@divisor^0,w,c
  2793   002102  5E0B               	subwf	___awmod@dividend^0,f,c
  2794   002104  500E               	movf	(___awmod@divisor+1)^0,w,c
  2795   002106  5A0C               	subwfb	(___awmod@dividend+1)^0,f,c
  2796   002108                     l5602:
  2797   002108  90D8               	bcf	status,0,c
  2798   00210A  320E               	rrcf	(___awmod@divisor+1)^0,f,c
  2799   00210C  320D               	rrcf	___awmod@divisor^0,f,c
  2800   00210E  2E0F               	decfsz	___awmod@counter^0,f,c
  2801   002110  EF75  F010         	goto	l5598
  2802   002114                     l5606:
  2803   002114  5010               	movf	___awmod@sign^0,w,c
  2804   002116  B4D8               	btfsc	status,2,c
  2805   002118  EF90  F010         	goto	u5421
  2806   00211C  EF92  F010         	goto	u5420
  2807   002120                     u5421:
  2808   002120  EF96  F010         	goto	l5610
  2809   002124                     u5420:
  2810   002124  6C0B               	negf	___awmod@dividend^0,c
  2811   002126  1E0C               	comf	(___awmod@dividend+1)^0,f,c
  2812   002128  B0D8               	btfsc	status,0,c
  2813   00212A  2A0C               	incf	(___awmod@dividend+1)^0,f,c
  2814   00212C                     l5610:
  2815   00212C  C00B  F00B         	movff	___awmod@dividend,?___awmod
  2816   002130  C00C  F00C         	movff	___awmod@dividend+1,?___awmod+1
  2817   002134  0012               	return		;funcret
  2818   002136                     __end_of___awmod:
  2819                           	callstack 0
  2820                           
  2821 ;; *************** function ___awdiv *****************
  2822 ;; Defined at:
  2823 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;  dividend        2   10[COMRAM] int 
  2826 ;;  divisor         2   12[COMRAM] int 
  2827 ;; Auto vars:     Size  Location     Type
  2828 ;;  quotient        2   16[COMRAM] int 
  2829 ;;  sign            1   15[COMRAM] unsigned char 
  2830 ;;  counter         1   14[COMRAM] unsigned char 
  2831 ;; Return value:  Size  Location     Type
  2832 ;;                  2   10[COMRAM] int 
  2833 ;; Registers used:
  2834 ;;		wreg, status,2, status,0
  2835 ;; Tracked objects:
  2836 ;;		On entry : 0/0
  2837 ;;		On exit  : 0/0
  2838 ;;		Unchanged: 0/0
  2839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2840 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2841 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2843 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2844 ;;Total ram usage:        8 bytes
  2845 ;; Hardware stack levels used: 1
  2846 ;; Hardware stack levels required when called: 4
  2847 ;; This function calls:
  2848 ;;		Nothing
  2849 ;; This function is called by:
  2850 ;;		_vfpfcnvrt
  2851 ;; This function uses a non-reentrant model
  2852 ;;
  2853                           
  2854                           	psect	text15
  2855   001F0A                     __ptext15:
  2856                           	callstack 0
  2857   001F0A                     ___awdiv:
  2858                           	callstack 22
  2859   001F0A  0E00               	movlw	0
  2860   001F0C  6E10               	movwf	___awdiv@sign^0,c
  2861   001F0E  BE0E               	btfsc	(___awdiv@divisor+1)^0,7,c
  2862   001F10  EF8E  F00F         	goto	u5310
  2863   001F14  EF8C  F00F         	goto	u5311
  2864   001F18                     u5311:
  2865   001F18  EF94  F00F         	goto	l5542
  2866   001F1C                     u5310:
  2867   001F1C  6C0D               	negf	___awdiv@divisor^0,c
  2868   001F1E  1E0E               	comf	(___awdiv@divisor+1)^0,f,c
  2869   001F20  B0D8               	btfsc	status,0,c
  2870   001F22  2A0E               	incf	(___awdiv@divisor+1)^0,f,c
  2871   001F24  0E01               	movlw	1
  2872   001F26  6E10               	movwf	___awdiv@sign^0,c
  2873   001F28                     l5542:
  2874   001F28  BE0C               	btfsc	(___awdiv@dividend+1)^0,7,c
  2875   001F2A  EF9B  F00F         	goto	u5320
  2876   001F2E  EF99  F00F         	goto	u5321
  2877   001F32                     u5321:
  2878   001F32  EFA1  F00F         	goto	l5548
  2879   001F36                     u5320:
  2880   001F36  6C0B               	negf	___awdiv@dividend^0,c
  2881   001F38  1E0C               	comf	(___awdiv@dividend+1)^0,f,c
  2882   001F3A  B0D8               	btfsc	status,0,c
  2883   001F3C  2A0C               	incf	(___awdiv@dividend+1)^0,f,c
  2884   001F3E  0E01               	movlw	1
  2885   001F40  1A10               	xorwf	___awdiv@sign^0,f,c
  2886   001F42                     l5548:
  2887   001F42  0E00               	movlw	0
  2888   001F44  6E12               	movwf	(___awdiv@quotient+1)^0,c
  2889   001F46  0E00               	movlw	0
  2890   001F48  6E11               	movwf	___awdiv@quotient^0,c
  2891   001F4A  500D               	movf	___awdiv@divisor^0,w,c
  2892   001F4C  100E               	iorwf	(___awdiv@divisor+1)^0,w,c
  2893   001F4E  B4D8               	btfsc	status,2,c
  2894   001F50  EFAC  F00F         	goto	u5331
  2895   001F54  EFAE  F00F         	goto	u5330
  2896   001F58                     u5331:
  2897   001F58  EFD6  F00F         	goto	l5570
  2898   001F5C                     u5330:
  2899   001F5C  0E01               	movlw	1
  2900   001F5E  6E0F               	movwf	___awdiv@counter^0,c
  2901   001F60  EFB6  F00F         	goto	l5556
  2902   001F64                     l5554:
  2903   001F64  90D8               	bcf	status,0,c
  2904   001F66  360D               	rlcf	___awdiv@divisor^0,f,c
  2905   001F68  360E               	rlcf	(___awdiv@divisor+1)^0,f,c
  2906   001F6A  2A0F               	incf	___awdiv@counter^0,f,c
  2907   001F6C                     l5556:
  2908   001F6C  AE0E               	btfss	(___awdiv@divisor+1)^0,7,c
  2909   001F6E  EFBB  F00F         	goto	u5341
  2910   001F72  EFBD  F00F         	goto	u5340
  2911   001F76                     u5341:
  2912   001F76  EFB2  F00F         	goto	l5554
  2913   001F7A                     u5340:
  2914   001F7A                     l5558:
  2915   001F7A  90D8               	bcf	status,0,c
  2916   001F7C  3611               	rlcf	___awdiv@quotient^0,f,c
  2917   001F7E  3612               	rlcf	(___awdiv@quotient+1)^0,f,c
  2918   001F80  500D               	movf	___awdiv@divisor^0,w,c
  2919   001F82  5C0B               	subwf	___awdiv@dividend^0,w,c
  2920   001F84  500E               	movf	(___awdiv@divisor+1)^0,w,c
  2921   001F86  580C               	subwfb	(___awdiv@dividend+1)^0,w,c
  2922   001F88  A0D8               	btfss	status,0,c
  2923   001F8A  EFC9  F00F         	goto	u5351
  2924   001F8E  EFCB  F00F         	goto	u5350
  2925   001F92                     u5351:
  2926   001F92  EFD0  F00F         	goto	l5566
  2927   001F96                     u5350:
  2928   001F96  500D               	movf	___awdiv@divisor^0,w,c
  2929   001F98  5E0B               	subwf	___awdiv@dividend^0,f,c
  2930   001F9A  500E               	movf	(___awdiv@divisor+1)^0,w,c
  2931   001F9C  5A0C               	subwfb	(___awdiv@dividend+1)^0,f,c
  2932   001F9E  8011               	bsf	___awdiv@quotient^0,0,c
  2933   001FA0                     l5566:
  2934   001FA0  90D8               	bcf	status,0,c
  2935   001FA2  320E               	rrcf	(___awdiv@divisor+1)^0,f,c
  2936   001FA4  320D               	rrcf	___awdiv@divisor^0,f,c
  2937   001FA6  2E0F               	decfsz	___awdiv@counter^0,f,c
  2938   001FA8  EFBD  F00F         	goto	l5558
  2939   001FAC                     l5570:
  2940   001FAC  5010               	movf	___awdiv@sign^0,w,c
  2941   001FAE  B4D8               	btfsc	status,2,c
  2942   001FB0  EFDC  F00F         	goto	u5361
  2943   001FB4  EFDE  F00F         	goto	u5360
  2944   001FB8                     u5361:
  2945   001FB8  EFE2  F00F         	goto	l5574
  2946   001FBC                     u5360:
  2947   001FBC  6C11               	negf	___awdiv@quotient^0,c
  2948   001FBE  1E12               	comf	(___awdiv@quotient+1)^0,f,c
  2949   001FC0  B0D8               	btfsc	status,0,c
  2950   001FC2  2A12               	incf	(___awdiv@quotient+1)^0,f,c
  2951   001FC4                     l5574:
  2952   001FC4  C011  F00B         	movff	___awdiv@quotient,?___awdiv
  2953   001FC8  C012  F00C         	movff	___awdiv@quotient+1,?___awdiv+1
  2954   001FCC  0012               	return		;funcret
  2955   001FCE                     __end_of___awdiv:
  2956                           	callstack 0
  2957                           
  2958 ;; *************** function _memset *****************
  2959 ;; Defined at:
  2960 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memset.c"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;  dest            1   10[COMRAM] PTR void 
  2963 ;;		 -> adc_res_2_txt(6), adc_res_1_txt(6), 
  2964 ;;  c               2   11[COMRAM] int 
  2965 ;;  n               2   13[COMRAM] unsigned int 
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;  p               1   15[COMRAM] PTR unsigned char 
  2968 ;;		 -> adc_res_2_txt(6), adc_res_1_txt(6), 
  2969 ;; Return value:  Size  Location     Type
  2970 ;;                  1    wreg      PTR void 
  2971 ;; Registers used:
  2972 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2973 ;; Tracked objects:
  2974 ;;		On entry : 0/0
  2975 ;;		On exit  : 0/0
  2976 ;;		Unchanged: 0/0
  2977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2978 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2979 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2981 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2982 ;;Total ram usage:        6 bytes
  2983 ;; Hardware stack levels used: 1
  2984 ;; Hardware stack levels required when called: 4
  2985 ;; This function calls:
  2986 ;;		Nothing
  2987 ;; This function is called by:
  2988 ;;		_convert_short_to_string
  2989 ;;		_convert_byte_to_string
  2990 ;;		_convert_int_to_string
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994                           	psect	text16
  2995   0029EE                     __ptext16:
  2996                           	callstack 0
  2997   0029EE                     _memset:
  2998                           	callstack 25
  2999   0029EE  C00B  F010         	movff	memset@dest,memset@p
  3000   0029F2  EF01  F015         	goto	l5698
  3001   0029F6                     l5694:
  3002   0029F6  5010               	movf	memset@p^0,w,c
  3003   0029F8  6ED9               	movwf	fsr2l,c
  3004   0029FA  6ADA               	clrf	fsr2h,c
  3005   0029FC  C00C  FFDF         	movff	memset@c,indf2
  3006   002A00  2A10               	incf	memset@p^0,f,c
  3007   002A02                     l5698:
  3008   002A02  060E               	decf	memset@n^0,f,c
  3009   002A04  A0D8               	btfss	status,0,c
  3010   002A06  060F               	decf	(memset@n+1)^0,f,c
  3011   002A08  280E               	incf	memset@n^0,w,c
  3012   002A0A  E106               	bnz	u5591
  3013   002A0C  280F               	incf	(memset@n+1)^0,w,c
  3014   002A0E  A4D8               	btfss	status,2,c
  3015   002A10  EF0C  F015         	goto	u5591
  3016   002A14  EF0E  F015         	goto	u5590
  3017   002A18                     u5591:
  3018   002A18  EFFB  F014         	goto	l5694
  3019   002A1C                     u5590:
  3020   002A1C  0012               	return		;funcret
  3021   002A1E                     __end_of_memset:
  3022                           	callstack 0
  3023                           
  3024 ;; *************** function ___xxtofl *****************
  3025 ;; Defined at:
  3026 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  3027 ;; Parameters:    Size  Location     Type
  3028 ;;  sign            1    wreg     unsigned char 
  3029 ;;  val             4   10[COMRAM] long 
  3030 ;; Auto vars:     Size  Location     Type
  3031 ;;  sign            1   18[COMRAM] unsigned char 
  3032 ;;  arg             4   20[COMRAM] unsigned long 
  3033 ;;  exp             1   19[COMRAM] unsigned char 
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  4   10[COMRAM] unsigned char 
  3036 ;; Registers used:
  3037 ;;		wreg, status,2, status,0
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3043 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3044 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3045 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3046 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3047 ;;Total ram usage:       14 bytes
  3048 ;; Hardware stack levels used: 1
  3049 ;; Hardware stack levels required when called: 4
  3050 ;; This function calls:
  3051 ;;		Nothing
  3052 ;; This function is called by:
  3053 ;;		_main
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           	psect	text17
  3058   00186A                     __ptext17:
  3059                           	callstack 0
  3060   00186A                     ___xxtofl:
  3061                           	callstack 26
  3062                           
  3063                           ;incstack = 0
  3064                           ;___xxtofl@sign stored from wreg
  3065   00186A  6E13               	movwf	___xxtofl@sign^0,c
  3066   00186C  5013               	movf	___xxtofl@sign^0,w,c
  3067   00186E  B4D8               	btfsc	status,2,c
  3068   001870  EF3C  F00C         	goto	u3981
  3069   001874  EF3E  F00C         	goto	u3980
  3070   001878                     u3981:
  3071   001878  EF60  F00C         	goto	l1631
  3072   00187C                     u3980:
  3073   00187C  BE0E               	btfsc	(___xxtofl@val+3)^0,7,c
  3074   00187E  EF45  F00C         	goto	u3990
  3075   001882  EF43  F00C         	goto	u3991
  3076   001886                     u3991:
  3077   001886  EF60  F00C         	goto	l1631
  3078   00188A                     u3990:
  3079   00188A  C00B  F00F         	movff	___xxtofl@val,??___xxtofl
  3080   00188E  C00C  F010         	movff	___xxtofl@val+1,??___xxtofl+1
  3081   001892  C00D  F011         	movff	___xxtofl@val+2,??___xxtofl+2
  3082   001896  C00E  F012         	movff	___xxtofl@val+3,??___xxtofl+3
  3083   00189A  1E0F               	comf	??___xxtofl^0,f,c
  3084   00189C  1E10               	comf	(??___xxtofl+1)^0,f,c
  3085   00189E  1E11               	comf	(??___xxtofl+2)^0,f,c
  3086   0018A0  1E12               	comf	(??___xxtofl+3)^0,f,c
  3087   0018A2  2A0F               	incf	??___xxtofl^0,f,c
  3088   0018A4  0E00               	movlw	0
  3089   0018A6  2210               	addwfc	(??___xxtofl+1)^0,f,c
  3090   0018A8  2211               	addwfc	(??___xxtofl+2)^0,f,c
  3091   0018AA  2212               	addwfc	(??___xxtofl+3)^0,f,c
  3092   0018AC  C00F  F015         	movff	??___xxtofl,___xxtofl@arg
  3093   0018B0  C010  F016         	movff	??___xxtofl+1,___xxtofl@arg+1
  3094   0018B4  C011  F017         	movff	??___xxtofl+2,___xxtofl@arg+2
  3095   0018B8  C012  F018         	movff	??___xxtofl+3,___xxtofl@arg+3
  3096   0018BC  EF68  F00C         	goto	l4672
  3097   0018C0                     l1631:
  3098   0018C0  C00B  F015         	movff	___xxtofl@val,___xxtofl@arg
  3099   0018C4  C00C  F016         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3100   0018C8  C00D  F017         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3101   0018CC  C00E  F018         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3102   0018D0                     l4672:
  3103   0018D0  500B               	movf	___xxtofl@val^0,w,c
  3104   0018D2  100C               	iorwf	(___xxtofl@val+1)^0,w,c
  3105   0018D4  100D               	iorwf	(___xxtofl@val+2)^0,w,c
  3106   0018D6  100E               	iorwf	(___xxtofl@val+3)^0,w,c
  3107   0018D8  A4D8               	btfss	status,2,c
  3108   0018DA  EF71  F00C         	goto	u4001
  3109   0018DE  EF73  F00C         	goto	u4000
  3110   0018E2                     u4001:
  3111   0018E2  EF7D  F00C         	goto	l4678
  3112   0018E6                     u4000:
  3113   0018E6  0E00               	movlw	0
  3114   0018E8  6E0B               	movwf	?___xxtofl^0,c
  3115   0018EA  0E00               	movlw	0
  3116   0018EC  6E0C               	movwf	(?___xxtofl+1)^0,c
  3117   0018EE  0E00               	movlw	0
  3118   0018F0  6E0D               	movwf	(?___xxtofl+2)^0,c
  3119   0018F2  0E00               	movlw	0
  3120   0018F4  6E0E               	movwf	(?___xxtofl+3)^0,c
  3121   0018F6  EF0E  F00D         	goto	l1634
  3122   0018FA                     l4678:
  3123   0018FA  0E96               	movlw	150
  3124   0018FC  6E14               	movwf	___xxtofl@exp^0,c
  3125   0018FE  EF87  F00C         	goto	l4682
  3126   001902                     l4680:
  3127   001902  2A14               	incf	___xxtofl@exp^0,f,c
  3128   001904  90D8               	bcf	status,0,c
  3129   001906  3218               	rrcf	(___xxtofl@arg+3)^0,f,c
  3130   001908  3217               	rrcf	(___xxtofl@arg+2)^0,f,c
  3131   00190A  3216               	rrcf	(___xxtofl@arg+1)^0,f,c
  3132   00190C  3215               	rrcf	___xxtofl@arg^0,f,c
  3133   00190E                     l4682:
  3134   00190E  0E00               	movlw	0
  3135   001910  1415               	andwf	___xxtofl@arg^0,w,c
  3136   001912  6E0F               	movwf	??___xxtofl^0,c
  3137   001914  0E00               	movlw	0
  3138   001916  1416               	andwf	(___xxtofl@arg+1)^0,w,c
  3139   001918  6E10               	movwf	(??___xxtofl+1)^0,c
  3140   00191A  0E00               	movlw	0
  3141   00191C  1417               	andwf	(___xxtofl@arg+2)^0,w,c
  3142   00191E  6E11               	movwf	(??___xxtofl+2)^0,c
  3143   001920  0EFE               	movlw	254
  3144   001922  1418               	andwf	(___xxtofl@arg+3)^0,w,c
  3145   001924  6E12               	movwf	(??___xxtofl+3)^0,c
  3146   001926  500F               	movf	??___xxtofl^0,w,c
  3147   001928  1010               	iorwf	(??___xxtofl+1)^0,w,c
  3148   00192A  1011               	iorwf	(??___xxtofl+2)^0,w,c
  3149   00192C  1012               	iorwf	(??___xxtofl+3)^0,w,c
  3150   00192E  A4D8               	btfss	status,2,c
  3151   001930  EF9C  F00C         	goto	u4011
  3152   001934  EF9E  F00C         	goto	u4010
  3153   001938                     u4011:
  3154   001938  EF81  F00C         	goto	l4680
  3155   00193C                     u4010:
  3156   00193C  EFAC  F00C         	goto	l1638
  3157   001940                     l4684:
  3158   001940  2A14               	incf	___xxtofl@exp^0,f,c
  3159   001942  0E01               	movlw	1
  3160   001944  2615               	addwf	___xxtofl@arg^0,f,c
  3161   001946  0E00               	movlw	0
  3162   001948  2216               	addwfc	(___xxtofl@arg+1)^0,f,c
  3163   00194A  2217               	addwfc	(___xxtofl@arg+2)^0,f,c
  3164   00194C  2218               	addwfc	(___xxtofl@arg+3)^0,f,c
  3165   00194E  90D8               	bcf	status,0,c
  3166   001950  3218               	rrcf	(___xxtofl@arg+3)^0,f,c
  3167   001952  3217               	rrcf	(___xxtofl@arg+2)^0,f,c
  3168   001954  3216               	rrcf	(___xxtofl@arg+1)^0,f,c
  3169   001956  3215               	rrcf	___xxtofl@arg^0,f,c
  3170   001958                     l1638:
  3171   001958  0E00               	movlw	0
  3172   00195A  1415               	andwf	___xxtofl@arg^0,w,c
  3173   00195C  6E0F               	movwf	??___xxtofl^0,c
  3174   00195E  0E00               	movlw	0
  3175   001960  1416               	andwf	(___xxtofl@arg+1)^0,w,c
  3176   001962  6E10               	movwf	(??___xxtofl+1)^0,c
  3177   001964  0E00               	movlw	0
  3178   001966  1417               	andwf	(___xxtofl@arg+2)^0,w,c
  3179   001968  6E11               	movwf	(??___xxtofl+2)^0,c
  3180   00196A  0EFF               	movlw	255
  3181   00196C  1418               	andwf	(___xxtofl@arg+3)^0,w,c
  3182   00196E  6E12               	movwf	(??___xxtofl+3)^0,c
  3183   001970  500F               	movf	??___xxtofl^0,w,c
  3184   001972  1010               	iorwf	(??___xxtofl+1)^0,w,c
  3185   001974  1011               	iorwf	(??___xxtofl+2)^0,w,c
  3186   001976  1012               	iorwf	(??___xxtofl+3)^0,w,c
  3187   001978  A4D8               	btfss	status,2,c
  3188   00197A  EFC1  F00C         	goto	u4021
  3189   00197E  EFC3  F00C         	goto	u4020
  3190   001982                     u4021:
  3191   001982  EFA0  F00C         	goto	l4684
  3192   001986                     u4020:
  3193   001986  EFCB  F00C         	goto	l4692
  3194   00198A                     l4690:
  3195   00198A  0614               	decf	___xxtofl@exp^0,f,c
  3196   00198C  90D8               	bcf	status,0,c
  3197   00198E  3615               	rlcf	___xxtofl@arg^0,f,c
  3198   001990  3616               	rlcf	(___xxtofl@arg+1)^0,f,c
  3199   001992  3617               	rlcf	(___xxtofl@arg+2)^0,f,c
  3200   001994  3618               	rlcf	(___xxtofl@arg+3)^0,f,c
  3201   001996                     l4692:
  3202   001996  BE17               	btfsc	(___xxtofl@arg+2)^0,7,c
  3203   001998  EFD0  F00C         	goto	u4031
  3204   00199C  EFD2  F00C         	goto	u4030
  3205   0019A0                     u4031:
  3206   0019A0  EFDA  F00C         	goto	l1645
  3207   0019A4                     u4030:
  3208   0019A4  0E02               	movlw	2
  3209   0019A6  6014               	cpfslt	___xxtofl@exp^0,c
  3210   0019A8  EFD8  F00C         	goto	u4041
  3211   0019AC  EFDA  F00C         	goto	u4040
  3212   0019B0                     u4041:
  3213   0019B0  EFC5  F00C         	goto	l4690
  3214   0019B4                     u4040:
  3215   0019B4                     l1645:
  3216   0019B4  B014               	btfsc	___xxtofl@exp^0,0,c
  3217   0019B6  EFDF  F00C         	goto	u4051
  3218   0019BA  EFE1  F00C         	goto	u4050
  3219   0019BE                     u4051:
  3220   0019BE  EFE2  F00C         	goto	l4698
  3221   0019C2                     u4050:
  3222   0019C2  9E17               	bcf	(___xxtofl@arg+2)^0,7,c
  3223   0019C4                     l4698:
  3224   0019C4  90D8               	bcf	status,0,c
  3225   0019C6  3214               	rrcf	___xxtofl@exp^0,f,c
  3226   0019C8  C014  F00F         	movff	___xxtofl@exp,??___xxtofl
  3227   0019CC  6A10               	clrf	(??___xxtofl+1)^0,c
  3228   0019CE  6A11               	clrf	(??___xxtofl+2)^0,c
  3229   0019D0  6A12               	clrf	(??___xxtofl+3)^0,c
  3230   0019D2  C00F  F012         	movff	??___xxtofl,??___xxtofl+3
  3231   0019D6  6A11               	clrf	(??___xxtofl+2)^0,c
  3232   0019D8  6A10               	clrf	(??___xxtofl+1)^0,c
  3233   0019DA  6A0F               	clrf	??___xxtofl^0,c
  3234   0019DC  500F               	movf	??___xxtofl^0,w,c
  3235   0019DE  1215               	iorwf	___xxtofl@arg^0,f,c
  3236   0019E0  5010               	movf	(??___xxtofl+1)^0,w,c
  3237   0019E2  1216               	iorwf	(___xxtofl@arg+1)^0,f,c
  3238   0019E4  5011               	movf	(??___xxtofl+2)^0,w,c
  3239   0019E6  1217               	iorwf	(___xxtofl@arg+2)^0,f,c
  3240   0019E8  5012               	movf	(??___xxtofl+3)^0,w,c
  3241   0019EA  1218               	iorwf	(___xxtofl@arg+3)^0,f,c
  3242   0019EC  5013               	movf	___xxtofl@sign^0,w,c
  3243   0019EE  B4D8               	btfsc	status,2,c
  3244   0019F0  EFFC  F00C         	goto	u4061
  3245   0019F4  EFFE  F00C         	goto	u4060
  3246   0019F8                     u4061:
  3247   0019F8  EF06  F00D         	goto	l4708
  3248   0019FC                     u4060:
  3249   0019FC  BE0E               	btfsc	(___xxtofl@val+3)^0,7,c
  3250   0019FE  EF05  F00D         	goto	u4070
  3251   001A02  EF03  F00D         	goto	u4071
  3252   001A06                     u4071:
  3253   001A06  EF06  F00D         	goto	l4708
  3254   001A0A                     u4070:
  3255   001A0A  8E18               	bsf	(___xxtofl@arg+3)^0,7,c
  3256   001A0C                     l4708:
  3257   001A0C  C015  F00B         	movff	___xxtofl@arg,?___xxtofl
  3258   001A10  C016  F00C         	movff	___xxtofl@arg+1,?___xxtofl+1
  3259   001A14  C017  F00D         	movff	___xxtofl@arg+2,?___xxtofl+2
  3260   001A18  C018  F00E         	movff	___xxtofl@arg+3,?___xxtofl+3
  3261   001A1C                     l1634:
  3262   001A1C  0012               	return		;funcret
  3263   001A1E                     __end_of___xxtofl:
  3264                           	callstack 0
  3265                           
  3266 ;; *************** function ___lwdiv *****************
  3267 ;; Defined at:
  3268 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;  dividend        2   10[COMRAM] unsigned int 
  3271 ;;  divisor         2   12[COMRAM] unsigned int 
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;  quotient        2   14[COMRAM] unsigned int 
  3274 ;;  counter         1   16[COMRAM] unsigned char 
  3275 ;; Return value:  Size  Location     Type
  3276 ;;                  2   10[COMRAM] unsigned int 
  3277 ;; Registers used:
  3278 ;;		wreg, status,2, status,0
  3279 ;; Tracked objects:
  3280 ;;		On entry : 0/0
  3281 ;;		On exit  : 0/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3284 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3285 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3287 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3288 ;;Total ram usage:        7 bytes
  3289 ;; Hardware stack levels used: 1
  3290 ;; Hardware stack levels required when called: 4
  3291 ;; This function calls:
  3292 ;;		Nothing
  3293 ;; This function is called by:
  3294 ;;		_main
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           	psect	text18
  3299   002468                     __ptext18:
  3300                           	callstack 0
  3301   002468                     ___lwdiv:
  3302                           	callstack 26
  3303   002468  0E00               	movlw	0
  3304   00246A  6E10               	movwf	(___lwdiv@quotient+1)^0,c
  3305   00246C  0E00               	movlw	0
  3306   00246E  6E0F               	movwf	___lwdiv@quotient^0,c
  3307   002470  500D               	movf	___lwdiv@divisor^0,w,c
  3308   002472  100E               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3309   002474  B4D8               	btfsc	status,2,c
  3310   002476  EF3F  F012         	goto	u3951
  3311   00247A  EF41  F012         	goto	u3950
  3312   00247E                     u3951:
  3313   00247E  EF69  F012         	goto	l1467
  3314   002482                     u3950:
  3315   002482  0E01               	movlw	1
  3316   002484  6E11               	movwf	___lwdiv@counter^0,c
  3317   002486  EF49  F012         	goto	l4652
  3318   00248A                     l4650:
  3319   00248A  90D8               	bcf	status,0,c
  3320   00248C  360D               	rlcf	___lwdiv@divisor^0,f,c
  3321   00248E  360E               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3322   002490  2A11               	incf	___lwdiv@counter^0,f,c
  3323   002492                     l4652:
  3324   002492  AE0E               	btfss	(___lwdiv@divisor+1)^0,7,c
  3325   002494  EF4E  F012         	goto	u3961
  3326   002498  EF50  F012         	goto	u3960
  3327   00249C                     u3961:
  3328   00249C  EF45  F012         	goto	l4650
  3329   0024A0                     u3960:
  3330   0024A0                     l4654:
  3331   0024A0  90D8               	bcf	status,0,c
  3332   0024A2  360F               	rlcf	___lwdiv@quotient^0,f,c
  3333   0024A4  3610               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3334   0024A6  500D               	movf	___lwdiv@divisor^0,w,c
  3335   0024A8  5C0B               	subwf	___lwdiv@dividend^0,w,c
  3336   0024AA  500E               	movf	(___lwdiv@divisor+1)^0,w,c
  3337   0024AC  580C               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3338   0024AE  A0D8               	btfss	status,0,c
  3339   0024B0  EF5C  F012         	goto	u3971
  3340   0024B4  EF5E  F012         	goto	u3970
  3341   0024B8                     u3971:
  3342   0024B8  EF63  F012         	goto	l4662
  3343   0024BC                     u3970:
  3344   0024BC  500D               	movf	___lwdiv@divisor^0,w,c
  3345   0024BE  5E0B               	subwf	___lwdiv@dividend^0,f,c
  3346   0024C0  500E               	movf	(___lwdiv@divisor+1)^0,w,c
  3347   0024C2  5A0C               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3348   0024C4  800F               	bsf	___lwdiv@quotient^0,0,c
  3349   0024C6                     l4662:
  3350   0024C6  90D8               	bcf	status,0,c
  3351   0024C8  320E               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3352   0024CA  320D               	rrcf	___lwdiv@divisor^0,f,c
  3353   0024CC  2E11               	decfsz	___lwdiv@counter^0,f,c
  3354   0024CE  EF50  F012         	goto	l4654
  3355   0024D2                     l1467:
  3356   0024D2  C00F  F00B         	movff	___lwdiv@quotient,?___lwdiv
  3357   0024D6  C010  F00C         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3358   0024DA  0012               	return		;funcret
  3359   0024DC                     __end_of___lwdiv:
  3360                           	callstack 0
  3361                           
  3362 ;; *************** function ___fltol *****************
  3363 ;; Defined at:
  3364 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  3365 ;; Parameters:    Size  Location     Type
  3366 ;;  f1              4   49[COMRAM] unsigned int 
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;  exp1            1    5[BANK0 ] unsigned char 
  3369 ;;  sign1           1    4[BANK0 ] unsigned char 
  3370 ;; Return value:  Size  Location     Type
  3371 ;;                  4   49[COMRAM] long 
  3372 ;; Registers used:
  3373 ;;		wreg, status,2, status,0
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3379 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3380 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3381 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3382 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3383 ;;Total ram usage:       10 bytes
  3384 ;; Hardware stack levels used: 1
  3385 ;; Hardware stack levels required when called: 4
  3386 ;; This function calls:
  3387 ;;		Nothing
  3388 ;; This function is called by:
  3389 ;;		_main
  3390 ;; This function uses a non-reentrant model
  3391 ;;
  3392                           
  3393                           	psect	text19
  3394   001C40                     __ptext19:
  3395                           	callstack 0
  3396   001C40                     ___fltol:
  3397                           	callstack 26
  3398   001C40  3434               	rlcf	(___fltol@f1+2)^0,w,c
  3399   001C42  3435               	rlcf	(___fltol@f1+3)^0,w,c
  3400   001C44  0100               	movlb	0	; () banked
  3401   001C46  6FE7               	movwf	___fltol@exp1& (0+255),b
  3402   001C48  51E7               	movf	___fltol@exp1& (0+255),w,b
  3403   001C4A  A4D8               	btfss	status,2,c
  3404   001C4C  EF2A  F00E         	goto	u5631
  3405   001C50  EF2C  F00E         	goto	u5630
  3406   001C54                     u5631:
  3407   001C54  EF36  F00E         	goto	l5744
  3408   001C58                     u5630:
  3409   001C58                     l5740:
  3410                           
  3411                           ; BSR set to: 0
  3412   001C58  0E00               	movlw	0
  3413   001C5A  6E32               	movwf	?___fltol^0,c
  3414   001C5C  0E00               	movlw	0
  3415   001C5E  6E33               	movwf	(?___fltol+1)^0,c
  3416   001C60  0E00               	movlw	0
  3417   001C62  6E34               	movwf	(?___fltol+2)^0,c
  3418   001C64  0E00               	movlw	0
  3419   001C66  6E35               	movwf	(?___fltol+3)^0,c
  3420   001C68  EFA3  F00E         	goto	l1273
  3421   001C6C                     l5744:
  3422                           
  3423                           ; BSR set to: 0
  3424   001C6C  C032  F0E2         	movff	___fltol@f1,??___fltol
  3425   001C70  C033  F0E3         	movff	___fltol@f1+1,??___fltol+1
  3426   001C74  C034  F0E4         	movff	___fltol@f1+2,??___fltol+2
  3427   001C78  C035  F0E5         	movff	___fltol@f1+3,??___fltol+3
  3428   001C7C  0E20               	movlw	32
  3429   001C7E  EF46  F00E         	goto	u5640
  3430   001C82                     u5645:
  3431   001C82  90D8               	bcf	status,0,c
  3432   001C84  33E5               	rrcf	(??___fltol+3)& (0+255),f,b
  3433   001C86  33E4               	rrcf	(??___fltol+2)& (0+255),f,b
  3434   001C88  33E3               	rrcf	(??___fltol+1)& (0+255),f,b
  3435   001C8A  33E2               	rrcf	??___fltol& (0+255),f,b
  3436   001C8C                     u5640:
  3437   001C8C  2EE8               	decfsz	wreg,f,c
  3438   001C8E  EF41  F00E         	goto	u5645
  3439   001C92  51E2               	movf	??___fltol& (0+255),w,b
  3440   001C94  6FE6               	movwf	___fltol@sign1& (0+255),b
  3441   001C96                     
  3442                           ; BSR set to: 0
  3443   001C96  8E34               	bsf	(___fltol@f1+2)^0,7,c
  3444   001C98                     
  3445                           ; BSR set to: 0
  3446   001C98  0EFF               	movlw	255
  3447   001C9A  1632               	andwf	___fltol@f1^0,f,c
  3448   001C9C  0EFF               	movlw	255
  3449   001C9E  1633               	andwf	(___fltol@f1+1)^0,f,c
  3450   001CA0  0EFF               	movlw	255
  3451   001CA2  1634               	andwf	(___fltol@f1+2)^0,f,c
  3452   001CA4  0E00               	movlw	0
  3453   001CA6  1635               	andwf	(___fltol@f1+3)^0,f,c
  3454   001CA8                     
  3455                           ; BSR set to: 0
  3456   001CA8  0E96               	movlw	150
  3457   001CAA  5FE7               	subwf	___fltol@exp1& (0+255),f,b
  3458   001CAC                     
  3459                           ; BSR set to: 0
  3460   001CAC  BFE7               	btfsc	___fltol@exp1& (0+255),7,b
  3461   001CAE  EF5D  F00E         	goto	u5650
  3462   001CB2  EF5B  F00E         	goto	u5651
  3463   001CB6                     u5651:
  3464   001CB6  EF73  F00E         	goto	l5764
  3465   001CBA                     u5650:
  3466   001CBA                     
  3467                           ; BSR set to: 0
  3468   001CBA  51E7               	movf	___fltol@exp1& (0+255),w,b
  3469   001CBC  0A80               	xorlw	128
  3470   001CBE  0F97               	addlw	151
  3471   001CC0  B0D8               	btfsc	status,0,c
  3472   001CC2  EF65  F00E         	goto	u5661
  3473   001CC6  EF67  F00E         	goto	u5660
  3474   001CCA                     u5661:
  3475   001CCA  EF69  F00E         	goto	l5760
  3476   001CCE                     u5660:
  3477   001CCE  EF2C  F00E         	goto	l5740
  3478   001CD2                     l5760:
  3479                           
  3480                           ; BSR set to: 0
  3481   001CD2  90D8               	bcf	status,0,c
  3482   001CD4  3235               	rrcf	(___fltol@f1+3)^0,f,c
  3483   001CD6  3234               	rrcf	(___fltol@f1+2)^0,f,c
  3484   001CD8  3233               	rrcf	(___fltol@f1+1)^0,f,c
  3485   001CDA  3232               	rrcf	___fltol@f1^0,f,c
  3486   001CDC                     
  3487                           ; BSR set to: 0
  3488   001CDC  3FE7               	incfsz	___fltol@exp1& (0+255),f,b
  3489   001CDE  EF69  F00E         	goto	l5760
  3490   001CE2  EF8B  F00E         	goto	l5774
  3491   001CE6                     l5764:
  3492                           
  3493                           ; BSR set to: 0
  3494   001CE6  0E1F               	movlw	31
  3495   001CE8  65E7               	cpfsgt	___fltol@exp1& (0+255),b
  3496   001CEA  EF79  F00E         	goto	u5671
  3497   001CEE  EF7B  F00E         	goto	u5670
  3498   001CF2                     u5671:
  3499   001CF2  EF83  F00E         	goto	l5772
  3500   001CF6                     u5670:
  3501   001CF6  EF2C  F00E         	goto	l5740
  3502   001CFA                     l5770:
  3503                           
  3504                           ; BSR set to: 0
  3505   001CFA  90D8               	bcf	status,0,c
  3506   001CFC  3632               	rlcf	___fltol@f1^0,f,c
  3507   001CFE  3633               	rlcf	(___fltol@f1+1)^0,f,c
  3508   001D00  3634               	rlcf	(___fltol@f1+2)^0,f,c
  3509   001D02  3635               	rlcf	(___fltol@f1+3)^0,f,c
  3510   001D04  07E7               	decf	___fltol@exp1& (0+255),f,b
  3511   001D06                     l5772:
  3512                           
  3513                           ; BSR set to: 0
  3514   001D06  51E7               	movf	___fltol@exp1& (0+255),w,b
  3515   001D08  A4D8               	btfss	status,2,c
  3516   001D0A  EF89  F00E         	goto	u5681
  3517   001D0E  EF8B  F00E         	goto	u5680
  3518   001D12                     u5681:
  3519   001D12  EF7D  F00E         	goto	l5770
  3520   001D16                     u5680:
  3521   001D16                     l5774:
  3522                           
  3523                           ; BSR set to: 0
  3524   001D16  51E6               	movf	___fltol@sign1& (0+255),w,b
  3525   001D18  B4D8               	btfsc	status,2,c
  3526   001D1A  EF91  F00E         	goto	u5691
  3527   001D1E  EF93  F00E         	goto	u5690
  3528   001D22                     u5691:
  3529   001D22  EF9B  F00E         	goto	l5778
  3530   001D26                     u5690:
  3531   001D26                     
  3532                           ; BSR set to: 0
  3533   001D26  1E35               	comf	(___fltol@f1+3)^0,f,c
  3534   001D28  1E34               	comf	(___fltol@f1+2)^0,f,c
  3535   001D2A  1E33               	comf	(___fltol@f1+1)^0,f,c
  3536   001D2C  6C32               	negf	___fltol@f1^0,c
  3537   001D2E  0E00               	movlw	0
  3538   001D30  2233               	addwfc	(___fltol@f1+1)^0,f,c
  3539   001D32  2234               	addwfc	(___fltol@f1+2)^0,f,c
  3540   001D34  2235               	addwfc	(___fltol@f1+3)^0,f,c
  3541   001D36                     l5778:
  3542                           
  3543                           ; BSR set to: 0
  3544   001D36  C032  F032         	movff	___fltol@f1,?___fltol
  3545   001D3A  C033  F033         	movff	___fltol@f1+1,?___fltol+1
  3546   001D3E  C034  F034         	movff	___fltol@f1+2,?___fltol+2
  3547   001D42  C035  F035         	movff	___fltol@f1+3,?___fltol+3
  3548   001D46                     l1273:
  3549                           
  3550                           ; BSR set to: 0
  3551   001D46  0012               	return		;funcret
  3552   001D48                     __end_of___fltol:
  3553                           	callstack 0
  3554                           
  3555 ;; *************** function ___flmul *****************
  3556 ;; Defined at:
  3557 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  3558 ;; Parameters:    Size  Location     Type
  3559 ;;  b               4   24[COMRAM] long 
  3560 ;;  a               4   28[COMRAM] long 
  3561 ;; Auto vars:     Size  Location     Type
  3562 ;;  prod            4   43[COMRAM] struct .
  3563 ;;  grs             4   37[COMRAM] unsigned long 
  3564 ;;  temp            2   47[COMRAM] struct .
  3565 ;;  bexp            1   42[COMRAM] unsigned char 
  3566 ;;  aexp            1   41[COMRAM] unsigned char 
  3567 ;;  sign            1   36[COMRAM] unsigned char 
  3568 ;; Return value:  Size  Location     Type
  3569 ;;                  4   24[COMRAM] unsigned char 
  3570 ;; Registers used:
  3571 ;;		wreg, status,2, status,0, prodl, prodh
  3572 ;; Tracked objects:
  3573 ;;		On entry : 0/0
  3574 ;;		On exit  : 0/0
  3575 ;;		Unchanged: 0/0
  3576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3577 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3578 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3579 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3580 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3581 ;;Total ram usage:       25 bytes
  3582 ;; Hardware stack levels used: 1
  3583 ;; Hardware stack levels required when called: 4
  3584 ;; This function calls:
  3585 ;;		Nothing
  3586 ;; This function is called by:
  3587 ;;		_main
  3588 ;; This function uses a non-reentrant model
  3589 ;;
  3590                           
  3591                           	psect	text20
  3592   001030                     __ptext20:
  3593                           	callstack 0
  3594   001030                     ___flmul:
  3595                           	callstack 26
  3596   001030  501C               	movf	(___flmul@b+3)^0,w,c
  3597   001032  0B80               	andlw	128
  3598   001034  6E25               	movwf	___flmul@sign^0,c
  3599   001036  501C               	movf	(___flmul@b+3)^0,w,c
  3600   001038  241C               	addwf	(___flmul@b+3)^0,w,c
  3601   00103A  6E2B               	movwf	___flmul@bexp^0,c
  3602   00103C  AE1B               	btfss	(___flmul@b+2)^0,7,c
  3603   00103E  EF23  F008         	goto	u3691
  3604   001042  EF25  F008         	goto	u3690
  3605   001046                     u3691:
  3606   001046  EF26  F008         	goto	l4476
  3607   00104A                     u3690:
  3608   00104A  802B               	bsf	___flmul@bexp^0,0,c
  3609   00104C                     l4476:
  3610   00104C  502B               	movf	___flmul@bexp^0,w,c
  3611   00104E  B4D8               	btfsc	status,2,c
  3612   001050  EF2C  F008         	goto	u3701
  3613   001054  EF2E  F008         	goto	u3700
  3614   001058                     u3701:
  3615   001058  EF41  F008         	goto	l4484
  3616   00105C                     u3700:
  3617   00105C  282B               	incf	___flmul@bexp^0,w,c
  3618   00105E  A4D8               	btfss	status,2,c
  3619   001060  EF34  F008         	goto	u3711
  3620   001064  EF36  F008         	goto	u3710
  3621   001068                     u3711:
  3622   001068  EF3E  F008         	goto	l4482
  3623   00106C                     u3710:
  3624   00106C  0E00               	movlw	0
  3625   00106E  6E19               	movwf	___flmul@b^0,c
  3626   001070  0E00               	movlw	0
  3627   001072  6E1A               	movwf	(___flmul@b+1)^0,c
  3628   001074  0E00               	movlw	0
  3629   001076  6E1B               	movwf	(___flmul@b+2)^0,c
  3630   001078  0E00               	movlw	0
  3631   00107A  6E1C               	movwf	(___flmul@b+3)^0,c
  3632   00107C                     l4482:
  3633   00107C  8E1B               	bsf	(___flmul@b+2)^0,7,c
  3634   00107E  EF49  F008         	goto	l4486
  3635   001082                     l4484:
  3636   001082  0E00               	movlw	0
  3637   001084  6E19               	movwf	___flmul@b^0,c
  3638   001086  0E00               	movlw	0
  3639   001088  6E1A               	movwf	(___flmul@b+1)^0,c
  3640   00108A  0E00               	movlw	0
  3641   00108C  6E1B               	movwf	(___flmul@b+2)^0,c
  3642   00108E  0E00               	movlw	0
  3643   001090  6E1C               	movwf	(___flmul@b+3)^0,c
  3644   001092                     l4486:
  3645   001092  5020               	movf	(___flmul@a+3)^0,w,c
  3646   001094  0B80               	andlw	128
  3647   001096  1A25               	xorwf	___flmul@sign^0,f,c
  3648   001098  5020               	movf	(___flmul@a+3)^0,w,c
  3649   00109A  2420               	addwf	(___flmul@a+3)^0,w,c
  3650   00109C  6E2A               	movwf	___flmul@aexp^0,c
  3651   00109E  AE1F               	btfss	(___flmul@a+2)^0,7,c
  3652   0010A0  EF54  F008         	goto	u3721
  3653   0010A4  EF56  F008         	goto	u3720
  3654   0010A8                     u3721:
  3655   0010A8  EF57  F008         	goto	l4494
  3656   0010AC                     u3720:
  3657   0010AC  802A               	bsf	___flmul@aexp^0,0,c
  3658   0010AE                     l4494:
  3659   0010AE  502A               	movf	___flmul@aexp^0,w,c
  3660   0010B0  B4D8               	btfsc	status,2,c
  3661   0010B2  EF5D  F008         	goto	u3731
  3662   0010B6  EF5F  F008         	goto	u3730
  3663   0010BA                     u3731:
  3664   0010BA  EF72  F008         	goto	l4502
  3665   0010BE                     u3730:
  3666   0010BE  282A               	incf	___flmul@aexp^0,w,c
  3667   0010C0  A4D8               	btfss	status,2,c
  3668   0010C2  EF65  F008         	goto	u3741
  3669   0010C6  EF67  F008         	goto	u3740
  3670   0010CA                     u3741:
  3671   0010CA  EF6F  F008         	goto	l4500
  3672   0010CE                     u3740:
  3673   0010CE  0E00               	movlw	0
  3674   0010D0  6E1D               	movwf	___flmul@a^0,c
  3675   0010D2  0E00               	movlw	0
  3676   0010D4  6E1E               	movwf	(___flmul@a+1)^0,c
  3677   0010D6  0E00               	movlw	0
  3678   0010D8  6E1F               	movwf	(___flmul@a+2)^0,c
  3679   0010DA  0E00               	movlw	0
  3680   0010DC  6E20               	movwf	(___flmul@a+3)^0,c
  3681   0010DE                     l4500:
  3682   0010DE  8E1F               	bsf	(___flmul@a+2)^0,7,c
  3683   0010E0  EF7A  F008         	goto	l1590
  3684   0010E4                     l4502:
  3685   0010E4  0E00               	movlw	0
  3686   0010E6  6E1D               	movwf	___flmul@a^0,c
  3687   0010E8  0E00               	movlw	0
  3688   0010EA  6E1E               	movwf	(___flmul@a+1)^0,c
  3689   0010EC  0E00               	movlw	0
  3690   0010EE  6E1F               	movwf	(___flmul@a+2)^0,c
  3691   0010F0  0E00               	movlw	0
  3692   0010F2  6E20               	movwf	(___flmul@a+3)^0,c
  3693   0010F4                     l1590:
  3694   0010F4  502A               	movf	___flmul@aexp^0,w,c
  3695   0010F6  B4D8               	btfsc	status,2,c
  3696   0010F8  EF80  F008         	goto	u3751
  3697   0010FC  EF82  F008         	goto	u3750
  3698   001100                     u3751:
  3699   001100  EF8A  F008         	goto	l4506
  3700   001104                     u3750:
  3701   001104  502B               	movf	___flmul@bexp^0,w,c
  3702   001106  A4D8               	btfss	status,2,c
  3703   001108  EF88  F008         	goto	u3761
  3704   00110C  EF8A  F008         	goto	u3760
  3705   001110                     u3761:
  3706   001110  EF94  F008         	goto	l4510
  3707   001114                     u3760:
  3708   001114                     l4506:
  3709   001114  0E00               	movlw	0
  3710   001116  6E19               	movwf	?___flmul^0,c
  3711   001118  0E00               	movlw	0
  3712   00111A  6E1A               	movwf	(?___flmul+1)^0,c
  3713   00111C  0E00               	movlw	0
  3714   00111E  6E1B               	movwf	(?___flmul+2)^0,c
  3715   001120  0E00               	movlw	0
  3716   001122  6E1C               	movwf	(?___flmul+3)^0,c
  3717   001124  EF2C  F00A         	goto	l1594
  3718   001128                     l4510:
  3719   001128  501F               	movf	(___flmul@a+2)^0,w,c
  3720   00112A  0219               	mulwf	___flmul@b^0,c
  3721   00112C  CFF3 F030          	movff	prodl,___flmul@temp
  3722   001130  CFF4 F031          	movff	prodh,___flmul@temp+1
  3723   001134  5030               	movf	___flmul@temp^0,w,c
  3724   001136  6E26               	movwf	___flmul@grs^0,c
  3725   001138  6A27               	clrf	(___flmul@grs+1)^0,c
  3726   00113A  6A28               	clrf	(___flmul@grs+2)^0,c
  3727   00113C  6A29               	clrf	(___flmul@grs+3)^0,c
  3728   00113E  5031               	movf	(___flmul@temp+1)^0,w,c
  3729   001140  6E2C               	movwf	___flmul@prod^0,c
  3730   001142  6A2D               	clrf	(___flmul@prod+1)^0,c
  3731   001144  6A2E               	clrf	(___flmul@prod+2)^0,c
  3732   001146  6A2F               	clrf	(___flmul@prod+3)^0,c
  3733   001148  501E               	movf	(___flmul@a+1)^0,w,c
  3734   00114A  021A               	mulwf	(___flmul@b+1)^0,c
  3735   00114C  CFF3 F030          	movff	prodl,___flmul@temp
  3736   001150  CFF4 F031          	movff	prodh,___flmul@temp+1
  3737   001154  5030               	movf	___flmul@temp^0,w,c
  3738   001156  2626               	addwf	___flmul@grs^0,f,c
  3739   001158  0E00               	movlw	0
  3740   00115A  2227               	addwfc	(___flmul@grs+1)^0,f,c
  3741   00115C  2228               	addwfc	(___flmul@grs+2)^0,f,c
  3742   00115E  2229               	addwfc	(___flmul@grs+3)^0,f,c
  3743   001160  5031               	movf	(___flmul@temp+1)^0,w,c
  3744   001162  262C               	addwf	___flmul@prod^0,f,c
  3745   001164  0E00               	movlw	0
  3746   001166  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3747   001168  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3748   00116A  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3749   00116C  501D               	movf	___flmul@a^0,w,c
  3750   00116E  021B               	mulwf	(___flmul@b+2)^0,c
  3751   001170  CFF3 F030          	movff	prodl,___flmul@temp
  3752   001174  CFF4 F031          	movff	prodh,___flmul@temp+1
  3753   001178  5030               	movf	___flmul@temp^0,w,c
  3754   00117A  2626               	addwf	___flmul@grs^0,f,c
  3755   00117C  0E00               	movlw	0
  3756   00117E  2227               	addwfc	(___flmul@grs+1)^0,f,c
  3757   001180  2228               	addwfc	(___flmul@grs+2)^0,f,c
  3758   001182  2229               	addwfc	(___flmul@grs+3)^0,f,c
  3759   001184  5031               	movf	(___flmul@temp+1)^0,w,c
  3760   001186  262C               	addwf	___flmul@prod^0,f,c
  3761   001188  0E00               	movlw	0
  3762   00118A  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3763   00118C  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3764   00118E  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3765   001190  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  3766   001194  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  3767   001198  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  3768   00119C  6A26               	clrf	___flmul@grs^0,c
  3769   00119E  501D               	movf	___flmul@a^0,w,c
  3770   0011A0  021A               	mulwf	(___flmul@b+1)^0,c
  3771   0011A2  CFF3 F030          	movff	prodl,___flmul@temp
  3772   0011A6  CFF4 F031          	movff	prodh,___flmul@temp+1
  3773   0011AA  5030               	movf	___flmul@temp^0,w,c
  3774   0011AC  2626               	addwf	___flmul@grs^0,f,c
  3775   0011AE  5031               	movf	(___flmul@temp+1)^0,w,c
  3776   0011B0  2227               	addwfc	(___flmul@grs+1)^0,f,c
  3777   0011B2  0E00               	movlw	0
  3778   0011B4  2228               	addwfc	(___flmul@grs+2)^0,f,c
  3779   0011B6  0E00               	movlw	0
  3780   0011B8  2229               	addwfc	(___flmul@grs+3)^0,f,c
  3781   0011BA  501E               	movf	(___flmul@a+1)^0,w,c
  3782   0011BC  0219               	mulwf	___flmul@b^0,c
  3783   0011BE  CFF3 F030          	movff	prodl,___flmul@temp
  3784   0011C2  CFF4 F031          	movff	prodh,___flmul@temp+1
  3785   0011C6  5030               	movf	___flmul@temp^0,w,c
  3786   0011C8  2626               	addwf	___flmul@grs^0,f,c
  3787   0011CA  5031               	movf	(___flmul@temp+1)^0,w,c
  3788   0011CC  2227               	addwfc	(___flmul@grs+1)^0,f,c
  3789   0011CE  0E00               	movlw	0
  3790   0011D0  2228               	addwfc	(___flmul@grs+2)^0,f,c
  3791   0011D2  0E00               	movlw	0
  3792   0011D4  2229               	addwfc	(___flmul@grs+3)^0,f,c
  3793   0011D6  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  3794   0011DA  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  3795   0011DE  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  3796   0011E2  6A26               	clrf	___flmul@grs^0,c
  3797   0011E4  501D               	movf	___flmul@a^0,w,c
  3798   0011E6  0219               	mulwf	___flmul@b^0,c
  3799   0011E8  CFF3 F030          	movff	prodl,___flmul@temp
  3800   0011EC  CFF4 F031          	movff	prodh,___flmul@temp+1
  3801   0011F0  5030               	movf	___flmul@temp^0,w,c
  3802   0011F2  2626               	addwf	___flmul@grs^0,f,c
  3803   0011F4  5031               	movf	(___flmul@temp+1)^0,w,c
  3804   0011F6  2227               	addwfc	(___flmul@grs+1)^0,f,c
  3805   0011F8  0E00               	movlw	0
  3806   0011FA  2228               	addwfc	(___flmul@grs+2)^0,f,c
  3807   0011FC  0E00               	movlw	0
  3808   0011FE  2229               	addwfc	(___flmul@grs+3)^0,f,c
  3809   001200  501F               	movf	(___flmul@a+2)^0,w,c
  3810   001202  021A               	mulwf	(___flmul@b+1)^0,c
  3811   001204  CFF3 F030          	movff	prodl,___flmul@temp
  3812   001208  CFF4 F031          	movff	prodh,___flmul@temp+1
  3813   00120C  5030               	movf	___flmul@temp^0,w,c
  3814   00120E  262C               	addwf	___flmul@prod^0,f,c
  3815   001210  5031               	movf	(___flmul@temp+1)^0,w,c
  3816   001212  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3817   001214  0E00               	movlw	0
  3818   001216  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3819   001218  0E00               	movlw	0
  3820   00121A  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3821   00121C  501E               	movf	(___flmul@a+1)^0,w,c
  3822   00121E  021B               	mulwf	(___flmul@b+2)^0,c
  3823   001220  CFF3 F030          	movff	prodl,___flmul@temp
  3824   001224  CFF4 F031          	movff	prodh,___flmul@temp+1
  3825   001228  5030               	movf	___flmul@temp^0,w,c
  3826   00122A  262C               	addwf	___flmul@prod^0,f,c
  3827   00122C  5031               	movf	(___flmul@temp+1)^0,w,c
  3828   00122E  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3829   001230  0E00               	movlw	0
  3830   001232  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3831   001234  0E00               	movlw	0
  3832   001236  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3833   001238  501F               	movf	(___flmul@a+2)^0,w,c
  3834   00123A  021B               	mulwf	(___flmul@b+2)^0,c
  3835   00123C  CFF3 F030          	movff	prodl,___flmul@temp
  3836   001240  CFF4 F031          	movff	prodh,___flmul@temp+1
  3837   001244  5030               	movf	___flmul@temp^0,w,c
  3838   001246  6E21               	movwf	??___flmul^0,c
  3839   001248  5031               	movf	(___flmul@temp+1)^0,w,c
  3840   00124A  6E22               	movwf	(??___flmul+1)^0,c
  3841   00124C  6A23               	clrf	(??___flmul+2)^0,c
  3842   00124E  6A24               	clrf	(??___flmul+3)^0,c
  3843   001250  C023  F024         	movff	??___flmul+2,??___flmul+3
  3844   001254  C022  F023         	movff	??___flmul+1,??___flmul+2
  3845   001258  C021  F022         	movff	??___flmul,??___flmul+1
  3846   00125C  6A21               	clrf	??___flmul^0,c
  3847   00125E  5021               	movf	??___flmul^0,w,c
  3848   001260  262C               	addwf	___flmul@prod^0,f,c
  3849   001262  5022               	movf	(??___flmul+1)^0,w,c
  3850   001264  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3851   001266  5023               	movf	(??___flmul+2)^0,w,c
  3852   001268  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3853   00126A  5024               	movf	(??___flmul+3)^0,w,c
  3854   00126C  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3855   00126E  C026  F021         	movff	___flmul@grs,??___flmul
  3856   001272  C027  F022         	movff	___flmul@grs+1,??___flmul+1
  3857   001276  C028  F023         	movff	___flmul@grs+2,??___flmul+2
  3858   00127A  C029  F024         	movff	___flmul@grs+3,??___flmul+3
  3859   00127E  0E19               	movlw	25
  3860   001280  EF47  F009         	goto	u3770
  3861   001284                     u3775:
  3862   001284  90D8               	bcf	status,0,c
  3863   001286  3224               	rrcf	(??___flmul+3)^0,f,c
  3864   001288  3223               	rrcf	(??___flmul+2)^0,f,c
  3865   00128A  3222               	rrcf	(??___flmul+1)^0,f,c
  3866   00128C  3221               	rrcf	??___flmul^0,f,c
  3867   00128E                     u3770:
  3868   00128E  2EE8               	decfsz	wreg,f,c
  3869   001290  EF42  F009         	goto	u3775
  3870   001294  5021               	movf	??___flmul^0,w,c
  3871   001296  262C               	addwf	___flmul@prod^0,f,c
  3872   001298  5022               	movf	(??___flmul+1)^0,w,c
  3873   00129A  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3874   00129C  5023               	movf	(??___flmul+2)^0,w,c
  3875   00129E  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3876   0012A0  5024               	movf	(??___flmul+3)^0,w,c
  3877   0012A2  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3878   0012A4  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  3879   0012A8  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  3880   0012AC  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  3881   0012B0  6A26               	clrf	___flmul@grs^0,c
  3882   0012B2  502A               	movf	___flmul@aexp^0,w,c
  3883   0012B4  C02B  F021         	movff	___flmul@bexp,??___flmul
  3884   0012B8  6A22               	clrf	(??___flmul+1)^0,c
  3885   0012BA  2621               	addwf	??___flmul^0,f,c
  3886   0012BC  0E00               	movlw	0
  3887   0012BE  2222               	addwfc	(??___flmul+1)^0,f,c
  3888   0012C0  0E82               	movlw	130
  3889   0012C2  2421               	addwf	??___flmul^0,w,c
  3890   0012C4  6E30               	movwf	___flmul@temp^0,c
  3891   0012C6  0EFF               	movlw	255
  3892   0012C8  2022               	addwfc	(??___flmul+1)^0,w,c
  3893   0012CA  6E31               	movwf	(___flmul@temp+1)^0,c
  3894   0012CC  EF7D  F009         	goto	l4558
  3895   0012D0                     l4552:
  3896   0012D0  90D8               	bcf	status,0,c
  3897   0012D2  362C               	rlcf	___flmul@prod^0,f,c
  3898   0012D4  362D               	rlcf	(___flmul@prod+1)^0,f,c
  3899   0012D6  362E               	rlcf	(___flmul@prod+2)^0,f,c
  3900   0012D8  362F               	rlcf	(___flmul@prod+3)^0,f,c
  3901   0012DA  AE29               	btfss	(___flmul@grs+3)^0,7,c
  3902   0012DC  EF72  F009         	goto	u3781
  3903   0012E0  EF74  F009         	goto	u3780
  3904   0012E4                     u3781:
  3905   0012E4  EF75  F009         	goto	l1597
  3906   0012E8                     u3780:
  3907   0012E8  802C               	bsf	___flmul@prod^0,0,c
  3908   0012EA                     l1597:
  3909   0012EA  90D8               	bcf	status,0,c
  3910   0012EC  3626               	rlcf	___flmul@grs^0,f,c
  3911   0012EE  3627               	rlcf	(___flmul@grs+1)^0,f,c
  3912   0012F0  3628               	rlcf	(___flmul@grs+2)^0,f,c
  3913   0012F2  3629               	rlcf	(___flmul@grs+3)^0,f,c
  3914   0012F4  0630               	decf	___flmul@temp^0,f,c
  3915   0012F6  A0D8               	btfss	status,0,c
  3916   0012F8  0631               	decf	(___flmul@temp+1)^0,f,c
  3917   0012FA                     l4558:
  3918   0012FA  AE2E               	btfss	(___flmul@prod+2)^0,7,c
  3919   0012FC  EF82  F009         	goto	u3791
  3920   001300  EF84  F009         	goto	u3790
  3921   001304                     u3791:
  3922   001304  EF68  F009         	goto	l4552
  3923   001308                     u3790:
  3924   001308  0E00               	movlw	0
  3925   00130A  6E2A               	movwf	___flmul@aexp^0,c
  3926   00130C  AE29               	btfss	(___flmul@grs+3)^0,7,c
  3927   00130E  EF8B  F009         	goto	u3801
  3928   001312  EF8D  F009         	goto	u3800
  3929   001316                     u3801:
  3930   001316  EFB1  F009         	goto	l1599
  3931   00131A                     u3800:
  3932   00131A  0EFF               	movlw	255
  3933   00131C  1426               	andwf	___flmul@grs^0,w,c
  3934   00131E  6E21               	movwf	??___flmul^0,c
  3935   001320  0EFF               	movlw	255
  3936   001322  1427               	andwf	(___flmul@grs+1)^0,w,c
  3937   001324  6E22               	movwf	(??___flmul+1)^0,c
  3938   001326  0EFF               	movlw	255
  3939   001328  1428               	andwf	(___flmul@grs+2)^0,w,c
  3940   00132A  6E23               	movwf	(??___flmul+2)^0,c
  3941   00132C  0E7F               	movlw	127
  3942   00132E  1429               	andwf	(___flmul@grs+3)^0,w,c
  3943   001330  6E24               	movwf	(??___flmul+3)^0,c
  3944   001332  5021               	movf	??___flmul^0,w,c
  3945   001334  1022               	iorwf	(??___flmul+1)^0,w,c
  3946   001336  1023               	iorwf	(??___flmul+2)^0,w,c
  3947   001338  1024               	iorwf	(??___flmul+3)^0,w,c
  3948   00133A  B4D8               	btfsc	status,2,c
  3949   00133C  EFA2  F009         	goto	u3811
  3950   001340  EFA4  F009         	goto	u3810
  3951   001344                     u3811:
  3952   001344  EFA8  F009         	goto	l1600
  3953   001348                     u3810:
  3954   001348                     l4566:
  3955   001348  0E01               	movlw	1
  3956   00134A  6E2A               	movwf	___flmul@aexp^0,c
  3957   00134C  EFB1  F009         	goto	l1599
  3958   001350                     l1600:
  3959   001350  A02C               	btfss	___flmul@prod^0,0,c
  3960   001352  EFAD  F009         	goto	u3821
  3961   001356  EFAF  F009         	goto	u3820
  3962   00135A                     u3821:
  3963   00135A  EFB1  F009         	goto	l1599
  3964   00135E                     u3820:
  3965   00135E  EFA4  F009         	goto	l4566
  3966   001362                     l1599:
  3967   001362  502A               	movf	___flmul@aexp^0,w,c
  3968   001364  B4D8               	btfsc	status,2,c
  3969   001366  EFB7  F009         	goto	u3831
  3970   00136A  EFB9  F009         	goto	u3830
  3971   00136E                     u3831:
  3972   00136E  EFDD  F009         	goto	l4578
  3973   001372                     u3830:
  3974   001372  0E01               	movlw	1
  3975   001374  262C               	addwf	___flmul@prod^0,f,c
  3976   001376  0E00               	movlw	0
  3977   001378  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3978   00137A  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3979   00137C  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3980   00137E  A02F               	btfss	(___flmul@prod+3)^0,0,c
  3981   001380  EFC4  F009         	goto	u3841
  3982   001384  EFC6  F009         	goto	u3840
  3983   001388                     u3841:
  3984   001388  EFDD  F009         	goto	l4578
  3985   00138C                     u3840:
  3986   00138C  C02C  F021         	movff	___flmul@prod,??___flmul
  3987   001390  C02D  F022         	movff	___flmul@prod+1,??___flmul+1
  3988   001394  C02E  F023         	movff	___flmul@prod+2,??___flmul+2
  3989   001398  C02F  F024         	movff	___flmul@prod+3,??___flmul+3
  3990   00139C  3424               	rlcf	(??___flmul+3)^0,w,c
  3991   00139E  3224               	rrcf	(??___flmul+3)^0,f,c
  3992   0013A0  3223               	rrcf	(??___flmul+2)^0,f,c
  3993   0013A2  3222               	rrcf	(??___flmul+1)^0,f,c
  3994   0013A4  3221               	rrcf	??___flmul^0,f,c
  3995   0013A6  C021  F02C         	movff	??___flmul,___flmul@prod
  3996   0013AA  C022  F02D         	movff	??___flmul+1,___flmul@prod+1
  3997   0013AE  C023  F02E         	movff	??___flmul+2,___flmul@prod+2
  3998   0013B2  C024  F02F         	movff	??___flmul+3,___flmul@prod+3
  3999   0013B6  4A30               	infsnz	___flmul@temp^0,f,c
  4000   0013B8  2A31               	incf	(___flmul@temp+1)^0,f,c
  4001   0013BA                     l4578:
  4002   0013BA  BE31               	btfsc	(___flmul@temp+1)^0,7,c
  4003   0013BC  EFE8  F009         	goto	u3851
  4004   0013C0  5031               	movf	(___flmul@temp+1)^0,w,c
  4005   0013C2  E108               	bnz	u3850
  4006   0013C4  2830               	incf	___flmul@temp^0,w,c
  4007   0013C6  A0D8               	btfss	status,0,c
  4008   0013C8  EFE8  F009         	goto	u3851
  4009   0013CC  EFEA  F009         	goto	u3850
  4010   0013D0                     u3851:
  4011   0013D0  EFF4  F009         	goto	l4582
  4012   0013D4                     u3850:
  4013   0013D4  0E00               	movlw	0
  4014   0013D6  6E2C               	movwf	___flmul@prod^0,c
  4015   0013D8  0E00               	movlw	0
  4016   0013DA  6E2D               	movwf	(___flmul@prod+1)^0,c
  4017   0013DC  0E80               	movlw	128
  4018   0013DE  6E2E               	movwf	(___flmul@prod+2)^0,c
  4019   0013E0  0E7F               	movlw	127
  4020   0013E2  6E2F               	movwf	(___flmul@prod+3)^0,c
  4021   0013E4  EF22  F00A         	goto	l4594
  4022   0013E8                     l4582:
  4023   0013E8  BE31               	btfsc	(___flmul@temp+1)^0,7,c
  4024   0013EA  EF01  F00A         	goto	u3860
  4025   0013EE  5031               	movf	(___flmul@temp+1)^0,w,c
  4026   0013F0  E106               	bnz	u3861
  4027   0013F2  0430               	decf	___flmul@temp^0,w,c
  4028   0013F4  B0D8               	btfsc	status,0,c
  4029   0013F6  EFFF  F009         	goto	u3861
  4030   0013FA  EF01  F00A         	goto	u3860
  4031   0013FE                     u3861:
  4032   0013FE  EF0D  F00A         	goto	l1607
  4033   001402                     u3860:
  4034   001402  0E00               	movlw	0
  4035   001404  6E2C               	movwf	___flmul@prod^0,c
  4036   001406  0E00               	movlw	0
  4037   001408  6E2D               	movwf	(___flmul@prod+1)^0,c
  4038   00140A  0E00               	movlw	0
  4039   00140C  6E2E               	movwf	(___flmul@prod+2)^0,c
  4040   00140E  0E00               	movlw	0
  4041   001410  6E2F               	movwf	(___flmul@prod+3)^0,c
  4042   001412  0E00               	movlw	0
  4043   001414  6E25               	movwf	___flmul@sign^0,c
  4044   001416  EF22  F00A         	goto	l4594
  4045   00141A                     l1607:
  4046   00141A  C030  F02B         	movff	___flmul@temp,___flmul@bexp
  4047   00141E  0EFF               	movlw	255
  4048   001420  162C               	andwf	___flmul@prod^0,f,c
  4049   001422  0EFF               	movlw	255
  4050   001424  162D               	andwf	(___flmul@prod+1)^0,f,c
  4051   001426  0E7F               	movlw	127
  4052   001428  162E               	andwf	(___flmul@prod+2)^0,f,c
  4053   00142A  0E00               	movlw	0
  4054   00142C  162F               	andwf	(___flmul@prod+3)^0,f,c
  4055   00142E  A02B               	btfss	___flmul@bexp^0,0,c
  4056   001430  EF1C  F00A         	goto	u3871
  4057   001434  EF1E  F00A         	goto	u3870
  4058   001438                     u3871:
  4059   001438  EF1F  F00A         	goto	l4592
  4060   00143C                     u3870:
  4061   00143C  8E2E               	bsf	(___flmul@prod+2)^0,7,c
  4062   00143E                     l4592:
  4063   00143E  90D8               	bcf	status,0,c
  4064   001440  302B               	rrcf	___flmul@bexp^0,w,c
  4065   001442  6E2F               	movwf	(___flmul@prod+3)^0,c
  4066   001444                     l4594:
  4067   001444  5025               	movf	___flmul@sign^0,w,c
  4068   001446  122F               	iorwf	(___flmul@prod+3)^0,f,c
  4069   001448  C02C  F019         	movff	___flmul@prod,?___flmul
  4070   00144C  C02D  F01A         	movff	___flmul@prod+1,?___flmul+1
  4071   001450  C02E  F01B         	movff	___flmul@prod+2,?___flmul+2
  4072   001454  C02F  F01C         	movff	___flmul@prod+3,?___flmul+3
  4073   001458                     l1594:
  4074   001458  0012               	return		;funcret
  4075   00145A                     __end_of___flmul:
  4076                           	callstack 0
  4077                           
  4078 ;; *************** function _Application *****************
  4079 ;; Defined at:
  4080 ;;		line 120 in file "application.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;		None
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;		None
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  1    wreg      void 
  4087 ;; Registers used:
  4088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4089 ;; Tracked objects:
  4090 ;;		On entry : 0/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4098 ;;Total ram usage:        0 bytes
  4099 ;; Hardware stack levels used: 1
  4100 ;; Hardware stack levels required when called: 8
  4101 ;; This function calls:
  4102 ;;		_ADC_Init
  4103 ;;		_dc_motor_initialize
  4104 ;;		_ecu_layer_initialize
  4105 ;;		_lcd_4bit_initialize
  4106 ;; This function is called by:
  4107 ;;		_main
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111                           	psect	text21
  4112   00291C                     __ptext21:
  4113                           	callstack 0
  4114   00291C                     _Application:
  4115                           	callstack 22
  4116   00291C                     
  4117                           ;application.c: 122:     ret = ADC_Init(&adc_1);
  4118   00291C  0ED5               	movlw	low _adc_1
  4119   00291E  6E0E               	movwf	ADC_Init@_adc^0,c
  4120   002920  EC9B  F010         	call	_ADC_Init	;wreg free
  4121   002924  0100               	movlb	0	; () banked
  4122   002926  6FED               	movwf	_ret& (0+255),b
  4123   002928                     
  4124                           ; BSR set to: 0
  4125                           ;application.c: 123:     ret = lcd_4bit_initialize(&lcd_1);
  4126   002928  0EDC               	movlw	low _lcd_1
  4127   00292A  6E19               	movwf	lcd_4bit_initialize@lcd^0,c
  4128   00292C  ECA4  F00E         	call	_lcd_4bit_initialize	;wreg free
  4129   002930  0100               	movlb	0	; () banked
  4130   002932  6FED               	movwf	_ret& (0+255),b
  4131   002934                     
  4132                           ; BSR set to: 0
  4133                           ;application.c: 124:     ret = dc_motor_initialize(&motor_1);
  4134   002934  0E53               	movlw	low _motor_1
  4135   002936  6E16               	movwf	dc_motor_initialize@_dc_motor^0,c
  4136   002938  EC0F  F015         	call	_dc_motor_initialize	;wreg free
  4137   00293C  0100               	movlb	0	; () banked
  4138   00293E  6FED               	movwf	_ret& (0+255),b
  4139   002940                     
  4140                           ; BSR set to: 0
  4141                           ;application.c: 125:     ret = dc_motor_initialize(&motor_2);
  4142   002940  0E51               	movlw	low _motor_2
  4143   002942  6E16               	movwf	dc_motor_initialize@_dc_motor^0,c
  4144   002944  EC0F  F015         	call	_dc_motor_initialize	;wreg free
  4145   002948  0100               	movlb	0	; () banked
  4146   00294A  6FED               	movwf	_ret& (0+255),b
  4147   00294C                     
  4148                           ; BSR set to: 0
  4149                           ;application.c: 126:     ecu_layer_initialize();
  4150   00294C  ECA4  F015         	call	_ecu_layer_initialize	;wreg free
  4151   002950  0012               	return		;funcret
  4152   002952                     __end_of_Application:
  4153                           	callstack 0
  4154                           
  4155 ;; *************** function _lcd_4bit_initialize *****************
  4156 ;; Defined at:
  4157 ;;		line 23 in file "ECU_Layer/chr_lcd/ecu_chr_lcd.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;  lcd             1   24[COMRAM] PTR const struct .
  4160 ;;		 -> lcd_1(6), 
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;  ret             1   27[COMRAM] unsigned char 
  4163 ;;  l_data_pin_c    1   26[COMRAM] unsigned char 
  4164 ;; Return value:  Size  Location     Type
  4165 ;;                  1    wreg      unsigned char 
  4166 ;; Registers used:
  4167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4168 ;; Tracked objects:
  4169 ;;		On entry : 0/0
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4173 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4174 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4175 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4176 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4177 ;;Total ram usage:        4 bytes
  4178 ;; Hardware stack levels used: 1
  4179 ;; Hardware stack levels required when called: 7
  4180 ;; This function calls:
  4181 ;;		_gpio_pin_intialize
  4182 ;;		_lcd_4bit_send_command
  4183 ;; This function is called by:
  4184 ;;		_Application
  4185 ;; This function uses a non-reentrant model
  4186 ;;
  4187                           
  4188                           	psect	text22
  4189   001D48                     __ptext22:
  4190                           	callstack 0
  4191   001D48                     _lcd_4bit_initialize:
  4192                           	callstack 22
  4193   001D48                     
  4194                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 25:     uint8 l_data_pin_counter = 0X00;
  4195   001D48  0E00               	movlw	0
  4196   001D4A  6E1B               	movwf	lcd_4bit_initialize@l_data_pin_counter^0,c
  4197                           
  4198                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 26:     if (((void*)0) == lcd)
  4199   001D4C  5019               	movf	lcd_4bit_initialize@lcd^0,w,c
  4200   001D4E  A4D8               	btfss	status,2,c
  4201   001D50  EFAC  F00E         	goto	u3301
  4202   001D54  EFAE  F00E         	goto	u3300
  4203   001D58                     u3301:
  4204   001D58  EFB2  F00E         	goto	l4046
  4205   001D5C                     u3300:
  4206   001D5C                     
  4207                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 27:     {;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 28:        
      +                           ret = (Std_ReturnType)0x00;
  4208   001D5C  0E00               	movlw	0
  4209   001D5E  6E1C               	movwf	lcd_4bit_initialize@ret^0,c
  4210                           
  4211                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 29:     }
  4212   001D60  EF15  F00F         	goto	l4082
  4213   001D64                     l4046:
  4214                           
  4215                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 31:     {;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 32:        
      +                           ret = gpio_pin_intialize(&(lcd->lcd_rs));
  4216   001D64  C019  F013         	movff	lcd_4bit_initialize@lcd,gpio_pin_intialize@_pin_config
  4217   001D68  ECD6  F012         	call	_gpio_pin_intialize	;wreg free
  4218   001D6C  6E1C               	movwf	lcd_4bit_initialize@ret^0,c
  4219                           
  4220                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 33:         ret = gpio_pin_intialize(&(lcd->lcd_en));
  4221   001D6E  2819               	incf	lcd_4bit_initialize@lcd^0,w,c
  4222   001D70  6E13               	movwf	gpio_pin_intialize@_pin_config^0,c
  4223   001D72  ECD6  F012         	call	_gpio_pin_intialize	;wreg free
  4224   001D76  6E1C               	movwf	lcd_4bit_initialize@ret^0,c
  4225   001D78                     
  4226                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 34:         for (l_data_pin_counter = 0X00 ; l_data_pi
      +                          n_counter<4 ; l_data_pin_counter++)
  4227   001D78  0E00               	movlw	0
  4228   001D7A  6E1B               	movwf	lcd_4bit_initialize@l_data_pin_counter^0,c
  4229   001D7C                     l4054:
  4230   001D7C  5019               	movf	lcd_4bit_initialize@lcd^0,w,c
  4231   001D7E  241B               	addwf	lcd_4bit_initialize@l_data_pin_counter^0,w,c
  4232   001D80  0F02               	addlw	2
  4233   001D82  6E13               	movwf	gpio_pin_intialize@_pin_config^0,c
  4234   001D84  ECD6  F012         	call	_gpio_pin_intialize	;wreg free
  4235   001D88                     
  4236                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 37:         }
  4237   001D88  2A1B               	incf	lcd_4bit_initialize@l_data_pin_counter^0,f,c
  4238   001D8A  0E03               	movlw	3
  4239   001D8C  641B               	cpfsgt	lcd_4bit_initialize@l_data_pin_counter^0,c
  4240   001D8E  EFCB  F00E         	goto	u3311
  4241   001D92  EFCD  F00E         	goto	u3310
  4242   001D96                     u3311:
  4243   001D96  EFBE  F00E         	goto	l4054
  4244   001D9A                     u3310:
  4245   001D9A                     
  4246                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 38:         _delay((unsigned long)((20)*(8000000UL/400
      +                          0.0)));
  4247   001D9A  0E34               	movlw	52
  4248   001D9C  6E1A               	movwf	??_lcd_4bit_initialize^0,c
  4249   001D9E  0EF2               	movlw	242
  4250   001DA0                     u5797:
  4251   001DA0  2EE8               	decfsz	wreg,f,c
  4252   001DA2  D7FE               	bra	u5797
  4253   001DA4  2E1A               	decfsz	??_lcd_4bit_initialize^0,f,c
  4254   001DA6  D7FC               	bra	u5797
  4255   001DA8  C019  F016         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  4256   001DAC  0E38               	movlw	56
  4257   001DAE  6E17               	movwf	lcd_4bit_send_command@command^0,c
  4258   001DB0  EC33  F013         	call	_lcd_4bit_send_command	;wreg free
  4259   001DB4                     
  4260                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 40:         _delay((unsigned long)((5)*(8000000UL/4000
      +                          .0)));
  4261   001DB4  0E0D               	movlw	13
  4262   001DB6  6E1A               	movwf	??_lcd_4bit_initialize^0,c
  4263   001DB8  0EFC               	movlw	252
  4264   001DBA                     u5807:
  4265   001DBA  2EE8               	decfsz	wreg,f,c
  4266   001DBC  D7FE               	bra	u5807
  4267   001DBE  2E1A               	decfsz	??_lcd_4bit_initialize^0,f,c
  4268   001DC0  D7FC               	bra	u5807
  4269   001DC2  C019  F016         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  4270   001DC6  0E38               	movlw	56
  4271   001DC8  6E17               	movwf	lcd_4bit_send_command@command^0,c
  4272   001DCA  EC33  F013         	call	_lcd_4bit_send_command	;wreg free
  4273   001DCE                     
  4274                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 42:         _delay((unsigned long)((150)*(8000000UL/40
      +                          00000.0)));
  4275   001DCE  0E64               	movlw	100
  4276   001DD0                     u5817:
  4277   001DD0  2EE8               	decfsz	wreg,f,c
  4278   001DD2  D7FE               	bra	u5817
  4279   001DD4  C019  F016         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  4280   001DD8  0E38               	movlw	56
  4281   001DDA  6E17               	movwf	lcd_4bit_send_command@command^0,c
  4282   001DDC  EC33  F013         	call	_lcd_4bit_send_command	;wreg free
  4283   001DE0  C019  F016         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  4284   001DE4  0E01               	movlw	1
  4285   001DE6  6E17               	movwf	lcd_4bit_send_command@command^0,c
  4286   001DE8  EC33  F013         	call	_lcd_4bit_send_command	;wreg free
  4287   001DEC  C019  F016         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  4288   001DF0  0E02               	movlw	2
  4289   001DF2  6E17               	movwf	lcd_4bit_send_command@command^0,c
  4290   001DF4  EC33  F013         	call	_lcd_4bit_send_command	;wreg free
  4291   001DF8  C019  F016         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  4292   001DFC  0E06               	movlw	6
  4293   001DFE  6E17               	movwf	lcd_4bit_send_command@command^0,c
  4294   001E00  EC33  F013         	call	_lcd_4bit_send_command	;wreg free
  4295   001E04  C019  F016         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  4296   001E08  0E0C               	movlw	12
  4297   001E0A  6E17               	movwf	lcd_4bit_send_command@command^0,c
  4298   001E0C  EC33  F013         	call	_lcd_4bit_send_command	;wreg free
  4299   001E10  C019  F016         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  4300   001E14  0E28               	movlw	40
  4301   001E16  6E17               	movwf	lcd_4bit_send_command@command^0,c
  4302   001E18  EC33  F013         	call	_lcd_4bit_send_command	;wreg free
  4303   001E1C                     
  4304                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 49:         ret = lcd_4bit_send_command(lcd, 0X80);
  4305   001E1C  C019  F016         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  4306   001E20  0E80               	movlw	128
  4307   001E22  6E17               	movwf	lcd_4bit_send_command@command^0,c
  4308   001E24  EC33  F013         	call	_lcd_4bit_send_command	;wreg free
  4309   001E28  6E1C               	movwf	lcd_4bit_initialize@ret^0,c
  4310   001E2A                     l4082:
  4311                           
  4312                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 52:     return ret;
  4313   001E2A  501C               	movf	lcd_4bit_initialize@ret^0,w,c
  4314   001E2C  0012               	return		;funcret
  4315   001E2E                     __end_of_lcd_4bit_initialize:
  4316                           	callstack 0
  4317                           
  4318 ;; *************** function _lcd_4bit_send_command *****************
  4319 ;; Defined at:
  4320 ;;		line 62 in file "ECU_Layer/chr_lcd/ecu_chr_lcd.c"
  4321 ;; Parameters:    Size  Location     Type
  4322 ;;  lcd             1   21[COMRAM] PTR const struct .
  4323 ;;		 -> lcd_1(6), 
  4324 ;;  command         1   22[COMRAM] unsigned char 
  4325 ;; Auto vars:     Size  Location     Type
  4326 ;;  ret             1   23[COMRAM] unsigned char 
  4327 ;; Return value:  Size  Location     Type
  4328 ;;                  1    wreg      unsigned char 
  4329 ;; Registers used:
  4330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4331 ;; Tracked objects:
  4332 ;;		On entry : 0/0
  4333 ;;		On exit  : 0/0
  4334 ;;		Unchanged: 0/0
  4335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4336 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4337 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4339 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4340 ;;Total ram usage:        3 bytes
  4341 ;; Hardware stack levels used: 1
  4342 ;; Hardware stack levels required when called: 6
  4343 ;; This function calls:
  4344 ;;		_gpio_pin_write_logic
  4345 ;;		_lcd_send_4bits
  4346 ;;		_lcd_send_4bits_enable_signal
  4347 ;; This function is called by:
  4348 ;;		_lcd_4bit_initialize
  4349 ;;		_lcd_4bit_set_cursor
  4350 ;;		_lcd_4bit_send_custom_char
  4351 ;; This function uses a non-reentrant model
  4352 ;;
  4353                           
  4354                           	psect	text23
  4355   002666                     __ptext23:
  4356                           	callstack 0
  4357   002666                     _lcd_4bit_send_command:
  4358                           	callstack 22
  4359   002666                     
  4360                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 64:     if (((void*)0) == lcd)
  4361   002666  5016               	movf	lcd_4bit_send_command@lcd^0,w,c
  4362   002668  A4D8               	btfss	status,2,c
  4363   00266A  EF39  F013         	goto	u3171
  4364   00266E  EF3B  F013         	goto	u3170
  4365   002672                     u3171:
  4366   002672  EF3F  F013         	goto	l3950
  4367   002676                     u3170:
  4368   002676                     
  4369                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 65:     {;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 66:        
      +                           ret = (Std_ReturnType)0x00;
  4370   002676  0E00               	movlw	0
  4371   002678  6E18               	movwf	lcd_4bit_send_command@ret^0,c
  4372                           
  4373                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 67:     }
  4374   00267A  EF5F  F013         	goto	l3952
  4375   00267E                     l3950:
  4376                           
  4377                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 69:     {;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 70:        
      +                           ret = gpio_pin_write_logic(&(lcd->lcd_rs), GPIO_LOW);
  4378   00267E  C016  F00B         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  4379   002682  0E00               	movlw	0
  4380   002684  6E0C               	movwf	gpio_pin_write_logic@logic^0,c
  4381   002686  EC98  F00D         	call	_gpio_pin_write_logic	;wreg free
  4382   00268A  6E18               	movwf	lcd_4bit_send_command@ret^0,c
  4383                           
  4384                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 72:         ret = lcd_send_4bits(lcd, (command >> 4));
  4385   00268C  C016  F013         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  4386   002690  3817               	swapf	lcd_4bit_send_command@command^0,w,c
  4387   002692  0B0F               	andlw	15
  4388   002694  6E14               	movwf	lcd_send_4bits@_data_command^0,c
  4389   002696  EC6E  F012         	call	_lcd_send_4bits	;wreg free
  4390   00269A  6E18               	movwf	lcd_4bit_send_command@ret^0,c
  4391                           
  4392                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 73:         ret = lcd_send_4bits_enable_signal(lcd);
  4393   00269C  C016  F013         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits_enable_signal@lcd
  4394   0026A0  ECFF  F013         	call	_lcd_send_4bits_enable_signal	;wreg free
  4395   0026A4  6E18               	movwf	lcd_4bit_send_command@ret^0,c
  4396                           
  4397                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 74:         ret = lcd_send_4bits(lcd, command);
  4398   0026A6  C016  F013         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  4399   0026AA  C017  F014         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
  4400   0026AE  EC6E  F012         	call	_lcd_send_4bits	;wreg free
  4401   0026B2  6E18               	movwf	lcd_4bit_send_command@ret^0,c
  4402                           
  4403                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 75:         ret = lcd_send_4bits_enable_signal(lcd);
  4404   0026B4  C016  F013         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits_enable_signal@lcd
  4405   0026B8  ECFF  F013         	call	_lcd_send_4bits_enable_signal	;wreg free
  4406   0026BC  6E18               	movwf	lcd_4bit_send_command@ret^0,c
  4407   0026BE                     l3952:
  4408                           
  4409                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 78:     return ret;
  4410   0026BE  5018               	movf	lcd_4bit_send_command@ret^0,w,c
  4411   0026C0  0012               	return		;funcret
  4412   0026C2                     __end_of_lcd_4bit_send_command:
  4413                           	callstack 0
  4414                           
  4415 ;; *************** function _lcd_send_4bits_enable_signal *****************
  4416 ;; Defined at:
  4417 ;;		line 522 in file "ECU_Layer/chr_lcd/ecu_chr_lcd.c"
  4418 ;; Parameters:    Size  Location     Type
  4419 ;;  lcd             1   18[COMRAM] PTR const struct .
  4420 ;;		 -> lcd_1(6), 
  4421 ;; Auto vars:     Size  Location     Type
  4422 ;;  ret             1   19[COMRAM] unsigned char 
  4423 ;; Return value:  Size  Location     Type
  4424 ;;                  1    wreg      unsigned char 
  4425 ;; Registers used:
  4426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4427 ;; Tracked objects:
  4428 ;;		On entry : 0/0
  4429 ;;		On exit  : 0/0
  4430 ;;		Unchanged: 0/0
  4431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4432 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4433 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4435 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4436 ;;Total ram usage:        2 bytes
  4437 ;; Hardware stack levels used: 1
  4438 ;; Hardware stack levels required when called: 5
  4439 ;; This function calls:
  4440 ;;		_gpio_pin_write_logic
  4441 ;; This function is called by:
  4442 ;;		_lcd_4bit_send_command
  4443 ;;		_lcd_4bit_send_char_data
  4444 ;; This function uses a non-reentrant model
  4445 ;;
  4446                           
  4447                           	psect	text24
  4448   0027FE                     __ptext24:
  4449                           	callstack 0
  4450   0027FE                     _lcd_send_4bits_enable_signal:
  4451                           	callstack 22
  4452   0027FE                     
  4453                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 524:     if (((void*)0) == lcd)
  4454   0027FE  5013               	movf	lcd_send_4bits_enable_signal@lcd^0,w,c
  4455   002800  A4D8               	btfss	status,2,c
  4456   002802  EF05  F014         	goto	u3041
  4457   002806  EF07  F014         	goto	u3040
  4458   00280A                     u3041:
  4459   00280A  EF0B  F014         	goto	l3874
  4460   00280E                     u3040:
  4461   00280E                     
  4462                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 525:     {;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 526:      
      +                             ret = (Std_ReturnType)0x00;
  4463   00280E  0E00               	movlw	0
  4464   002810  6E14               	movwf	lcd_send_4bits_enable_signal@ret^0,c
  4465                           
  4466                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 527:     }
  4467   002812  EF1C  F014         	goto	l3880
  4468   002816                     l3874:
  4469   002816  2813               	incf	lcd_send_4bits_enable_signal@lcd^0,w,c
  4470   002818  6E0B               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4471   00281A  0E01               	movlw	1
  4472   00281C  6E0C               	movwf	gpio_pin_write_logic@logic^0,c
  4473   00281E  EC98  F00D         	call	_gpio_pin_write_logic	;wreg free
  4474   002822                     
  4475                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 531:         _delay((unsigned long)((5)*(8000000UL/400
      +                          0000.0)));
  4476   002822  0E03               	movlw	3
  4477   002824                     u5827:
  4478   002824  2EE8               	decfsz	wreg,f,c
  4479   002826  D7FE               	bra	u5827
  4480   002828  0000               	nop	
  4481   00282A                     
  4482                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 532:         ret = gpio_pin_write_logic(&(lcd->lcd_en)
      +                          , GPIO_LOW);
  4483   00282A  2813               	incf	lcd_send_4bits_enable_signal@lcd^0,w,c
  4484   00282C  6E0B               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4485   00282E  0E00               	movlw	0
  4486   002830  6E0C               	movwf	gpio_pin_write_logic@logic^0,c
  4487   002832  EC98  F00D         	call	_gpio_pin_write_logic	;wreg free
  4488   002836  6E14               	movwf	lcd_send_4bits_enable_signal@ret^0,c
  4489   002838                     l3880:
  4490                           
  4491                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 534:     return ret;
  4492   002838  5014               	movf	lcd_send_4bits_enable_signal@ret^0,w,c
  4493   00283A  0012               	return		;funcret
  4494   00283C                     __end_of_lcd_send_4bits_enable_signal:
  4495                           	callstack 0
  4496                           
  4497 ;; *************** function _lcd_send_4bits *****************
  4498 ;; Defined at:
  4499 ;;		line 499 in file "ECU_Layer/chr_lcd/ecu_chr_lcd.c"
  4500 ;; Parameters:    Size  Location     Type
  4501 ;;  lcd             1   18[COMRAM] PTR const struct .
  4502 ;;		 -> lcd_1(6), 
  4503 ;;  _data_comman    1   19[COMRAM] unsigned char 
  4504 ;; Auto vars:     Size  Location     Type
  4505 ;;  ret             1   20[COMRAM] unsigned char 
  4506 ;; Return value:  Size  Location     Type
  4507 ;;                  1    wreg      unsigned char 
  4508 ;; Registers used:
  4509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4510 ;; Tracked objects:
  4511 ;;		On entry : 0/0
  4512 ;;		On exit  : 0/0
  4513 ;;		Unchanged: 0/0
  4514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4515 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4516 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4518 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4519 ;;Total ram usage:        3 bytes
  4520 ;; Hardware stack levels used: 1
  4521 ;; Hardware stack levels required when called: 5
  4522 ;; This function calls:
  4523 ;;		_gpio_pin_write_logic
  4524 ;; This function is called by:
  4525 ;;		_lcd_4bit_send_command
  4526 ;;		_lcd_4bit_send_char_data
  4527 ;; This function uses a non-reentrant model
  4528 ;;
  4529                           
  4530                           	psect	text25
  4531   0024DC                     __ptext25:
  4532                           	callstack 0
  4533   0024DC                     _lcd_send_4bits:
  4534                           	callstack 22
  4535   0024DC                     
  4536                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 501:     if (((void*)0) == lcd)
  4537   0024DC  5013               	movf	lcd_send_4bits@lcd^0,w,c
  4538   0024DE  A4D8               	btfss	status,2,c
  4539   0024E0  EF74  F012         	goto	u3031
  4540   0024E4  EF76  F012         	goto	u3030
  4541   0024E8                     u3031:
  4542   0024E8  EF7A  F012         	goto	l3864
  4543   0024EC                     u3030:
  4544   0024EC                     
  4545                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 502:     {;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 503:      
      +                             ret = (Std_ReturnType)0x00;
  4546   0024EC  0E00               	movlw	0
  4547   0024EE  6E15               	movwf	lcd_send_4bits@ret^0,c
  4548                           
  4549                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 504:     }
  4550   0024F0  EFA3  F012         	goto	l3866
  4551   0024F4                     l3864:
  4552                           
  4553                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 506:     {;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 507:      
      +                             ret = gpio_pin_write_logic(&(lcd->lcd_data[0]), ((_data_command >> 0) & (uint8)0x01))
      +                          ;
  4554   0024F4  5013               	movf	lcd_send_4bits@lcd^0,w,c
  4555   0024F6  0F02               	addlw	2
  4556   0024F8  6E0B               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4557   0024FA  5014               	movf	lcd_send_4bits@_data_command^0,w,c
  4558   0024FC  0B01               	andlw	1
  4559   0024FE  6E0C               	movwf	gpio_pin_write_logic@logic^0,c
  4560   002500  EC98  F00D         	call	_gpio_pin_write_logic	;wreg free
  4561   002504  6E15               	movwf	lcd_send_4bits@ret^0,c
  4562                           
  4563                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 508:         ret = gpio_pin_write_logic(&(lcd->lcd_dat
      +                          a[1]), ((_data_command >> 1) & (uint8)0x01));
  4564   002506  5013               	movf	lcd_send_4bits@lcd^0,w,c
  4565   002508  0F03               	addlw	3
  4566   00250A  6E0B               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4567   00250C  90D8               	bcf	status,0,c
  4568   00250E  3014               	rrcf	lcd_send_4bits@_data_command^0,w,c
  4569   002510  0B01               	andlw	1
  4570   002512  6E0C               	movwf	gpio_pin_write_logic@logic^0,c
  4571   002514  EC98  F00D         	call	_gpio_pin_write_logic	;wreg free
  4572   002518  6E15               	movwf	lcd_send_4bits@ret^0,c
  4573                           
  4574                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 509:         ret = gpio_pin_write_logic(&(lcd->lcd_dat
      +                          a[2]), ((_data_command >> 2) & (uint8)0x01));
  4575   00251A  5013               	movf	lcd_send_4bits@lcd^0,w,c
  4576   00251C  0F04               	addlw	4
  4577   00251E  6E0B               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4578   002520  4014               	rrncf	lcd_send_4bits@_data_command^0,w,c
  4579   002522  42E8               	rrncf	wreg,f,c
  4580   002524  0B3F               	andlw	63
  4581   002526  0B01               	andlw	1
  4582   002528  6E0C               	movwf	gpio_pin_write_logic@logic^0,c
  4583   00252A  EC98  F00D         	call	_gpio_pin_write_logic	;wreg free
  4584   00252E  6E15               	movwf	lcd_send_4bits@ret^0,c
  4585                           
  4586                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 510:         ret = gpio_pin_write_logic(&(lcd->lcd_dat
      +                          a[3]), ((_data_command >> 3) & (uint8)0x01));
  4587   002530  5013               	movf	lcd_send_4bits@lcd^0,w,c
  4588   002532  0F05               	addlw	5
  4589   002534  6E0B               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4590   002536  3814               	swapf	lcd_send_4bits@_data_command^0,w,c
  4591   002538  46E8               	rlncf	wreg,f,c
  4592   00253A  0B1F               	andlw	31
  4593   00253C  0B01               	andlw	1
  4594   00253E  6E0C               	movwf	gpio_pin_write_logic@logic^0,c
  4595   002540  EC98  F00D         	call	_gpio_pin_write_logic	;wreg free
  4596   002544  6E15               	movwf	lcd_send_4bits@ret^0,c
  4597   002546                     l3866:
  4598                           
  4599                           ;ECU_Layer/chr_lcd/ecu_chr_lcd.c: 512:     return ret;
  4600   002546  5015               	movf	lcd_send_4bits@ret^0,w,c
  4601   002548  0012               	return		;funcret
  4602   00254A                     __end_of_lcd_send_4bits:
  4603                           	callstack 0
  4604                           
  4605 ;; *************** function _ecu_layer_initialize *****************
  4606 ;; Defined at:
  4607 ;;		line 12 in file "ECU_Layer/ecu_layer_init.c"
  4608 ;; Parameters:    Size  Location     Type
  4609 ;;		None
  4610 ;; Auto vars:     Size  Location     Type
  4611 ;;		None
  4612 ;; Return value:  Size  Location     Type
  4613 ;;                  1    wreg      void 
  4614 ;; Registers used:
  4615 ;;		None
  4616 ;; Tracked objects:
  4617 ;;		On entry : 0/0
  4618 ;;		On exit  : 0/0
  4619 ;;		Unchanged: 0/0
  4620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4625 ;;Total ram usage:        0 bytes
  4626 ;; Hardware stack levels used: 1
  4627 ;; Hardware stack levels required when called: 4
  4628 ;; This function calls:
  4629 ;;		Nothing
  4630 ;; This function is called by:
  4631 ;;		_Application
  4632 ;; This function uses a non-reentrant model
  4633 ;;
  4634                           
  4635                           	psect	text26
  4636   002B48                     __ptext26:
  4637                           	callstack 0
  4638   002B48                     _ecu_layer_initialize:
  4639                           	callstack 25
  4640   002B48  0012               	return		;funcret
  4641   002B4A                     __end_of_ecu_layer_initialize:
  4642                           	callstack 0
  4643                           
  4644 ;; *************** function _dc_motor_initialize *****************
  4645 ;; Defined at:
  4646 ;;		line 17 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;  _dc_motor       1   21[COMRAM] PTR struct .
  4649 ;;		 -> motor_2(2), motor_1(2), 
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;  ret             1   22[COMRAM] unsigned char 
  4652 ;; Return value:  Size  Location     Type
  4653 ;;                  1    wreg      unsigned char 
  4654 ;; Registers used:
  4655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4656 ;; Tracked objects:
  4657 ;;		On entry : 0/0
  4658 ;;		On exit  : 0/0
  4659 ;;		Unchanged: 0/0
  4660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4661 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4662 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4664 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4665 ;;Total ram usage:        2 bytes
  4666 ;; Hardware stack levels used: 1
  4667 ;; Hardware stack levels required when called: 6
  4668 ;; This function calls:
  4669 ;;		_gpio_pin_intialize
  4670 ;; This function is called by:
  4671 ;;		_Application
  4672 ;; This function uses a non-reentrant model
  4673 ;;
  4674                           
  4675                           	psect	text27
  4676   002A1E                     __ptext27:
  4677                           	callstack 0
  4678   002A1E                     _dc_motor_initialize:
  4679                           	callstack 23
  4680   002A1E                     
  4681                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 18:     Std_ReturnType ret = (Std_ReturnType)0x01;
  4682   002A1E  0E01               	movlw	1
  4683   002A20  6E17               	movwf	dc_motor_initialize@ret^0,c
  4684                           
  4685                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 19:     if (_dc_motor == ((void*)0))
  4686   002A22  5016               	movf	dc_motor_initialize@_dc_motor^0,w,c
  4687   002A24  A4D8               	btfss	status,2,c
  4688   002A26  EF17  F015         	goto	u3391
  4689   002A2A  EF19  F015         	goto	u3390
  4690   002A2E                     u3391:
  4691   002A2E  EF1D  F015         	goto	l4182
  4692   002A32                     u3390:
  4693   002A32                     
  4694                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 20:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 21:    
      +                               ret = (Std_ReturnType)0x00;
  4695   002A32  0E00               	movlw	0
  4696   002A34  6E17               	movwf	dc_motor_initialize@ret^0,c
  4697                           
  4698                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 22:     }
  4699   002A36  EF25  F015         	goto	l4184
  4700   002A3A                     l4182:
  4701                           
  4702                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 24:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 26:    
      +                               gpio_pin_intialize(&(_dc_motor->dc_motor[0X00U]));
  4703   002A3A  C016  F013         	movff	dc_motor_initialize@_dc_motor,gpio_pin_intialize@_pin_config
  4704   002A3E  ECD6  F012         	call	_gpio_pin_intialize	;wreg free
  4705                           
  4706                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 27:         gpio_pin_intialize(&(_dc_motor->dc_motor
      +                          [0X01U]));
  4707   002A42  2816               	incf	dc_motor_initialize@_dc_motor^0,w,c
  4708   002A44  6E13               	movwf	gpio_pin_intialize@_pin_config^0,c
  4709   002A46  ECD6  F012         	call	_gpio_pin_intialize	;wreg free
  4710   002A4A                     l4184:
  4711                           
  4712                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 30:     return ret;
  4713   002A4A  5017               	movf	dc_motor_initialize@ret^0,w,c
  4714   002A4C  0012               	return		;funcret
  4715   002A4E                     __end_of_dc_motor_initialize:
  4716                           	callstack 0
  4717                           
  4718 ;; *************** function _gpio_pin_intialize *****************
  4719 ;; Defined at:
  4720 ;;		line 167 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4721 ;; Parameters:    Size  Location     Type
  4722 ;;  _pin_config     1   18[COMRAM] PTR const struct .
  4723 ;;		 -> motor_2$dc_motor(2), motor_2(2), motor_1$dc_motor(2), motor_1(2), 
  4724 ;;		 -> lcd_1$lcd_data(4), lcd_1(6), relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  4725 ;; Auto vars:     Size  Location     Type
  4726 ;;  ret             1   20[COMRAM] unsigned char 
  4727 ;; Return value:  Size  Location     Type
  4728 ;;                  1    wreg      unsigned char 
  4729 ;; Registers used:
  4730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4731 ;; Tracked objects:
  4732 ;;		On entry : 0/0
  4733 ;;		On exit  : 0/0
  4734 ;;		Unchanged: 0/0
  4735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4736 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4737 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4738 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4739 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4740 ;;Total ram usage:        3 bytes
  4741 ;; Hardware stack levels used: 1
  4742 ;; Hardware stack levels required when called: 5
  4743 ;; This function calls:
  4744 ;;		_gpio_pin_direction_intialize
  4745 ;;		_gpio_pin_write_logic
  4746 ;; This function is called by:
  4747 ;;		_lcd_4bit_initialize
  4748 ;;		_dc_motor_initialize
  4749 ;;		_seven_segment_intialize
  4750 ;;		_lcd_8bit_initialize
  4751 ;;		_keypad_initialize
  4752 ;;		_led_initialize
  4753 ;;		_relay_initialize
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757                           	psect	text28
  4758   0025AC                     __ptext28:
  4759                           	callstack 0
  4760   0025AC                     _gpio_pin_intialize:
  4761                           	callstack 23
  4762   0025AC                     
  4763                           ;MCAL_Layer/GPIO/hal_gpio.c: 169:     if (((void*)0) == _pin_config || _pin_config->pin 
      +                          > 8 -1)
  4764   0025AC  5013               	movf	gpio_pin_intialize@_pin_config^0,w,c
  4765   0025AE  B4D8               	btfsc	status,2,c
  4766   0025B0  EFDC  F012         	goto	u3151
  4767   0025B4  EFDE  F012         	goto	u3150
  4768   0025B8                     u3151:
  4769   0025B8  EFEE  F012         	goto	l3938
  4770   0025BC                     u3150:
  4771   0025BC  5013               	movf	gpio_pin_intialize@_pin_config^0,w,c
  4772   0025BE  6ED9               	movwf	fsr2l,c
  4773   0025C0  6ADA               	clrf	fsr2h,c
  4774   0025C2  30DF               	rrcf	223,w,c
  4775   0025C4  32E8               	rrcf	wreg,f,c
  4776   0025C6  32E8               	rrcf	wreg,f,c
  4777   0025C8  0B07               	andlw	7
  4778   0025CA  6E14               	movwf	??_gpio_pin_intialize^0,c
  4779   0025CC  0E07               	movlw	7
  4780   0025CE  6414               	cpfsgt	??_gpio_pin_intialize^0,c
  4781   0025D0  EFEC  F012         	goto	u3161
  4782   0025D4  EFEE  F012         	goto	u3160
  4783   0025D8                     u3161:
  4784   0025D8  EFF2  F012         	goto	l3940
  4785   0025DC                     u3160:
  4786   0025DC                     l3938:
  4787                           
  4788                           ;MCAL_Layer/GPIO/hal_gpio.c: 170:     {;MCAL_Layer/GPIO/hal_gpio.c: 171:         ret = (
      +                          Std_ReturnType)0x00;
  4789   0025DC  0E00               	movlw	0
  4790   0025DE  6E15               	movwf	gpio_pin_intialize@ret^0,c
  4791                           
  4792                           ;MCAL_Layer/GPIO/hal_gpio.c: 172:     }
  4793   0025E0  EF03  F013         	goto	l3942
  4794   0025E4                     l3940:
  4795                           
  4796                           ;MCAL_Layer/GPIO/hal_gpio.c: 174:     {;MCAL_Layer/GPIO/hal_gpio.c: 175:         ret = g
      +                          pio_pin_direction_intialize(_pin_config);
  4797   0025E4  C013  F00B         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
  4798   0025E8  EC0F  F00D         	call	_gpio_pin_direction_intialize	;wreg free
  4799   0025EC  6E15               	movwf	gpio_pin_intialize@ret^0,c
  4800                           
  4801                           ;MCAL_Layer/GPIO/hal_gpio.c: 176:         ret = gpio_pin_write_logic(_pin_config , _pin_
      +                          config->logic);
  4802   0025EE  C013  F00B         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
  4803   0025F2  5013               	movf	gpio_pin_intialize@_pin_config^0,w,c
  4804   0025F4  6ED9               	movwf	fsr2l,c
  4805   0025F6  6ADA               	clrf	fsr2h,c
  4806   0025F8  0E00               	movlw	0
  4807   0025FA  BEDF               	btfsc	indf2,7,c
  4808   0025FC  0E01               	movlw	1
  4809   0025FE  6E0C               	movwf	gpio_pin_write_logic@logic^0,c
  4810   002600  EC98  F00D         	call	_gpio_pin_write_logic	;wreg free
  4811   002604  6E15               	movwf	gpio_pin_intialize@ret^0,c
  4812   002606                     l3942:
  4813                           
  4814                           ;MCAL_Layer/GPIO/hal_gpio.c: 179:     return ret;
  4815   002606  5015               	movf	gpio_pin_intialize@ret^0,w,c
  4816   002608  0012               	return		;funcret
  4817   00260A                     __end_of_gpio_pin_intialize:
  4818                           	callstack 0
  4819                           
  4820 ;; *************** function _gpio_pin_write_logic *****************
  4821 ;; Defined at:
  4822 ;;		line 84 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4823 ;; Parameters:    Size  Location     Type
  4824 ;;  _pin_config     1   10[COMRAM] PTR const struct .
  4825 ;;		 -> motor_2$dc_motor(2), motor_2(2), motor_1$dc_motor(2), motor_1(2), 
  4826 ;;		 -> lcd_1$lcd_data(4), lcd_1(6), relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), 
  4827 ;;		 -> relay_initialize@pin_obj(1), led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  4828 ;;  logic           1   11[COMRAM] enum E3230
  4829 ;; Auto vars:     Size  Location     Type
  4830 ;;  ret             1   17[COMRAM] unsigned char 
  4831 ;; Return value:  Size  Location     Type
  4832 ;;                  1    wreg      unsigned char 
  4833 ;; Registers used:
  4834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4835 ;; Tracked objects:
  4836 ;;		On entry : 0/0
  4837 ;;		On exit  : 0/0
  4838 ;;		Unchanged: 0/0
  4839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4840 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4841 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4842 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4843 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4844 ;;Total ram usage:        8 bytes
  4845 ;; Hardware stack levels used: 1
  4846 ;; Hardware stack levels required when called: 4
  4847 ;; This function calls:
  4848 ;;		Nothing
  4849 ;; This function is called by:
  4850 ;;		_lcd_4bit_send_command
  4851 ;;		_lcd_4bit_send_char_data
  4852 ;;		_lcd_send_4bits
  4853 ;;		_lcd_send_4bits_enable_signal
  4854 ;;		_dc_motor_move_right
  4855 ;;		_dc_motor_move_left
  4856 ;;		_dc_motor_stop
  4857 ;;		_gpio_pin_intialize
  4858 ;;		_seven_segment_write_number
  4859 ;;		_lcd_8bit_send_command
  4860 ;;		_lcd_8bit_send_char_data
  4861 ;;		_lcd_send_8bits_enable_signal
  4862 ;;		_keypad_get_value
  4863 ;;		_led_turn_on
  4864 ;;		_led_turn_off
  4865 ;;		_relay_turn_on
  4866 ;;		_relay_turn_off
  4867 ;; This function uses a non-reentrant model
  4868 ;;
  4869                           
  4870                           	psect	text29
  4871   001B30                     __ptext29:
  4872                           	callstack 0
  4873   001B30                     _gpio_pin_write_logic:
  4874                           	callstack 22
  4875   001B30                     
  4876                           ;MCAL_Layer/GPIO/hal_gpio.c: 85:     Std_ReturnType ret = (Std_ReturnType)0x01;
  4877   001B30  0E01               	movlw	1
  4878   001B32  6E12               	movwf	gpio_pin_write_logic@ret^0,c
  4879                           
  4880                           ;MCAL_Layer/GPIO/hal_gpio.c: 86:     if (((void*)0) == _pin_config || _pin_config->pin >
      +                           8 -1)
  4881   001B34  500B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  4882   001B36  B4D8               	btfsc	status,2,c
  4883   001B38  EFA0  F00D         	goto	u2771
  4884   001B3C  EFA2  F00D         	goto	u2770
  4885   001B40                     u2771:
  4886   001B40  EFB2  F00D         	goto	l3726
  4887   001B44                     u2770:
  4888   001B44  500B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  4889   001B46  6ED9               	movwf	fsr2l,c
  4890   001B48  6ADA               	clrf	fsr2h,c
  4891   001B4A  30DF               	rrcf	223,w,c
  4892   001B4C  32E8               	rrcf	wreg,f,c
  4893   001B4E  32E8               	rrcf	wreg,f,c
  4894   001B50  0B07               	andlw	7
  4895   001B52  6E0D               	movwf	??_gpio_pin_write_logic^0,c
  4896   001B54  0E07               	movlw	7
  4897   001B56  640D               	cpfsgt	??_gpio_pin_write_logic^0,c
  4898   001B58  EFB0  F00D         	goto	u2781
  4899   001B5C  EFB2  F00D         	goto	u2780
  4900   001B60                     u2781:
  4901   001B60  EF09  F00E         	goto	l3734
  4902   001B64                     u2780:
  4903   001B64                     l3726:
  4904                           
  4905                           ;MCAL_Layer/GPIO/hal_gpio.c: 87:     {;MCAL_Layer/GPIO/hal_gpio.c: 88:         ret = (St
      +                          d_ReturnType)0x00;
  4906   001B64  0E00               	movlw	0
  4907   001B66  6E12               	movwf	gpio_pin_write_logic@ret^0,c
  4908                           
  4909                           ;MCAL_Layer/GPIO/hal_gpio.c: 89:     }
  4910   001B68  EF1E  F00E         	goto	l3736
  4911   001B6C                     l3728:
  4912                           
  4913                           ;MCAL_Layer/GPIO/hal_gpio.c: 95:                 (*lat_registers[_pin_config->port] &= ~
      +                          ((uint8)1<<_pin_config->pin));
  4914   001B6C  500B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  4915   001B6E  6ED9               	movwf	fsr2l,c
  4916   001B70  6ADA               	clrf	fsr2h,c
  4917   001B72  30DF               	rrcf	223,w,c
  4918   001B74  32E8               	rrcf	wreg,f,c
  4919   001B76  32E8               	rrcf	wreg,f,c
  4920   001B78  0B07               	andlw	7
  4921   001B7A  6E0D               	movwf	??_gpio_pin_write_logic^0,c
  4922   001B7C  0E01               	movlw	1
  4923   001B7E  6E0E               	movwf	(??_gpio_pin_write_logic+1)^0,c
  4924   001B80  2A0D               	incf	??_gpio_pin_write_logic^0,f,c
  4925   001B82  EFC5  F00D         	goto	u2794
  4926   001B86                     u2795:
  4927   001B86  90D8               	bcf	status,0,c
  4928   001B88  360E               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  4929   001B8A                     u2794:
  4930   001B8A  2E0D               	decfsz	??_gpio_pin_write_logic^0,f,c
  4931   001B8C  EFC3  F00D         	goto	u2795
  4932   001B90  500E               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4933   001B92  0AFF               	xorlw	255
  4934   001B94  6E0F               	movwf	(??_gpio_pin_write_logic+2)^0,c
  4935   001B96  500B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  4936   001B98  6ED9               	movwf	fsr2l,c
  4937   001B9A  6ADA               	clrf	fsr2h,c
  4938   001B9C  50DF               	movf	223,w,c
  4939   001B9E  0B07               	andlw	7
  4940   001BA0  0D02               	mullw	2
  4941   001BA2  50F3               	movf	243,w,c
  4942   001BA4  0FC1               	addlw	low _lat_registers
  4943   001BA6  6ED9               	movwf	fsr2l,c
  4944   001BA8  6ADA               	clrf	fsr2h,c
  4945   001BAA  CFDE F010          	movff	postinc2,??_gpio_pin_write_logic+3
  4946   001BAE  CFDD F011          	movff	postdec2,??_gpio_pin_write_logic+4
  4947   001BB2  C010  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  4948   001BB6  C011  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  4949   001BBA  500F               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  4950   001BBC  16DF               	andwf	indf2,f,c
  4951                           
  4952                           ;MCAL_Layer/GPIO/hal_gpio.c: 96:                 break;
  4953   001BBE  EF1E  F00E         	goto	l3736
  4954   001BC2                     l3730:
  4955                           
  4956                           ;MCAL_Layer/GPIO/hal_gpio.c: 98:                 (*lat_registers[_pin_config->port] |= (
      +                          (uint8)1<<_pin_config->pin));
  4957   001BC2  500B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  4958   001BC4  6ED9               	movwf	fsr2l,c
  4959   001BC6  6ADA               	clrf	fsr2h,c
  4960   001BC8  30DF               	rrcf	223,w,c
  4961   001BCA  32E8               	rrcf	wreg,f,c
  4962   001BCC  32E8               	rrcf	wreg,f,c
  4963   001BCE  0B07               	andlw	7
  4964   001BD0  6E0D               	movwf	??_gpio_pin_write_logic^0,c
  4965   001BD2  0E01               	movlw	1
  4966   001BD4  6E0E               	movwf	(??_gpio_pin_write_logic+1)^0,c
  4967   001BD6  2A0D               	incf	??_gpio_pin_write_logic^0,f,c
  4968   001BD8  EFF0  F00D         	goto	u2804
  4969   001BDC                     u2805:
  4970   001BDC  90D8               	bcf	status,0,c
  4971   001BDE  360E               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  4972   001BE0                     u2804:
  4973   001BE0  2E0D               	decfsz	??_gpio_pin_write_logic^0,f,c
  4974   001BE2  EFEE  F00D         	goto	u2805
  4975   001BE6  500B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  4976   001BE8  6ED9               	movwf	fsr2l,c
  4977   001BEA  6ADA               	clrf	fsr2h,c
  4978   001BEC  50DF               	movf	223,w,c
  4979   001BEE  0B07               	andlw	7
  4980   001BF0  0D02               	mullw	2
  4981   001BF2  50F3               	movf	243,w,c
  4982   001BF4  0FC1               	addlw	low _lat_registers
  4983   001BF6  6ED9               	movwf	fsr2l,c
  4984   001BF8  6ADA               	clrf	fsr2h,c
  4985   001BFA  CFDE F00F          	movff	postinc2,??_gpio_pin_write_logic+2
  4986   001BFE  CFDD F010          	movff	postdec2,??_gpio_pin_write_logic+3
  4987   001C02  C00F  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  4988   001C06  C010  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  4989   001C0A  500E               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4990   001C0C  12DF               	iorwf	indf2,f,c
  4991                           
  4992                           ;MCAL_Layer/GPIO/hal_gpio.c: 99:                 break;
  4993   001C0E  EF1E  F00E         	goto	l3736
  4994   001C12                     l3734:
  4995   001C12  500C               	movf	gpio_pin_write_logic@logic^0,w,c
  4996   001C14  6E0D               	movwf	??_gpio_pin_write_logic^0,c
  4997   001C16  6A0E               	clrf	(??_gpio_pin_write_logic+1)^0,c
  4998                           
  4999                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5000                           ; Switch size 1, requested type "simple"
  5001                           ; Number of cases is 1, Range of values is 0 to 0
  5002                           ; switch strategies available:
  5003                           ; Name         Instructions Cycles
  5004                           ; simple_byte            4     3 (average)
  5005                           ;	Chosen strategy is simple_byte
  5006   001C18  500E               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5007   001C1A  0A00               	xorlw	0	; case 0
  5008   001C1C  B4D8               	btfsc	status,2,c
  5009   001C1E  EF13  F00E         	goto	l5904
  5010   001C22  EFB2  F00D         	goto	l3726
  5011   001C26                     l5904:
  5012                           
  5013                           ; Switch size 1, requested type "simple"
  5014                           ; Number of cases is 2, Range of values is 0 to 1
  5015                           ; switch strategies available:
  5016                           ; Name         Instructions Cycles
  5017                           ; simple_byte            7     4 (average)
  5018                           ;	Chosen strategy is simple_byte
  5019   001C26  500D               	movf	??_gpio_pin_write_logic^0,w,c
  5020   001C28  0A00               	xorlw	0	; case 0
  5021   001C2A  B4D8               	btfsc	status,2,c
  5022   001C2C  EFB6  F00D         	goto	l3728
  5023   001C30  0A01               	xorlw	1	; case 1
  5024   001C32  B4D8               	btfsc	status,2,c
  5025   001C34  EFE1  F00D         	goto	l3730
  5026   001C38  EFB2  F00D         	goto	l3726
  5027   001C3C                     l3736:
  5028                           
  5029                           ;MCAL_Layer/GPIO/hal_gpio.c: 105:     return ret;
  5030   001C3C  5012               	movf	gpio_pin_write_logic@ret^0,w,c
  5031   001C3E  0012               	return		;funcret
  5032   001C40                     __end_of_gpio_pin_write_logic:
  5033                           	callstack 0
  5034                           
  5035 ;; *************** function _gpio_pin_direction_intialize *****************
  5036 ;; Defined at:
  5037 ;;		line 27 in file "MCAL_Layer/GPIO/hal_gpio.c"
  5038 ;; Parameters:    Size  Location     Type
  5039 ;;  _pin_config     1   10[COMRAM] PTR const struct .
  5040 ;;		 -> motor_2$dc_motor(2), motor_2(2), motor_1$dc_motor(2), motor_1(2), 
  5041 ;;		 -> lcd_1$lcd_data(4), lcd_1(6), relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  5042 ;; Auto vars:     Size  Location     Type
  5043 ;;  ret             1   16[COMRAM] unsigned char 
  5044 ;; Return value:  Size  Location     Type
  5045 ;;                  1    wreg      unsigned char 
  5046 ;; Registers used:
  5047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5048 ;; Tracked objects:
  5049 ;;		On entry : 0/0
  5050 ;;		On exit  : 0/0
  5051 ;;		Unchanged: 0/0
  5052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5053 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5054 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5055 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5056 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5057 ;;Total ram usage:        7 bytes
  5058 ;; Hardware stack levels used: 1
  5059 ;; Hardware stack levels required when called: 4
  5060 ;; This function calls:
  5061 ;;		Nothing
  5062 ;; This function is called by:
  5063 ;;		_gpio_pin_intialize
  5064 ;;		_button_initialize
  5065 ;;		_keypad_initialize
  5066 ;;		_Interrupt_RBx_Init
  5067 ;;		_Interrupt_INTx_Pin_Init
  5068 ;; This function uses a non-reentrant model
  5069 ;;
  5070                           
  5071                           	psect	text30
  5072   001A1E                     __ptext30:
  5073                           	callstack 0
  5074   001A1E                     _gpio_pin_direction_intialize:
  5075                           	callstack 23
  5076   001A1E                     
  5077                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:     Std_ReturnType ret = (Std_ReturnType)0x01;
  5078   001A1E  0E01               	movlw	1
  5079   001A20  6E11               	movwf	gpio_pin_direction_intialize@ret^0,c
  5080                           
  5081                           ;MCAL_Layer/GPIO/hal_gpio.c: 29:     if (((void*)0) == _pin_config || _pin_config->pin >
      +                           8 -1)
  5082   001A22  500B               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  5083   001A24  B4D8               	btfsc	status,2,c
  5084   001A26  EF17  F00D         	goto	u2981
  5085   001A2A  EF19  F00D         	goto	u2980
  5086   001A2E                     u2981:
  5087   001A2E  EF29  F00D         	goto	l3846
  5088   001A32                     u2980:
  5089   001A32  500B               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  5090   001A34  6ED9               	movwf	fsr2l,c
  5091   001A36  6ADA               	clrf	fsr2h,c
  5092   001A38  30DF               	rrcf	223,w,c
  5093   001A3A  32E8               	rrcf	wreg,f,c
  5094   001A3C  32E8               	rrcf	wreg,f,c
  5095   001A3E  0B07               	andlw	7
  5096   001A40  6E0C               	movwf	??_gpio_pin_direction_intialize^0,c
  5097   001A42  0E07               	movlw	7
  5098   001A44  640C               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  5099   001A46  EF27  F00D         	goto	u2991
  5100   001A4A  EF29  F00D         	goto	u2990
  5101   001A4E                     u2991:
  5102   001A4E  EF80  F00D         	goto	l3854
  5103   001A52                     u2990:
  5104   001A52                     l3846:
  5105                           
  5106                           ;MCAL_Layer/GPIO/hal_gpio.c: 30:     {;MCAL_Layer/GPIO/hal_gpio.c: 31:         ret = (St
      +                          d_ReturnType)0x00;
  5107   001A52  0E00               	movlw	0
  5108   001A54  6E11               	movwf	gpio_pin_direction_intialize@ret^0,c
  5109                           
  5110                           ;MCAL_Layer/GPIO/hal_gpio.c: 32:     }
  5111   001A56  EF96  F00D         	goto	l3856
  5112   001A5A                     l3848:
  5113                           
  5114                           ;MCAL_Layer/GPIO/hal_gpio.c: 38:                 (*tris_registers[_pin_config->port] &= 
      +                          ~((uint8)1<<_pin_config->pin));
  5115   001A5A  500B               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  5116   001A5C  6ED9               	movwf	fsr2l,c
  5117   001A5E  6ADA               	clrf	fsr2h,c
  5118   001A60  30DF               	rrcf	223,w,c
  5119   001A62  32E8               	rrcf	wreg,f,c
  5120   001A64  32E8               	rrcf	wreg,f,c
  5121   001A66  0B07               	andlw	7
  5122   001A68  6E0C               	movwf	??_gpio_pin_direction_intialize^0,c
  5123   001A6A  0E01               	movlw	1
  5124   001A6C  6E0D               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  5125   001A6E  2A0C               	incf	??_gpio_pin_direction_intialize^0,f,c
  5126   001A70  EF3C  F00D         	goto	u3004
  5127   001A74                     u3005:
  5128   001A74  90D8               	bcf	status,0,c
  5129   001A76  360D               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  5130   001A78                     u3004:
  5131   001A78  2E0C               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  5132   001A7A  EF3A  F00D         	goto	u3005
  5133   001A7E  500D               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  5134   001A80  0AFF               	xorlw	255
  5135   001A82  6E0E               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  5136   001A84  500B               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  5137   001A86  6ED9               	movwf	fsr2l,c
  5138   001A88  6ADA               	clrf	fsr2h,c
  5139   001A8A  50DF               	movf	223,w,c
  5140   001A8C  0B07               	andlw	7
  5141   001A8E  0D02               	mullw	2
  5142   001A90  50F3               	movf	243,w,c
  5143   001A92  0FCB               	addlw	low _tris_registers
  5144   001A94  6ED9               	movwf	fsr2l,c
  5145   001A96  6ADA               	clrf	fsr2h,c
  5146   001A98  CFDE F00F          	movff	postinc2,??_gpio_pin_direction_intialize+3
  5147   001A9C  CFDD F010          	movff	postdec2,??_gpio_pin_direction_intialize+4
  5148   001AA0  C00F  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  5149   001AA4  C010  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  5150   001AA8  500E               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  5151   001AAA  16DF               	andwf	indf2,f,c
  5152                           
  5153                           ;MCAL_Layer/GPIO/hal_gpio.c: 39:                 break;
  5154   001AAC  EF96  F00D         	goto	l3856
  5155   001AB0                     l3850:
  5156                           
  5157                           ;MCAL_Layer/GPIO/hal_gpio.c: 41:                 (*tris_registers[_pin_config->port] |= 
      +                          ((uint8)1<<_pin_config->pin));
  5158   001AB0  500B               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  5159   001AB2  6ED9               	movwf	fsr2l,c
  5160   001AB4  6ADA               	clrf	fsr2h,c
  5161   001AB6  30DF               	rrcf	223,w,c
  5162   001AB8  32E8               	rrcf	wreg,f,c
  5163   001ABA  32E8               	rrcf	wreg,f,c
  5164   001ABC  0B07               	andlw	7
  5165   001ABE  6E0C               	movwf	??_gpio_pin_direction_intialize^0,c
  5166   001AC0  0E01               	movlw	1
  5167   001AC2  6E0D               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  5168   001AC4  2A0C               	incf	??_gpio_pin_direction_intialize^0,f,c
  5169   001AC6  EF67  F00D         	goto	u3014
  5170   001ACA                     u3015:
  5171   001ACA  90D8               	bcf	status,0,c
  5172   001ACC  360D               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  5173   001ACE                     u3014:
  5174   001ACE  2E0C               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  5175   001AD0  EF65  F00D         	goto	u3015
  5176   001AD4  500B               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  5177   001AD6  6ED9               	movwf	fsr2l,c
  5178   001AD8  6ADA               	clrf	fsr2h,c
  5179   001ADA  50DF               	movf	223,w,c
  5180   001ADC  0B07               	andlw	7
  5181   001ADE  0D02               	mullw	2
  5182   001AE0  50F3               	movf	243,w,c
  5183   001AE2  0FCB               	addlw	low _tris_registers
  5184   001AE4  6ED9               	movwf	fsr2l,c
  5185   001AE6  6ADA               	clrf	fsr2h,c
  5186   001AE8  CFDE F00E          	movff	postinc2,??_gpio_pin_direction_intialize+2
  5187   001AEC  CFDD F00F          	movff	postdec2,??_gpio_pin_direction_intialize+3
  5188   001AF0  C00E  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
  5189   001AF4  C00F  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
  5190   001AF8  500D               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  5191   001AFA  12DF               	iorwf	indf2,f,c
  5192                           
  5193                           ;MCAL_Layer/GPIO/hal_gpio.c: 42:                 break;
  5194   001AFC  EF96  F00D         	goto	l3856
  5195   001B00                     l3854:
  5196   001B00  500B               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  5197   001B02  6ED9               	movwf	fsr2l,c
  5198   001B04  6ADA               	clrf	fsr2h,c
  5199   001B06  BCDF               	btfsc	indf2,6,c
  5200   001B08  EF88  F00D         	goto	u3021
  5201   001B0C  EF8B  F00D         	goto	u3020
  5202   001B10                     u3021:
  5203   001B10  0E01               	movlw	1
  5204   001B12  EF8C  F00D         	goto	u3026
  5205   001B16                     u3020:
  5206   001B16  0E00               	movlw	0
  5207   001B18                     u3026:
  5208                           
  5209                           ; Switch size 1, requested type "simple"
  5210                           ; Number of cases is 2, Range of values is 0 to 1
  5211                           ; switch strategies available:
  5212                           ; Name         Instructions Cycles
  5213                           ; simple_byte            7     4 (average)
  5214                           ;	Chosen strategy is simple_byte
  5215   001B18  0A00               	xorlw	0	; case 0
  5216   001B1A  B4D8               	btfsc	status,2,c
  5217   001B1C  EF2D  F00D         	goto	l3848
  5218   001B20  0A01               	xorlw	1	; case 1
  5219   001B22  B4D8               	btfsc	status,2,c
  5220   001B24  EF58  F00D         	goto	l3850
  5221   001B28  EF29  F00D         	goto	l3846
  5222   001B2C                     l3856:
  5223                           
  5224                           ;MCAL_Layer/GPIO/hal_gpio.c: 46:     return ret;
  5225   001B2C  5011               	movf	gpio_pin_direction_intialize@ret^0,w,c
  5226   001B2E  0012               	return		;funcret
  5227   001B30                     __end_of_gpio_pin_direction_intialize:
  5228                           	callstack 0
  5229                           
  5230 ;; *************** function _ADC_Init *****************
  5231 ;; Defined at:
  5232 ;;		line 29 in file "MCAL_Layer/ADC/hal_adc.c"
  5233 ;; Parameters:    Size  Location     Type
  5234 ;;  _adc            1   13[COMRAM] PTR const struct .
  5235 ;;		 -> adc_1(7), 
  5236 ;; Auto vars:     Size  Location     Type
  5237 ;;  ret             1   15[COMRAM] unsigned char 
  5238 ;; Return value:  Size  Location     Type
  5239 ;;                  1    wreg      unsigned char 
  5240 ;; Registers used:
  5241 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5242 ;; Tracked objects:
  5243 ;;		On entry : 0/0
  5244 ;;		On exit  : 0/0
  5245 ;;		Unchanged: 0/0
  5246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5247 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5248 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5249 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5250 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5251 ;;Total ram usage:        3 bytes
  5252 ;; Hardware stack levels used: 1
  5253 ;; Hardware stack levels required when called: 5
  5254 ;; This function calls:
  5255 ;;		_adc_input_channel_port_configure
  5256 ;;		_configure_voltage_reference
  5257 ;;		_select_result_format
  5258 ;; This function is called by:
  5259 ;;		_Application
  5260 ;; This function uses a non-reentrant model
  5261 ;;
  5262                           
  5263                           	psect	text31
  5264   002136                     __ptext31:
  5265                           	callstack 0
  5266   002136                     _ADC_Init:
  5267                           	callstack 24
  5268   002136                     
  5269                           ;MCAL_Layer/ADC/hal_adc.c: 30:     Std_ReturnType ret = (Std_ReturnType)0x01;
  5270   002136  0E01               	movlw	1
  5271   002138  6E10               	movwf	ADC_Init@ret^0,c
  5272                           
  5273                           ;MCAL_Layer/ADC/hal_adc.c: 31:     if (((void*)0) == _adc)
  5274   00213A  500E               	movf	ADC_Init@_adc^0,w,c
  5275   00213C  A4D8               	btfss	status,2,c
  5276   00213E  EFA3  F010         	goto	u3401
  5277   002142  EFA5  F010         	goto	u3400
  5278   002146                     u3401:
  5279   002146  EFA9  F010         	goto	l876
  5280   00214A                     u3400:
  5281   00214A                     
  5282                           ;MCAL_Layer/ADC/hal_adc.c: 32:     {;MCAL_Layer/ADC/hal_adc.c: 33:         ret = (Std_Re
      +                          turnType)0x00;
  5283   00214A  0E00               	movlw	0
  5284   00214C  6E10               	movwf	ADC_Init@ret^0,c
  5285                           
  5286                           ;MCAL_Layer/ADC/hal_adc.c: 34:     }
  5287   00214E  EFEF  F010         	goto	l4212
  5288   002152                     l876:
  5289                           
  5290                           ;MCAL_Layer/ADC/hal_adc.c: 36:     {;MCAL_Layer/ADC/hal_adc.c: 38:         (ADCON0bits.A
      +                          DON = 0);
  5291   002152  90C2               	bcf	194,0,c	;volatile
  5292   002154                     
  5293                           ;MCAL_Layer/ADC/hal_adc.c: 40:         ADCON2bits.ACQT = _adc->Acquisition_time;
  5294   002154  500E               	movf	ADC_Init@_adc^0,w,c
  5295   002156  6ED9               	movwf	fsr2l,c
  5296   002158  6ADA               	clrf	fsr2h,c
  5297   00215A  0E03               	movlw	3
  5298   00215C  26D9               	addwf	fsr2l,f,c
  5299   00215E  50DF               	movf	indf2,w,c
  5300   002160  6E0F               	movwf	??_ADC_Init^0,c
  5301   002162  460F               	rlncf	??_ADC_Init^0,f,c
  5302   002164  460F               	rlncf	??_ADC_Init^0,f,c
  5303   002166  460F               	rlncf	??_ADC_Init^0,f,c
  5304   002168  50C0               	movf	192,w,c	;volatile
  5305   00216A  180F               	xorwf	??_ADC_Init^0,w,c
  5306   00216C  0BC7               	andlw	-57
  5307   00216E  180F               	xorwf	??_ADC_Init^0,w,c
  5308   002170  6EC0               	movwf	192,c	;volatile
  5309                           
  5310                           ;MCAL_Layer/ADC/hal_adc.c: 42:         ADCON2bits.ADCS = _adc->convertion_clock;
  5311   002172  500E               	movf	ADC_Init@_adc^0,w,c
  5312   002174  6ED9               	movwf	fsr2l,c
  5313   002176  6ADA               	clrf	fsr2h,c
  5314   002178  0E04               	movlw	4
  5315   00217A  26D9               	addwf	fsr2l,f,c
  5316   00217C  50DF               	movf	indf2,w,c
  5317   00217E  6E0F               	movwf	??_ADC_Init^0,c
  5318   002180  50C0               	movf	192,w,c	;volatile
  5319   002182  180F               	xorwf	??_ADC_Init^0,w,c
  5320   002184  0BF8               	andlw	-8
  5321   002186  180F               	xorwf	??_ADC_Init^0,w,c
  5322   002188  6EC0               	movwf	192,c	;volatile
  5323                           
  5324                           ;MCAL_Layer/ADC/hal_adc.c: 44:         ADCON0bits.CHS = _adc->adc_channel;
  5325   00218A  500E               	movf	ADC_Init@_adc^0,w,c
  5326   00218C  6ED9               	movwf	fsr2l,c
  5327   00218E  6ADA               	clrf	fsr2h,c
  5328   002190  0E05               	movlw	5
  5329   002192  26D9               	addwf	fsr2l,f,c
  5330   002194  50DF               	movf	indf2,w,c
  5331   002196  6E0F               	movwf	??_ADC_Init^0,c
  5332   002198  460F               	rlncf	??_ADC_Init^0,f,c
  5333   00219A  460F               	rlncf	??_ADC_Init^0,f,c
  5334   00219C  50C2               	movf	194,w,c	;volatile
  5335   00219E  180F               	xorwf	??_ADC_Init^0,w,c
  5336   0021A0  0BC3               	andlw	-61
  5337   0021A2  180F               	xorwf	??_ADC_Init^0,w,c
  5338   0021A4  6EC2               	movwf	194,c	;volatile
  5339   0021A6                     
  5340                           ;MCAL_Layer/ADC/hal_adc.c: 45:         adc_input_channel_port_configure(_adc->adc_channe
      +                          l);
  5341   0021A6  500E               	movf	ADC_Init@_adc^0,w,c
  5342   0021A8  6ED9               	movwf	fsr2l,c
  5343   0021AA  6ADA               	clrf	fsr2h,c
  5344   0021AC  0E05               	movlw	5
  5345   0021AE  26D9               	addwf	fsr2l,f,c
  5346   0021B0  50DF               	movf	indf2,w,c
  5347   0021B2  EC17  F00F         	call	_adc_input_channel_port_configure
  5348   0021B6                     
  5349                           ;MCAL_Layer/ADC/hal_adc.c: 48:         (INTCONbits.GIE = 1);
  5350   0021B6  8EF2               	bsf	242,7,c	;volatile
  5351   0021B8                     
  5352                           ;MCAL_Layer/ADC/hal_adc.c: 49:         (INTCONbits.PEIE = 1);
  5353   0021B8  8CF2               	bsf	242,6,c	;volatile
  5354   0021BA                     
  5355                           ;MCAL_Layer/ADC/hal_adc.c: 50:         (PIE1bits.ADIE = 1);
  5356   0021BA  8C9D               	bsf	157,6,c	;volatile
  5357   0021BC                     
  5358                           ;MCAL_Layer/ADC/hal_adc.c: 51:         (PIR1bits.ADIF = 0);
  5359   0021BC  9C9E               	bcf	158,6,c	;volatile
  5360   0021BE                     
  5361                           ;MCAL_Layer/ADC/hal_adc.c: 57:         ADC_InterruptHandler = _adc->ADC_InterruptHandler
      +                          ;
  5362   0021BE  500E               	movf	ADC_Init@_adc^0,w,c
  5363   0021C0  6ED9               	movwf	fsr2l,c
  5364   0021C2  6ADA               	clrf	fsr2h,c
  5365   0021C4  CFDE F036          	movff	postinc2,_ADC_InterruptHandler
  5366   0021C8  CFDD F037          	movff	postdec2,_ADC_InterruptHandler+1
  5367   0021CC                     
  5368                           ;MCAL_Layer/ADC/hal_adc.c: 60:         select_result_format(_adc);
  5369   0021CC  C00E  F00B         	movff	ADC_Init@_adc,select_result_format@_adc
  5370   0021D0  EC8E  F013         	call	_select_result_format	;wreg free
  5371   0021D4                     
  5372                           ;MCAL_Layer/ADC/hal_adc.c: 62:         configure_voltage_reference(_adc);
  5373   0021D4  C00E  F00B         	movff	ADC_Init@_adc,configure_voltage_reference@_adc
  5374   0021D8  EC61  F013         	call	_configure_voltage_reference	;wreg free
  5375   0021DC                     
  5376                           ;MCAL_Layer/ADC/hal_adc.c: 64:         (ADCON0bits.ADON = 1);
  5377   0021DC  80C2               	bsf	194,0,c	;volatile
  5378   0021DE                     l4212:
  5379                           
  5380                           ;MCAL_Layer/ADC/hal_adc.c: 66:     return ret;
  5381   0021DE  5010               	movf	ADC_Init@ret^0,w,c
  5382   0021E0  0012               	return		;funcret
  5383   0021E2                     __end_of_ADC_Init:
  5384                           	callstack 0
  5385                           
  5386 ;; *************** function _select_result_format *****************
  5387 ;; Defined at:
  5388 ;;		line 270 in file "MCAL_Layer/ADC/hal_adc.c"
  5389 ;; Parameters:    Size  Location     Type
  5390 ;;  _adc            1   10[COMRAM] PTR const struct .
  5391 ;;		 -> adc_1(7), 
  5392 ;; Auto vars:     Size  Location     Type
  5393 ;;  ret             1    0        unsigned char 
  5394 ;; Return value:  Size  Location     Type
  5395 ;;                  1    wreg      unsigned char 
  5396 ;; Registers used:
  5397 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5398 ;; Tracked objects:
  5399 ;;		On entry : 0/0
  5400 ;;		On exit  : 0/0
  5401 ;;		Unchanged: 0/0
  5402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5403 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5406 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5407 ;;Total ram usage:        1 bytes
  5408 ;; Hardware stack levels used: 1
  5409 ;; Hardware stack levels required when called: 4
  5410 ;; This function calls:
  5411 ;;		Nothing
  5412 ;; This function is called by:
  5413 ;;		_ADC_Init
  5414 ;; This function uses a non-reentrant model
  5415 ;;
  5416                           
  5417                           	psect	text32
  5418   00271C                     __ptext32:
  5419                           	callstack 0
  5420   00271C                     _select_result_format:
  5421                           	callstack 24
  5422   00271C                     
  5423                           ;MCAL_Layer/ADC/hal_adc.c: 272:     if (((void*)0) == _adc)
  5424   00271C  500B               	movf	select_result_format@_adc^0,w,c
  5425   00271E  A4D8               	btfss	status,2,c
  5426   002720  EF94  F013         	goto	u3231
  5427   002724  EF96  F013         	goto	u3230
  5428   002728                     u3231:
  5429   002728  EF98  F013         	goto	l4016
  5430   00272C                     u3230:
  5431   00272C                     
  5432                           ;MCAL_Layer/ADC/hal_adc.c: 275:     }
  5433   00272C  EFB7  F013         	goto	l954
  5434   002730                     l4016:
  5435                           
  5436                           ;MCAL_Layer/ADC/hal_adc.c: 277:     {;MCAL_Layer/ADC/hal_adc.c: 278:         if (0X01U =
      +                          = _adc->result_format)
  5437   002730  500B               	movf	select_result_format@_adc^0,w,c
  5438   002732  6ED9               	movwf	fsr2l,c
  5439   002734  6ADA               	clrf	fsr2h,c
  5440   002736  0E06               	movlw	6
  5441   002738  26D9               	addwf	fsr2l,f,c
  5442   00273A  A2DF               	btfss	indf2,1,c
  5443   00273C  EFA2  F013         	goto	u3241
  5444   002740  EFA4  F013         	goto	u3240
  5445   002744                     u3241:
  5446   002744  EFA7  F013         	goto	l4020
  5447   002748                     u3240:
  5448   002748                     
  5449                           ;MCAL_Layer/ADC/hal_adc.c: 279:         {;MCAL_Layer/ADC/hal_adc.c: 280:             (AD
      +                          CON2bits.ADFM = 1);
  5450   002748  8EC0               	bsf	192,7,c	;volatile
  5451                           
  5452                           ;MCAL_Layer/ADC/hal_adc.c: 281:         }
  5453   00274A  EFB7  F013         	goto	l954
  5454   00274E                     l4020:
  5455   00274E  500B               	movf	select_result_format@_adc^0,w,c
  5456   002750  6ED9               	movwf	fsr2l,c
  5457   002752  6ADA               	clrf	fsr2h,c
  5458   002754  0E06               	movlw	6
  5459   002756  26D9               	addwf	fsr2l,f,c
  5460   002758  B2DF               	btfsc	indf2,1,c
  5461   00275A  EFB1  F013         	goto	u3251
  5462   00275E  EFB3  F013         	goto	u3250
  5463   002762                     u3251:
  5464   002762  EFB6  F013         	goto	l952
  5465   002766                     u3250:
  5466   002766                     
  5467                           ;MCAL_Layer/ADC/hal_adc.c: 283:         {;MCAL_Layer/ADC/hal_adc.c: 284:             (AD
      +                          CON2bits.ADFM = 0);
  5468   002766  9EC0               	bcf	192,7,c	;volatile
  5469                           
  5470                           ;MCAL_Layer/ADC/hal_adc.c: 285:         }
  5471   002768  EFB7  F013         	goto	l954
  5472   00276C                     l952:
  5473                           
  5474                           ;MCAL_Layer/ADC/hal_adc.c: 287:         {;MCAL_Layer/ADC/hal_adc.c: 288:             (AD
      +                          CON2bits.ADFM = 1);
  5475   00276C  8EC0               	bsf	192,7,c	;volatile
  5476   00276E                     l954:
  5477   00276E  0012               	return		;funcret
  5478   002770                     __end_of_select_result_format:
  5479                           	callstack 0
  5480                           
  5481 ;; *************** function _configure_voltage_reference *****************
  5482 ;; Defined at:
  5483 ;;		line 294 in file "MCAL_Layer/ADC/hal_adc.c"
  5484 ;; Parameters:    Size  Location     Type
  5485 ;;  _adc            1   10[COMRAM] PTR const struct .
  5486 ;;		 -> adc_1(7), 
  5487 ;; Auto vars:     Size  Location     Type
  5488 ;;  ret             1    0        unsigned char 
  5489 ;; Return value:  Size  Location     Type
  5490 ;;                  1    wreg      unsigned char 
  5491 ;; Registers used:
  5492 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5493 ;; Tracked objects:
  5494 ;;		On entry : 0/0
  5495 ;;		On exit  : 0/0
  5496 ;;		Unchanged: 0/0
  5497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5498 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5501 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5502 ;;Total ram usage:        1 bytes
  5503 ;; Hardware stack levels used: 1
  5504 ;; Hardware stack levels required when called: 4
  5505 ;; This function calls:
  5506 ;;		Nothing
  5507 ;; This function is called by:
  5508 ;;		_ADC_Init
  5509 ;; This function uses a non-reentrant model
  5510 ;;
  5511                           
  5512                           	psect	text33
  5513   0026C2                     __ptext33:
  5514                           	callstack 0
  5515   0026C2                     _configure_voltage_reference:
  5516                           	callstack 24
  5517   0026C2                     
  5518                           ;MCAL_Layer/ADC/hal_adc.c: 296:     if (((void*)0) == _adc)
  5519   0026C2  500B               	movf	configure_voltage_reference@_adc^0,w,c
  5520   0026C4  A4D8               	btfss	status,2,c
  5521   0026C6  EF67  F013         	goto	u3261
  5522   0026CA  EF69  F013         	goto	u3260
  5523   0026CE                     u3261:
  5524   0026CE  EF6B  F013         	goto	l4028
  5525   0026D2                     u3260:
  5526   0026D2                     
  5527                           ;MCAL_Layer/ADC/hal_adc.c: 299:     }
  5528   0026D2  EF8D  F013         	goto	l969
  5529   0026D6                     l4028:
  5530                           
  5531                           ;MCAL_Layer/ADC/hal_adc.c: 301:     {;MCAL_Layer/ADC/hal_adc.c: 302:         if (0X01U =
      +                          = _adc->voltage_reference)
  5532   0026D6  500B               	movf	configure_voltage_reference@_adc^0,w,c
  5533   0026D8  6ED9               	movwf	fsr2l,c
  5534   0026DA  6ADA               	clrf	fsr2h,c
  5535   0026DC  0E06               	movlw	6
  5536   0026DE  26D9               	addwf	fsr2l,f,c
  5537   0026E0  A0DF               	btfss	indf2,0,c
  5538   0026E2  EF75  F013         	goto	u3271
  5539   0026E6  EF77  F013         	goto	u3270
  5540   0026EA                     u3271:
  5541   0026EA  EF7B  F013         	goto	l4030
  5542   0026EE                     u3270:
  5543   0026EE  8AC1               	bsf	193,5,c	;volatile
  5544   0026F0  88C1               	bsf	193,4,c	;volatile
  5545   0026F2  EF8D  F013         	goto	l969
  5546   0026F6                     l4030:
  5547   0026F6  500B               	movf	configure_voltage_reference@_adc^0,w,c
  5548   0026F8  6ED9               	movwf	fsr2l,c
  5549   0026FA  6ADA               	clrf	fsr2h,c
  5550   0026FC  0E06               	movlw	6
  5551   0026FE  26D9               	addwf	fsr2l,f,c
  5552   002700  B0DF               	btfsc	indf2,0,c
  5553   002702  EF85  F013         	goto	u3281
  5554   002706  EF87  F013         	goto	u3280
  5555   00270A                     u3281:
  5556   00270A  EF8B  F013         	goto	l967
  5557   00270E                     u3280:
  5558   00270E  9AC1               	bcf	193,5,c	;volatile
  5559   002710  98C1               	bcf	193,4,c	;volatile
  5560   002712  EF8D  F013         	goto	l969
  5561   002716                     l967:
  5562   002716  9AC1               	bcf	193,5,c	;volatile
  5563   002718  98C1               	bcf	193,4,c	;volatile
  5564   00271A                     l969:
  5565   00271A  0012               	return		;funcret
  5566   00271C                     __end_of_configure_voltage_reference:
  5567                           	callstack 0
  5568                           
  5569 ;; *************** function _ADC_GetConversion_Interrupt *****************
  5570 ;; Defined at:
  5571 ;;		line 233 in file "MCAL_Layer/ADC/hal_adc.c"
  5572 ;; Parameters:    Size  Location     Type
  5573 ;;  _adc            1   17[COMRAM] PTR const struct .
  5574 ;;		 -> adc_1(7), 
  5575 ;;  channel         1   18[COMRAM] enum E3294
  5576 ;; Auto vars:     Size  Location     Type
  5577 ;;  ret             1   19[COMRAM] unsigned char 
  5578 ;; Return value:  Size  Location     Type
  5579 ;;                  1    wreg      unsigned char 
  5580 ;; Registers used:
  5581 ;;		wreg, status,2, status,0, cstack
  5582 ;; Tracked objects:
  5583 ;;		On entry : 0/0
  5584 ;;		On exit  : 0/0
  5585 ;;		Unchanged: 0/0
  5586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5587 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5588 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5590 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5591 ;;Total ram usage:        3 bytes
  5592 ;; Hardware stack levels used: 1
  5593 ;; Hardware stack levels required when called: 6
  5594 ;; This function calls:
  5595 ;;		_ADC_SelectChannel
  5596 ;;		_ADC_StartConversion
  5597 ;; This function is called by:
  5598 ;;		_main
  5599 ;; This function uses a non-reentrant model
  5600 ;;
  5601                           
  5602                           	psect	text34
  5603   0029BA                     __ptext34:
  5604                           	callstack 0
  5605   0029BA                     _ADC_GetConversion_Interrupt:
  5606                           	callstack 24
  5607   0029BA                     
  5608                           ;MCAL_Layer/ADC/hal_adc.c: 235:     if (((void*)0) == _adc)
  5609   0029BA  5012               	movf	ADC_GetConversion_Interrupt@_adc^0,w,c
  5610   0029BC  A4D8               	btfss	status,2,c
  5611   0029BE  EFE3  F014         	goto	u3681
  5612   0029C2  EFE5  F014         	goto	u3680
  5613   0029C6                     u3681:
  5614   0029C6  EFE9  F014         	goto	l4464
  5615   0029CA                     u3680:
  5616   0029CA                     
  5617                           ;MCAL_Layer/ADC/hal_adc.c: 236:     {;MCAL_Layer/ADC/hal_adc.c: 237:         ret = (Std_
      +                          ReturnType)0x00;
  5618   0029CA  0E00               	movlw	0
  5619   0029CC  6E14               	movwf	ADC_GetConversion_Interrupt@ret^0,c
  5620                           
  5621                           ;MCAL_Layer/ADC/hal_adc.c: 238:     }
  5622   0029CE  EFF5  F014         	goto	l4466
  5623   0029D2                     l4464:
  5624                           
  5625                           ;MCAL_Layer/ADC/hal_adc.c: 240:     {;MCAL_Layer/ADC/hal_adc.c: 242:         ret = ADC_S
      +                          electChannel (_adc, channel);
  5626   0029D2  C012  F00E         	movff	ADC_GetConversion_Interrupt@_adc,ADC_SelectChannel@_adc
  5627   0029D6  C013  F00F         	movff	ADC_GetConversion_Interrupt@channel,ADC_SelectChannel@channel
  5628   0029DA  EC72  F014         	call	_ADC_SelectChannel	;wreg free
  5629   0029DE  6E14               	movwf	ADC_GetConversion_Interrupt@ret^0,c
  5630                           
  5631                           ;MCAL_Layer/ADC/hal_adc.c: 244:         ret |= ADC_StartConversion (_adc);
  5632   0029E0  C012  F00B         	movff	ADC_GetConversion_Interrupt@_adc,ADC_StartConversion@_adc
  5633   0029E4  EC54  F015         	call	_ADC_StartConversion	;wreg free
  5634   0029E8  1214               	iorwf	ADC_GetConversion_Interrupt@ret^0,f,c
  5635   0029EA                     l4466:
  5636                           
  5637                           ;MCAL_Layer/ADC/hal_adc.c: 246:     return ret;
  5638   0029EA  5014               	movf	ADC_GetConversion_Interrupt@ret^0,w,c
  5639   0029EC  0012               	return		;funcret
  5640   0029EE                     __end_of_ADC_GetConversion_Interrupt:
  5641                           	callstack 0
  5642                           
  5643 ;; *************** function _ADC_StartConversion *****************
  5644 ;; Defined at:
  5645 ;;		line 126 in file "MCAL_Layer/ADC/hal_adc.c"
  5646 ;; Parameters:    Size  Location     Type
  5647 ;;  _adc            1   10[COMRAM] PTR const struct .
  5648 ;;		 -> adc_1(7), 
  5649 ;; Auto vars:     Size  Location     Type
  5650 ;;  ret             1   11[COMRAM] unsigned char 
  5651 ;; Return value:  Size  Location     Type
  5652 ;;                  1    wreg      unsigned char 
  5653 ;; Registers used:
  5654 ;;		wreg, status,2
  5655 ;; Tracked objects:
  5656 ;;		On entry : 0/0
  5657 ;;		On exit  : 0/0
  5658 ;;		Unchanged: 0/0
  5659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5660 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5661 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5663 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5664 ;;Total ram usage:        2 bytes
  5665 ;; Hardware stack levels used: 1
  5666 ;; Hardware stack levels required when called: 4
  5667 ;; This function calls:
  5668 ;;		Nothing
  5669 ;; This function is called by:
  5670 ;;		_ADC_GetConversion_Interrupt
  5671 ;;		_ADC_GetConversion_Blocking
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           
  5675                           	psect	text35
  5676   002AA8                     __ptext35:
  5677                           	callstack 0
  5678   002AA8                     _ADC_StartConversion:
  5679                           	callstack 25
  5680   002AA8                     
  5681                           ;MCAL_Layer/ADC/hal_adc.c: 127:     Std_ReturnType ret = (Std_ReturnType)0x01;
  5682   002AA8  0E01               	movlw	1
  5683   002AAA  6E0C               	movwf	ADC_StartConversion@ret^0,c
  5684                           
  5685                           ;MCAL_Layer/ADC/hal_adc.c: 128:     if (((void*)0) == _adc)
  5686   002AAC  500B               	movf	ADC_StartConversion@_adc^0,w,c
  5687   002AAE  A4D8               	btfss	status,2,c
  5688   002AB0  EF5C  F015         	goto	u3441
  5689   002AB4  EF5E  F015         	goto	u3440
  5690   002AB8                     u3441:
  5691   002AB8  EF62  F015         	goto	l891
  5692   002ABC                     u3440:
  5693   002ABC                     
  5694                           ;MCAL_Layer/ADC/hal_adc.c: 129:     {;MCAL_Layer/ADC/hal_adc.c: 130:         ret = (Std_
      +                          ReturnType)0x00;
  5695   002ABC  0E00               	movlw	0
  5696   002ABE  6E0C               	movwf	ADC_StartConversion@ret^0,c
  5697                           
  5698                           ;MCAL_Layer/ADC/hal_adc.c: 131:     }
  5699   002AC0  EF63  F015         	goto	l4244
  5700   002AC4                     l891:
  5701                           
  5702                           ;MCAL_Layer/ADC/hal_adc.c: 133:     {;MCAL_Layer/ADC/hal_adc.c: 134:         (ADCON0bits
      +                          .GO_nDONE = 1);
  5703   002AC4  82C2               	bsf	194,1,c	;volatile
  5704   002AC6                     l4244:
  5705                           
  5706                           ;MCAL_Layer/ADC/hal_adc.c: 136:     return ret;
  5707   002AC6  500C               	movf	ADC_StartConversion@ret^0,w,c
  5708   002AC8  0012               	return		;funcret
  5709   002ACA                     __end_of_ADC_StartConversion:
  5710                           	callstack 0
  5711                           
  5712 ;; *************** function _ADC_SelectChannel *****************
  5713 ;; Defined at:
  5714 ;;		line 104 in file "MCAL_Layer/ADC/hal_adc.c"
  5715 ;; Parameters:    Size  Location     Type
  5716 ;;  _adc            1   13[COMRAM] PTR const struct .
  5717 ;;		 -> adc_1(7), 
  5718 ;;  channel         1   14[COMRAM] enum E3294
  5719 ;; Auto vars:     Size  Location     Type
  5720 ;;  ret             1   16[COMRAM] unsigned char 
  5721 ;; Return value:  Size  Location     Type
  5722 ;;                  1    wreg      unsigned char 
  5723 ;; Registers used:
  5724 ;;		wreg, status,2, status,0, cstack
  5725 ;; Tracked objects:
  5726 ;;		On entry : 0/0
  5727 ;;		On exit  : 0/0
  5728 ;;		Unchanged: 0/0
  5729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5730 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5731 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5732 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5733 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5734 ;;Total ram usage:        4 bytes
  5735 ;; Hardware stack levels used: 1
  5736 ;; Hardware stack levels required when called: 5
  5737 ;; This function calls:
  5738 ;;		_adc_input_channel_port_configure
  5739 ;; This function is called by:
  5740 ;;		_ADC_GetConversion_Interrupt
  5741 ;;		_ADC_GetConversion_Blocking
  5742 ;; This function uses a non-reentrant model
  5743 ;;
  5744                           
  5745                           	psect	text36
  5746   0028E4                     __ptext36:
  5747                           	callstack 0
  5748   0028E4                     _ADC_SelectChannel:
  5749                           	callstack 24
  5750   0028E4                     
  5751                           ;MCAL_Layer/ADC/hal_adc.c: 105:     Std_ReturnType ret = (Std_ReturnType)0x01;
  5752   0028E4  0E01               	movlw	1
  5753   0028E6  6E11               	movwf	ADC_SelectChannel@ret^0,c
  5754                           
  5755                           ;MCAL_Layer/ADC/hal_adc.c: 106:     if (((void*)0) == _adc)
  5756   0028E8  500E               	movf	ADC_SelectChannel@_adc^0,w,c
  5757   0028EA  A4D8               	btfss	status,2,c
  5758   0028EC  EF7A  F014         	goto	u3431
  5759   0028F0  EF7C  F014         	goto	u3430
  5760   0028F4                     u3431:
  5761   0028F4  EF80  F014         	goto	l4232
  5762   0028F8                     u3430:
  5763   0028F8                     
  5764                           ;MCAL_Layer/ADC/hal_adc.c: 107:     {;MCAL_Layer/ADC/hal_adc.c: 108:         ret = (Std_
      +                          ReturnType)0x00;
  5765   0028F8  0E00               	movlw	0
  5766   0028FA  6E11               	movwf	ADC_SelectChannel@ret^0,c
  5767                           
  5768                           ;MCAL_Layer/ADC/hal_adc.c: 109:     }
  5769   0028FC  EF8C  F014         	goto	l4236
  5770   002900                     l4232:
  5771                           
  5772                           ;MCAL_Layer/ADC/hal_adc.c: 111:     {;MCAL_Layer/ADC/hal_adc.c: 112:         ADCON0bits.
      +                          CHS = channel;
  5773   002900  C00F  F010         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  5774   002904  4610               	rlncf	??_ADC_SelectChannel^0,f,c
  5775   002906  4610               	rlncf	??_ADC_SelectChannel^0,f,c
  5776   002908  50C2               	movf	194,w,c	;volatile
  5777   00290A  1810               	xorwf	??_ADC_SelectChannel^0,w,c
  5778   00290C  0BC3               	andlw	-61
  5779   00290E  1810               	xorwf	??_ADC_SelectChannel^0,w,c
  5780   002910  6EC2               	movwf	194,c	;volatile
  5781   002912                     
  5782                           ;MCAL_Layer/ADC/hal_adc.c: 113:         adc_input_channel_port_configure(channel);
  5783   002912  500F               	movf	ADC_SelectChannel@channel^0,w,c
  5784   002914  EC17  F00F         	call	_adc_input_channel_port_configure
  5785   002918                     l4236:
  5786                           
  5787                           ;MCAL_Layer/ADC/hal_adc.c: 115:     return ret;
  5788   002918  5011               	movf	ADC_SelectChannel@ret^0,w,c
  5789   00291A  0012               	return		;funcret
  5790   00291C                     __end_of_ADC_SelectChannel:
  5791                           	callstack 0
  5792                           
  5793 ;; *************** function _adc_input_channel_port_configure *****************
  5794 ;; Defined at:
  5795 ;;		line 248 in file "MCAL_Layer/ADC/hal_adc.c"
  5796 ;; Parameters:    Size  Location     Type
  5797 ;;  channel         1    wreg     enum E3294
  5798 ;; Auto vars:     Size  Location     Type
  5799 ;;  channel         1   12[COMRAM] enum E3294
  5800 ;;  ret             1    0        unsigned char 
  5801 ;; Return value:  Size  Location     Type
  5802 ;;                  1    wreg      unsigned char 
  5803 ;; Registers used:
  5804 ;;		wreg, status,2, status,0
  5805 ;; Tracked objects:
  5806 ;;		On entry : 0/0
  5807 ;;		On exit  : 0/0
  5808 ;;		Unchanged: 0/0
  5809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5811 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5812 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5813 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5814 ;;Total ram usage:        3 bytes
  5815 ;; Hardware stack levels used: 1
  5816 ;; Hardware stack levels required when called: 4
  5817 ;; This function calls:
  5818 ;;		Nothing
  5819 ;; This function is called by:
  5820 ;;		_ADC_Init
  5821 ;;		_ADC_SelectChannel
  5822 ;; This function uses a non-reentrant model
  5823 ;;
  5824                           
  5825                           	psect	text37
  5826   001E2E                     __ptext37:
  5827                           	callstack 0
  5828   001E2E                     _adc_input_channel_port_configure:
  5829                           	callstack 24
  5830                           
  5831                           ;incstack = 0
  5832                           ;adc_input_channel_port_configure@channel stored from wreg
  5833   001E2E  6E0D               	movwf	adc_input_channel_port_configure@channel^0,c
  5834   001E30                     
  5835                           ;MCAL_Layer/ADC/hal_adc.c: 250:     switch (channel)
  5836   001E30  EF43  F00F         	goto	l4006
  5837   001E34                     l3978:
  5838   001E34  8092               	bsf	146,0,c	;volatile
  5839   001E36  EF84  F00F         	goto	l945
  5840   001E3A                     l3980:
  5841   001E3A  8292               	bsf	146,1,c	;volatile
  5842   001E3C  EF84  F00F         	goto	l945
  5843   001E40                     l3982:
  5844   001E40  8492               	bsf	146,2,c	;volatile
  5845   001E42  EF84  F00F         	goto	l945
  5846   001E46                     l3984:
  5847   001E46  8692               	bsf	146,3,c	;volatile
  5848   001E48  EF84  F00F         	goto	l945
  5849   001E4C                     l3986:
  5850   001E4C  8A92               	bsf	146,5,c	;volatile
  5851   001E4E  EF84  F00F         	goto	l945
  5852   001E52                     l3988:
  5853   001E52  8096               	bsf	150,0,c	;volatile
  5854   001E54  EF84  F00F         	goto	l945
  5855   001E58                     l3990:
  5856   001E58  8296               	bsf	150,1,c	;volatile
  5857   001E5A  EF84  F00F         	goto	l945
  5858   001E5E                     l3992:
  5859   001E5E  8496               	bsf	150,2,c	;volatile
  5860   001E60  EF84  F00F         	goto	l945
  5861   001E64                     l3994:
  5862   001E64  8493               	bsf	147,2,c	;volatile
  5863   001E66  EF84  F00F         	goto	l945
  5864   001E6A                     l3996:
  5865   001E6A  8693               	bsf	147,3,c	;volatile
  5866   001E6C  EF84  F00F         	goto	l945
  5867   001E70                     l3998:
  5868   001E70  8293               	bsf	147,1,c	;volatile
  5869   001E72  EF84  F00F         	goto	l945
  5870   001E76                     l4000:
  5871   001E76  8893               	bsf	147,4,c	;volatile
  5872   001E78  EF84  F00F         	goto	l945
  5873   001E7C                     l4002:
  5874   001E7C  8093               	bsf	147,0,c	;volatile
  5875   001E7E  EF84  F00F         	goto	l945
  5876   001E82                     l4004:
  5877                           
  5878                           ;MCAL_Layer/ADC/hal_adc.c: 266:     }
  5879   001E82  EF84  F00F         	goto	l945
  5880   001E86                     l4006:
  5881   001E86  500D               	movf	adc_input_channel_port_configure@channel^0,w,c
  5882   001E88  6E0B               	movwf	??_adc_input_channel_port_configure^0,c
  5883   001E8A  6A0C               	clrf	(??_adc_input_channel_port_configure+1)^0,c
  5884                           
  5885                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5886                           ; Switch size 1, requested type "simple"
  5887                           ; Number of cases is 1, Range of values is 0 to 0
  5888                           ; switch strategies available:
  5889                           ; Name         Instructions Cycles
  5890                           ; simple_byte            4     3 (average)
  5891                           ;	Chosen strategy is simple_byte
  5892   001E8C  500C               	movf	(??_adc_input_channel_port_configure+1)^0,w,c
  5893   001E8E  0A00               	xorlw	0	; case 0
  5894   001E90  B4D8               	btfsc	status,2,c
  5895   001E92  EF4D  F00F         	goto	l5906
  5896   001E96  EF41  F00F         	goto	l4004
  5897   001E9A                     l5906:
  5898                           
  5899                           ; Switch size 1, requested type "simple"
  5900                           ; Number of cases is 13, Range of values is 0 to 12
  5901                           ; switch strategies available:
  5902                           ; Name         Instructions Cycles
  5903                           ; simple_byte           40    21 (average)
  5904                           ;	Chosen strategy is simple_byte
  5905   001E9A  500B               	movf	??_adc_input_channel_port_configure^0,w,c
  5906   001E9C  0A00               	xorlw	0	; case 0
  5907   001E9E  B4D8               	btfsc	status,2,c
  5908   001EA0  EF1A  F00F         	goto	l3978
  5909   001EA4  0A01               	xorlw	1	; case 1
  5910   001EA6  B4D8               	btfsc	status,2,c
  5911   001EA8  EF1D  F00F         	goto	l3980
  5912   001EAC  0A03               	xorlw	3	; case 2
  5913   001EAE  B4D8               	btfsc	status,2,c
  5914   001EB0  EF20  F00F         	goto	l3982
  5915   001EB4  0A01               	xorlw	1	; case 3
  5916   001EB6  B4D8               	btfsc	status,2,c
  5917   001EB8  EF23  F00F         	goto	l3984
  5918   001EBC  0A07               	xorlw	7	; case 4
  5919   001EBE  B4D8               	btfsc	status,2,c
  5920   001EC0  EF26  F00F         	goto	l3986
  5921   001EC4  0A01               	xorlw	1	; case 5
  5922   001EC6  B4D8               	btfsc	status,2,c
  5923   001EC8  EF29  F00F         	goto	l3988
  5924   001ECC  0A03               	xorlw	3	; case 6
  5925   001ECE  B4D8               	btfsc	status,2,c
  5926   001ED0  EF2C  F00F         	goto	l3990
  5927   001ED4  0A01               	xorlw	1	; case 7
  5928   001ED6  B4D8               	btfsc	status,2,c
  5929   001ED8  EF2F  F00F         	goto	l3992
  5930   001EDC  0A0F               	xorlw	15	; case 8
  5931   001EDE  B4D8               	btfsc	status,2,c
  5932   001EE0  EF32  F00F         	goto	l3994
  5933   001EE4  0A01               	xorlw	1	; case 9
  5934   001EE6  B4D8               	btfsc	status,2,c
  5935   001EE8  EF35  F00F         	goto	l3996
  5936   001EEC  0A03               	xorlw	3	; case 10
  5937   001EEE  B4D8               	btfsc	status,2,c
  5938   001EF0  EF38  F00F         	goto	l3998
  5939   001EF4  0A01               	xorlw	1	; case 11
  5940   001EF6  B4D8               	btfsc	status,2,c
  5941   001EF8  EF3B  F00F         	goto	l4000
  5942   001EFC  0A07               	xorlw	7	; case 12
  5943   001EFE  B4D8               	btfsc	status,2,c
  5944   001F00  EF3E  F00F         	goto	l4002
  5945   001F04  EF41  F00F         	goto	l4004
  5946   001F08                     l945:
  5947   001F08  0012               	return		;funcret
  5948   001F0A                     __end_of_adc_input_channel_port_configure:
  5949                           	callstack 0
  5950                           
  5951 ;; *************** function _InterruptManager *****************
  5952 ;; Defined at:
  5953 ;;		line 35 in file "MCAL_Layer/interrupt/mcal_interrupt_manager.c"
  5954 ;; Parameters:    Size  Location     Type
  5955 ;;		None
  5956 ;; Auto vars:     Size  Location     Type
  5957 ;;		None
  5958 ;; Return value:  Size  Location     Type
  5959 ;;                  1    wreg      void 
  5960 ;; Registers used:
  5961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5962 ;; Tracked objects:
  5963 ;;		On entry : 0/0
  5964 ;;		On exit  : 0/0
  5965 ;;		Unchanged: 0/0
  5966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5969 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5970 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5971 ;;Total ram usage:        4 bytes
  5972 ;; Hardware stack levels used: 1
  5973 ;; Hardware stack levels required when called: 3
  5974 ;; This function calls:
  5975 ;;		_ADC_ISR
  5976 ;;		_INT0_ISR
  5977 ;;		_INT1_ISR
  5978 ;;		_INT2_ISR
  5979 ;;		_RB4_ISR
  5980 ;;		_RB5_ISR
  5981 ;;		_RB6_ISR
  5982 ;;		_RB7_ISR
  5983 ;; This function is called by:
  5984 ;;		Interrupt level 2
  5985 ;; This function uses a non-reentrant model
  5986 ;;
  5987                           
  5988                           	psect	intcode
  5989   000008                     __pintcode:
  5990                           	callstack 0
  5991   000008                     _InterruptManager:
  5992                           	callstack 21
  5993                           
  5994                           ;incstack = 0
  5995   000008  8255               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5996   00000A  CFFA F007          	movff	pclath,??_InterruptManager
  5997   00000E  CFFB F008          	movff	pclatu,??_InterruptManager+1
  5998   000012  CFD9 F009          	movff	fsr2l,??_InterruptManager+2
  5999   000016  CFDA F00A          	movff	fsr2h,??_InterruptManager+3
  6000   00001A                     
  6001                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 38:     if ((INTCONbits.INT0IE == 1) && 
      +                          (INTCONbits.INT0IF == 1))
  6002   00001A  A8F2               	btfss	242,4,c	;volatile
  6003   00001C  EF12  F000         	goto	i2u480_41
  6004   000020  EF14  F000         	goto	i2u480_40
  6005   000024                     i2u480_41:
  6006   000024  EF1D  F000         	goto	i2l538
  6007   000028                     i2u480_40:
  6008   000028  A2F2               	btfss	242,1,c	;volatile
  6009   00002A  EF19  F000         	goto	i2u481_41
  6010   00002E  EF1B  F000         	goto	i2u481_40
  6011   000032                     i2u481_41:
  6012   000032  EF1D  F000         	goto	i2l538
  6013   000036                     i2u481_40:
  6014   000036                     
  6015                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 39:     {;MCAL_Layer/interrupt/mcal_inte
      +                          rrupt_manager.c: 40:         INT0_ISR();
  6016   000036  ECA1  F015         	call	_INT0_ISR	;wreg free
  6017   00003A                     i2l538:
  6018                           
  6019                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 43:     if ((INTCON3bits.INT1IE == 1) &&
      +                           (INTCON3bits.INT1IF == 1))
  6020   00003A  A6F0               	btfss	240,3,c	;volatile
  6021   00003C  EF22  F000         	goto	i2u482_41
  6022   000040  EF24  F000         	goto	i2u482_40
  6023   000044                     i2u482_41:
  6024   000044  EF2D  F000         	goto	i2l540
  6025   000048                     i2u482_40:
  6026   000048  A0F0               	btfss	240,0,c	;volatile
  6027   00004A  EF29  F000         	goto	i2u483_41
  6028   00004E  EF2B  F000         	goto	i2u483_40
  6029   000052                     i2u483_41:
  6030   000052  EF2D  F000         	goto	i2l540
  6031   000056                     i2u483_40:
  6032   000056                     
  6033                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 44:     {;MCAL_Layer/interrupt/mcal_inte
      +                          rrupt_manager.c: 45:         INT1_ISR();
  6034   000056  EC9F  F015         	call	_INT1_ISR	;wreg free
  6035   00005A                     i2l540:
  6036                           
  6037                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 48:     if ((INTCON3bits.INT2IE == 1) &&
      +                           (INTCON3bits.INT2IF == 1))
  6038   00005A  A8F0               	btfss	240,4,c	;volatile
  6039   00005C  EF32  F000         	goto	i2u484_41
  6040   000060  EF34  F000         	goto	i2u484_40
  6041   000064                     i2u484_41:
  6042   000064  EF3D  F000         	goto	i2l542
  6043   000068                     i2u484_40:
  6044   000068  A2F0               	btfss	240,1,c	;volatile
  6045   00006A  EF39  F000         	goto	i2u485_41
  6046   00006E  EF3B  F000         	goto	i2u485_40
  6047   000072                     i2u485_41:
  6048   000072  EF3D  F000         	goto	i2l542
  6049   000076                     i2u485_40:
  6050   000076                     
  6051                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 49:     {;MCAL_Layer/interrupt/mcal_inte
      +                          rrupt_manager.c: 50:         INT2_ISR();
  6052   000076  EC9D  F015         	call	_INT2_ISR	;wreg free
  6053   00007A                     i2l542:
  6054                           
  6055                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 56:     if ((INTCONbits.RBIE == 1) && (I
      +                          NTCONbits.RBIF == 1) &&
  6056   00007A  A6F2               	btfss	242,3,c	;volatile
  6057   00007C  EF42  F000         	goto	i2u486_41
  6058   000080  EF44  F000         	goto	i2u486_40
  6059   000084                     i2u486_41:
  6060   000084  EF5F  F000         	goto	i2l544
  6061   000088                     i2u486_40:
  6062   000088  A0F2               	btfss	242,0,c	;volatile
  6063   00008A  EF49  F000         	goto	i2u487_41
  6064   00008E  EF4B  F000         	goto	i2u487_40
  6065   000092                     i2u487_41:
  6066   000092  EF5F  F000         	goto	i2l544
  6067   000096                     i2u487_40:
  6068   000096  A881               	btfss	129,4,c	;volatile
  6069   000098  EF50  F000         	goto	i2u488_41
  6070   00009C  EF52  F000         	goto	i2u488_40
  6071   0000A0                     i2u488_41:
  6072   0000A0  EF5F  F000         	goto	i2l544
  6073   0000A4                     i2u488_40:
  6074   0000A4  0450               	decf	_RB4_Flag^0,w,c	;volatile
  6075   0000A6  A4D8               	btfss	status,2,c
  6076   0000A8  EF58  F000         	goto	i2u489_41
  6077   0000AC  EF5A  F000         	goto	i2u489_40
  6078   0000B0                     i2u489_41:
  6079   0000B0  EF5F  F000         	goto	i2l544
  6080   0000B4                     i2u489_40:
  6081   0000B4                     
  6082                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 58:     {;MCAL_Layer/interrupt/mcal_inte
      +                          rrupt_manager.c: 59:         RB4_Flag = 0;
  6083   0000B4  0E00               	movlw	0
  6084   0000B6  6E50               	movwf	_RB4_Flag^0,c	;volatile
  6085   0000B8                     
  6086                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 60:         RB4_ISR(1);
  6087   0000B8  0E01               	movlw	1
  6088   0000BA  EC8C  F015         	call	_RB4_ISR
  6089   0000BE                     i2l544:
  6090                           
  6091                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 63:     if ((INTCONbits.RBIE == 1) && (I
      +                          NTCONbits.RBIF == 1) &&
  6092   0000BE  A6F2               	btfss	242,3,c	;volatile
  6093   0000C0  EF64  F000         	goto	i2u490_41
  6094   0000C4  EF66  F000         	goto	i2u490_40
  6095   0000C8                     i2u490_41:
  6096   0000C8  EF81  F000         	goto	i2l546
  6097   0000CC                     i2u490_40:
  6098   0000CC  A0F2               	btfss	242,0,c	;volatile
  6099   0000CE  EF6B  F000         	goto	i2u491_41
  6100   0000D2  EF6D  F000         	goto	i2u491_40
  6101   0000D6                     i2u491_41:
  6102   0000D6  EF81  F000         	goto	i2l546
  6103   0000DA                     i2u491_40:
  6104   0000DA  B881               	btfsc	129,4,c	;volatile
  6105   0000DC  EF72  F000         	goto	i2u492_41
  6106   0000E0  EF74  F000         	goto	i2u492_40
  6107   0000E4                     i2u492_41:
  6108   0000E4  EF81  F000         	goto	i2l546
  6109   0000E8                     i2u492_40:
  6110   0000E8  5050               	movf	_RB4_Flag^0,w,c	;volatile
  6111   0000EA  A4D8               	btfss	status,2,c
  6112   0000EC  EF7A  F000         	goto	i2u493_41
  6113   0000F0  EF7C  F000         	goto	i2u493_40
  6114   0000F4                     i2u493_41:
  6115   0000F4  EF81  F000         	goto	i2l546
  6116   0000F8                     i2u493_40:
  6117   0000F8                     
  6118                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 65:     {;MCAL_Layer/interrupt/mcal_inte
      +                          rrupt_manager.c: 66:         RB4_Flag = 1;
  6119   0000F8  0E01               	movlw	1
  6120   0000FA  6E50               	movwf	_RB4_Flag^0,c	;volatile
  6121   0000FC                     
  6122                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 67:         RB4_ISR(0);
  6123   0000FC  0E00               	movlw	0
  6124   0000FE  EC8C  F015         	call	_RB4_ISR
  6125   000102                     i2l546:
  6126                           
  6127                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 70:     if ((INTCONbits.RBIE == 1) && (I
      +                          NTCONbits.RBIF == 1) &&
  6128   000102  A6F2               	btfss	242,3,c	;volatile
  6129   000104  EF86  F000         	goto	i2u494_41
  6130   000108  EF88  F000         	goto	i2u494_40
  6131   00010C                     i2u494_41:
  6132   00010C  EFA3  F000         	goto	i2l548
  6133   000110                     i2u494_40:
  6134   000110  A0F2               	btfss	242,0,c	;volatile
  6135   000112  EF8D  F000         	goto	i2u495_41
  6136   000116  EF8F  F000         	goto	i2u495_40
  6137   00011A                     i2u495_41:
  6138   00011A  EFA3  F000         	goto	i2l548
  6139   00011E                     i2u495_40:
  6140   00011E  AA81               	btfss	129,5,c	;volatile
  6141   000120  EF94  F000         	goto	i2u496_41
  6142   000124  EF96  F000         	goto	i2u496_40
  6143   000128                     i2u496_41:
  6144   000128  EFA3  F000         	goto	i2l548
  6145   00012C                     i2u496_40:
  6146   00012C  044F               	decf	_RB5_Flag^0,w,c	;volatile
  6147   00012E  A4D8               	btfss	status,2,c
  6148   000130  EF9C  F000         	goto	i2u497_41
  6149   000134  EF9E  F000         	goto	i2u497_40
  6150   000138                     i2u497_41:
  6151   000138  EFA3  F000         	goto	i2l548
  6152   00013C                     i2u497_40:
  6153   00013C                     
  6154                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 72:     {;MCAL_Layer/interrupt/mcal_inte
      +                          rrupt_manager.c: 73:         RB5_Flag = 0;
  6155   00013C  0E00               	movlw	0
  6156   00013E  6E4F               	movwf	_RB5_Flag^0,c	;volatile
  6157   000140                     
  6158                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 74:         RB5_ISR(1);
  6159   000140  0E01               	movlw	1
  6160   000142  EC7F  F015         	call	_RB5_ISR
  6161   000146                     i2l548:
  6162                           
  6163                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 77:     if ((INTCONbits.RBIE == 1) && (I
      +                          NTCONbits.RBIF == 1) &&
  6164   000146  A6F2               	btfss	242,3,c	;volatile
  6165   000148  EFA8  F000         	goto	i2u498_41
  6166   00014C  EFAA  F000         	goto	i2u498_40
  6167   000150                     i2u498_41:
  6168   000150  EFC5  F000         	goto	i2l5308
  6169   000154                     i2u498_40:
  6170   000154  A0F2               	btfss	242,0,c	;volatile
  6171   000156  EFAF  F000         	goto	i2u499_41
  6172   00015A  EFB1  F000         	goto	i2u499_40
  6173   00015E                     i2u499_41:
  6174   00015E  EFC5  F000         	goto	i2l5308
  6175   000162                     i2u499_40:
  6176   000162  BA81               	btfsc	129,5,c	;volatile
  6177   000164  EFB6  F000         	goto	i2u500_41
  6178   000168  EFB8  F000         	goto	i2u500_40
  6179   00016C                     i2u500_41:
  6180   00016C  EFC5  F000         	goto	i2l5308
  6181   000170                     i2u500_40:
  6182   000170  504F               	movf	_RB5_Flag^0,w,c	;volatile
  6183   000172  A4D8               	btfss	status,2,c
  6184   000174  EFBE  F000         	goto	i2u501_41
  6185   000178  EFC0  F000         	goto	i2u501_40
  6186   00017C                     i2u501_41:
  6187   00017C  EFC5  F000         	goto	i2l5308
  6188   000180                     i2u501_40:
  6189   000180                     
  6190                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 79:     {;MCAL_Layer/interrupt/mcal_inte
      +                          rrupt_manager.c: 80:         RB5_Flag = 1;
  6191   000180  0E01               	movlw	1
  6192   000182  6E4F               	movwf	_RB5_Flag^0,c	;volatile
  6193   000184                     
  6194                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 81:         RB5_ISR(0);
  6195   000184  0E00               	movlw	0
  6196   000186  EC7F  F015         	call	_RB5_ISR
  6197   00018A                     i2l5308:
  6198                           
  6199                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 84:     if ((INTCONbits.RBIE == 1) && (I
      +                          NTCONbits.RBIF == 1) &&
  6200   00018A  A6F2               	btfss	242,3,c	;volatile
  6201   00018C  EFCA  F000         	goto	i2u502_41
  6202   000190  EFCC  F000         	goto	i2u502_40
  6203   000194                     i2u502_41:
  6204   000194  EFE7  F000         	goto	i2l551
  6205   000198                     i2u502_40:
  6206   000198  A0F2               	btfss	242,0,c	;volatile
  6207   00019A  EFD1  F000         	goto	i2u503_41
  6208   00019E  EFD3  F000         	goto	i2u503_40
  6209   0001A2                     i2u503_41:
  6210   0001A2  EFE7  F000         	goto	i2l551
  6211   0001A6                     i2u503_40:
  6212   0001A6  AC81               	btfss	129,6,c	;volatile
  6213   0001A8  EFD8  F000         	goto	i2u504_41
  6214   0001AC  EFDA  F000         	goto	i2u504_40
  6215   0001B0                     i2u504_41:
  6216   0001B0  EFE7  F000         	goto	i2l551
  6217   0001B4                     i2u504_40:
  6218   0001B4  044E               	decf	_RB6_Flag^0,w,c	;volatile
  6219   0001B6  A4D8               	btfss	status,2,c
  6220   0001B8  EFE0  F000         	goto	i2u505_41
  6221   0001BC  EFE2  F000         	goto	i2u505_40
  6222   0001C0                     i2u505_41:
  6223   0001C0  EFE7  F000         	goto	i2l551
  6224   0001C4                     i2u505_40:
  6225   0001C4                     
  6226                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 86:     {;MCAL_Layer/interrupt/mcal_inte
      +                          rrupt_manager.c: 87:         RB6_Flag = 0;
  6227   0001C4  0E00               	movlw	0
  6228   0001C6  6E4E               	movwf	_RB6_Flag^0,c	;volatile
  6229   0001C8                     
  6230                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 88:         RB6_ISR(1);
  6231   0001C8  0E01               	movlw	1
  6232   0001CA  EC72  F015         	call	_RB6_ISR
  6233   0001CE                     i2l551:
  6234                           
  6235                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 91:     if ((INTCONbits.RBIE == 1) && (I
      +                          NTCONbits.RBIF == 1) &&
  6236   0001CE  A6F2               	btfss	242,3,c	;volatile
  6237   0001D0  EFEC  F000         	goto	i2u506_41
  6238   0001D4  EFEE  F000         	goto	i2u506_40
  6239   0001D8                     i2u506_41:
  6240   0001D8  EF09  F001         	goto	i2l5330
  6241   0001DC                     i2u506_40:
  6242   0001DC  A0F2               	btfss	242,0,c	;volatile
  6243   0001DE  EFF3  F000         	goto	i2u507_41
  6244   0001E2  EFF5  F000         	goto	i2u507_40
  6245   0001E6                     i2u507_41:
  6246   0001E6  EF09  F001         	goto	i2l5330
  6247   0001EA                     i2u507_40:
  6248   0001EA  BC81               	btfsc	129,6,c	;volatile
  6249   0001EC  EFFA  F000         	goto	i2u508_41
  6250   0001F0  EFFC  F000         	goto	i2u508_40
  6251   0001F4                     i2u508_41:
  6252   0001F4  EF09  F001         	goto	i2l5330
  6253   0001F8                     i2u508_40:
  6254   0001F8  504E               	movf	_RB6_Flag^0,w,c	;volatile
  6255   0001FA  A4D8               	btfss	status,2,c
  6256   0001FC  EF02  F001         	goto	i2u509_41
  6257   000200  EF04  F001         	goto	i2u509_40
  6258   000204                     i2u509_41:
  6259   000204  EF09  F001         	goto	i2l5330
  6260   000208                     i2u509_40:
  6261   000208                     
  6262                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 93:     {;MCAL_Layer/interrupt/mcal_inte
      +                          rrupt_manager.c: 94:         RB6_Flag = 1;
  6263   000208  0E01               	movlw	1
  6264   00020A  6E4E               	movwf	_RB6_Flag^0,c	;volatile
  6265   00020C                     
  6266                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 95:         RB6_ISR(0);
  6267   00020C  0E00               	movlw	0
  6268   00020E  EC72  F015         	call	_RB6_ISR
  6269   000212                     i2l5330:
  6270                           
  6271                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 98:     if ((INTCONbits.RBIE == 1) && (I
      +                          NTCONbits.RBIF == 1) &&
  6272   000212  A6F2               	btfss	242,3,c	;volatile
  6273   000214  EF0E  F001         	goto	i2u510_41
  6274   000218  EF10  F001         	goto	i2u510_40
  6275   00021C                     i2u510_41:
  6276   00021C  EF2B  F001         	goto	i2l554
  6277   000220                     i2u510_40:
  6278   000220  A0F2               	btfss	242,0,c	;volatile
  6279   000222  EF15  F001         	goto	i2u511_41
  6280   000226  EF17  F001         	goto	i2u511_40
  6281   00022A                     i2u511_41:
  6282   00022A  EF2B  F001         	goto	i2l554
  6283   00022E                     i2u511_40:
  6284   00022E  AE81               	btfss	129,7,c	;volatile
  6285   000230  EF1C  F001         	goto	i2u512_41
  6286   000234  EF1E  F001         	goto	i2u512_40
  6287   000238                     i2u512_41:
  6288   000238  EF2B  F001         	goto	i2l554
  6289   00023C                     i2u512_40:
  6290   00023C  044D               	decf	_RB7_Flag^0,w,c	;volatile
  6291   00023E  A4D8               	btfss	status,2,c
  6292   000240  EF24  F001         	goto	i2u513_41
  6293   000244  EF26  F001         	goto	i2u513_40
  6294   000248                     i2u513_41:
  6295   000248  EF2B  F001         	goto	i2l554
  6296   00024C                     i2u513_40:
  6297   00024C                     
  6298                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 100:     {;MCAL_Layer/interrupt/mcal_int
      +                          errupt_manager.c: 101:         RB7_Flag = 0;
  6299   00024C  0E00               	movlw	0
  6300   00024E  6E4D               	movwf	_RB7_Flag^0,c	;volatile
  6301   000250                     
  6302                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 102:         RB7_ISR(1);
  6303   000250  0E01               	movlw	1
  6304   000252  EC65  F015         	call	_RB7_ISR
  6305   000256                     i2l554:
  6306                           
  6307                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 105:     if ((INTCONbits.RBIE == 1) && (
      +                          INTCONbits.RBIF == 1) &&
  6308   000256  A6F2               	btfss	242,3,c	;volatile
  6309   000258  EF30  F001         	goto	i2u514_41
  6310   00025C  EF32  F001         	goto	i2u514_40
  6311   000260                     i2u514_41:
  6312   000260  EF4D  F001         	goto	i2l556
  6313   000264                     i2u514_40:
  6314   000264  A0F2               	btfss	242,0,c	;volatile
  6315   000266  EF37  F001         	goto	i2u515_41
  6316   00026A  EF39  F001         	goto	i2u515_40
  6317   00026E                     i2u515_41:
  6318   00026E  EF4D  F001         	goto	i2l556
  6319   000272                     i2u515_40:
  6320   000272  BE81               	btfsc	129,7,c	;volatile
  6321   000274  EF3E  F001         	goto	i2u516_41
  6322   000278  EF40  F001         	goto	i2u516_40
  6323   00027C                     i2u516_41:
  6324   00027C  EF4D  F001         	goto	i2l556
  6325   000280                     i2u516_40:
  6326   000280  504D               	movf	_RB7_Flag^0,w,c	;volatile
  6327   000282  A4D8               	btfss	status,2,c
  6328   000284  EF46  F001         	goto	i2u517_41
  6329   000288  EF48  F001         	goto	i2u517_40
  6330   00028C                     i2u517_41:
  6331   00028C  EF4D  F001         	goto	i2l556
  6332   000290                     i2u517_40:
  6333   000290                     
  6334                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 107:     {;MCAL_Layer/interrupt/mcal_int
      +                          errupt_manager.c: 108:         RB7_Flag = 1;
  6335   000290  0E01               	movlw	1
  6336   000292  6E4D               	movwf	_RB7_Flag^0,c	;volatile
  6337   000294                     
  6338                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 109:         RB7_ISR(0);
  6339   000294  0E00               	movlw	0
  6340   000296  EC65  F015         	call	_RB7_ISR
  6341   00029A                     i2l556:
  6342                           
  6343                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 115:     if ((PIE1bits.ADIE == 1) && (PI
      +                          R1bits.ADIF == 1)){
  6344   00029A  AC9D               	btfss	157,6,c	;volatile
  6345   00029C  EF52  F001         	goto	i2u518_41
  6346   0002A0  EF54  F001         	goto	i2u518_40
  6347   0002A4                     i2u518_41:
  6348   0002A4  EF5D  F001         	goto	i2l559
  6349   0002A8                     i2u518_40:
  6350   0002A8  AC9E               	btfss	158,6,c	;volatile
  6351   0002AA  EF59  F001         	goto	i2u519_41
  6352   0002AE  EF5B  F001         	goto	i2u519_40
  6353   0002B2                     i2u519_41:
  6354   0002B2  EF5D  F001         	goto	i2l559
  6355   0002B6                     i2u519_40:
  6356   0002B6                     
  6357                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 116:         ADC_ISR();
  6358   0002B6  EC27  F015         	call	_ADC_ISR	;wreg free
  6359   0002BA                     i2l559:
  6360   0002BA  C00A  FFDA         	movff	??_InterruptManager+3,fsr2h
  6361   0002BE  C009  FFD9         	movff	??_InterruptManager+2,fsr2l
  6362   0002C2  C008  FFFB         	movff	??_InterruptManager+1,pclatu
  6363   0002C6  C007  FFFA         	movff	??_InterruptManager,pclath
  6364   0002CA  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6365   0002CC  0011               	retfie		f
  6366   0002CE                     __end_of_InterruptManager:
  6367                           	callstack 0
  6368                           
  6369 ;; *************** function _RB7_ISR *****************
  6370 ;; Defined at:
  6371 ;;		line 168 in file "MCAL_Layer/interrupt/mcal_external_interrupt.c"
  6372 ;; Parameters:    Size  Location     Type
  6373 ;;  RB7_source      1    wreg     unsigned char 
  6374 ;; Auto vars:     Size  Location     Type
  6375 ;;  RB7_source      1    0[COMRAM] unsigned char 
  6376 ;; Return value:  Size  Location     Type
  6377 ;;                  1    wreg      void 
  6378 ;; Registers used:
  6379 ;;		wreg, status,2, status,0
  6380 ;; Tracked objects:
  6381 ;;		On entry : 0/0
  6382 ;;		On exit  : 0/0
  6383 ;;		Unchanged: 0/0
  6384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6386 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6388 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6389 ;;Total ram usage:        1 bytes
  6390 ;; Hardware stack levels used: 1
  6391 ;; This function calls:
  6392 ;;		Nothing
  6393 ;; This function is called by:
  6394 ;;		_InterruptManager
  6395 ;; This function uses a non-reentrant model
  6396 ;;
  6397                           
  6398                           	psect	text39
  6399   002ACA                     __ptext39:
  6400                           	callstack 0
  6401   002ACA                     _RB7_ISR:
  6402                           	callstack 23
  6403                           
  6404                           ;incstack = 0
  6405                           ;RB7_ISR@RB7_source stored from wreg
  6406   002ACA  6E01               	movwf	RB7_ISR@RB7_source^0,c
  6407   002ACC                     
  6408                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 170:     (INTCONbits.RBIF = 0);
  6409   002ACC  90F2               	bcf	242,0,c	;volatile
  6410   002ACE                     
  6411                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 175:     if (0 == RB7_source)
  6412   002ACE  5001               	movf	RB7_ISR@RB7_source^0,w,c
  6413   002AD0  A4D8               	btfss	status,2,c
  6414   002AD2  EF6D  F015         	goto	i2u364_41
  6415   002AD6  EF6F  F015         	goto	i2u364_40
  6416   002ADA                     i2u364_41:
  6417   002ADA  EF71  F015         	goto	i2l4426
  6418   002ADE                     i2u364_40:
  6419   002ADE  EF71  F015         	goto	i2l658
  6420   002AE2                     i2l4426:
  6421   002AE2                     i2l658:
  6422   002AE2  0012               	return		;funcret
  6423   002AE4                     __end_of_RB7_ISR:
  6424                           	callstack 0
  6425                           
  6426 ;; *************** function _RB6_ISR *****************
  6427 ;; Defined at:
  6428 ;;		line 150 in file "MCAL_Layer/interrupt/mcal_external_interrupt.c"
  6429 ;; Parameters:    Size  Location     Type
  6430 ;;  RB6_source      1    wreg     unsigned char 
  6431 ;; Auto vars:     Size  Location     Type
  6432 ;;  RB6_source      1    0[COMRAM] unsigned char 
  6433 ;; Return value:  Size  Location     Type
  6434 ;;                  1    wreg      void 
  6435 ;; Registers used:
  6436 ;;		wreg, status,2, status,0
  6437 ;; Tracked objects:
  6438 ;;		On entry : 0/0
  6439 ;;		On exit  : 0/0
  6440 ;;		Unchanged: 0/0
  6441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6443 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6445 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6446 ;;Total ram usage:        1 bytes
  6447 ;; Hardware stack levels used: 1
  6448 ;; This function calls:
  6449 ;;		Nothing
  6450 ;; This function is called by:
  6451 ;;		_InterruptManager
  6452 ;; This function uses a non-reentrant model
  6453 ;;
  6454                           
  6455                           	psect	text40
  6456   002AE4                     __ptext40:
  6457                           	callstack 0
  6458   002AE4                     _RB6_ISR:
  6459                           	callstack 23
  6460                           
  6461                           ;incstack = 0
  6462                           ;RB6_ISR@RB6_source stored from wreg
  6463   002AE4  6E01               	movwf	RB6_ISR@RB6_source^0,c
  6464   002AE6                     
  6465                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 152:     (INTCONbits.RBIF = 0);
  6466   002AE6  90F2               	bcf	242,0,c	;volatile
  6467   002AE8                     
  6468                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 157:     if (0 == RB6_source)
  6469   002AE8  5001               	movf	RB6_ISR@RB6_source^0,w,c
  6470   002AEA  A4D8               	btfss	status,2,c
  6471   002AEC  EF7A  F015         	goto	i2u363_41
  6472   002AF0  EF7C  F015         	goto	i2u363_40
  6473   002AF4                     i2u363_41:
  6474   002AF4  EF7E  F015         	goto	i2l4412
  6475   002AF8                     i2u363_40:
  6476   002AF8  EF7E  F015         	goto	i2l648
  6477   002AFC                     i2l4412:
  6478   002AFC                     i2l648:
  6479   002AFC  0012               	return		;funcret
  6480   002AFE                     __end_of_RB6_ISR:
  6481                           	callstack 0
  6482                           
  6483 ;; *************** function _RB5_ISR *****************
  6484 ;; Defined at:
  6485 ;;		line 132 in file "MCAL_Layer/interrupt/mcal_external_interrupt.c"
  6486 ;; Parameters:    Size  Location     Type
  6487 ;;  RB5_source      1    wreg     unsigned char 
  6488 ;; Auto vars:     Size  Location     Type
  6489 ;;  RB5_source      1    0[COMRAM] unsigned char 
  6490 ;; Return value:  Size  Location     Type
  6491 ;;                  1    wreg      void 
  6492 ;; Registers used:
  6493 ;;		wreg, status,2, status,0
  6494 ;; Tracked objects:
  6495 ;;		On entry : 0/0
  6496 ;;		On exit  : 0/0
  6497 ;;		Unchanged: 0/0
  6498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6500 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6502 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6503 ;;Total ram usage:        1 bytes
  6504 ;; Hardware stack levels used: 1
  6505 ;; This function calls:
  6506 ;;		Nothing
  6507 ;; This function is called by:
  6508 ;;		_InterruptManager
  6509 ;; This function uses a non-reentrant model
  6510 ;;
  6511                           
  6512                           	psect	text41
  6513   002AFE                     __ptext41:
  6514                           	callstack 0
  6515   002AFE                     _RB5_ISR:
  6516                           	callstack 23
  6517                           
  6518                           ;incstack = 0
  6519                           ;RB5_ISR@RB5_source stored from wreg
  6520   002AFE  6E01               	movwf	RB5_ISR@RB5_source^0,c
  6521   002B00                     
  6522                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 134:     (INTCONbits.RBIF = 0);
  6523   002B00  90F2               	bcf	242,0,c	;volatile
  6524   002B02                     
  6525                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 138:     if (0 == RB5_source)
  6526   002B02  5001               	movf	RB5_ISR@RB5_source^0,w,c
  6527   002B04  A4D8               	btfss	status,2,c
  6528   002B06  EF87  F015         	goto	i2u362_41
  6529   002B0A  EF89  F015         	goto	i2u362_40
  6530   002B0E                     i2u362_41:
  6531   002B0E  EF8B  F015         	goto	i2l4398
  6532   002B12                     i2u362_40:
  6533   002B12  EF8B  F015         	goto	i2l638
  6534   002B16                     i2l4398:
  6535   002B16                     i2l638:
  6536   002B16  0012               	return		;funcret
  6537   002B18                     __end_of_RB5_ISR:
  6538                           	callstack 0
  6539                           
  6540 ;; *************** function _RB4_ISR *****************
  6541 ;; Defined at:
  6542 ;;		line 114 in file "MCAL_Layer/interrupt/mcal_external_interrupt.c"
  6543 ;; Parameters:    Size  Location     Type
  6544 ;;  RB4_source      1    wreg     unsigned char 
  6545 ;; Auto vars:     Size  Location     Type
  6546 ;;  RB4_source      1    0[COMRAM] unsigned char 
  6547 ;; Return value:  Size  Location     Type
  6548 ;;                  1    wreg      void 
  6549 ;; Registers used:
  6550 ;;		wreg, status,2, status,0
  6551 ;; Tracked objects:
  6552 ;;		On entry : 0/0
  6553 ;;		On exit  : 0/0
  6554 ;;		Unchanged: 0/0
  6555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6557 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6559 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6560 ;;Total ram usage:        1 bytes
  6561 ;; Hardware stack levels used: 1
  6562 ;; This function calls:
  6563 ;;		Nothing
  6564 ;; This function is called by:
  6565 ;;		_InterruptManager
  6566 ;; This function uses a non-reentrant model
  6567 ;;
  6568                           
  6569                           	psect	text42
  6570   002B18                     __ptext42:
  6571                           	callstack 0
  6572   002B18                     _RB4_ISR:
  6573                           	callstack 23
  6574                           
  6575                           ;incstack = 0
  6576                           ;RB4_ISR@RB4_source stored from wreg
  6577   002B18  6E01               	movwf	RB4_ISR@RB4_source^0,c
  6578   002B1A                     
  6579                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 116:     (INTCONbits.RBIF = 0);
  6580   002B1A  90F2               	bcf	242,0,c	;volatile
  6581   002B1C                     
  6582                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 120:     if (0 == RB4_source)
  6583   002B1C  5001               	movf	RB4_ISR@RB4_source^0,w,c
  6584   002B1E  A4D8               	btfss	status,2,c
  6585   002B20  EF94  F015         	goto	i2u361_41
  6586   002B24  EF96  F015         	goto	i2u361_40
  6587   002B28                     i2u361_41:
  6588   002B28  EF98  F015         	goto	i2l4384
  6589   002B2C                     i2u361_40:
  6590   002B2C  EF98  F015         	goto	i2l628
  6591   002B30                     i2l4384:
  6592   002B30                     i2l628:
  6593   002B30  0012               	return		;funcret
  6594   002B32                     __end_of_RB4_ISR:
  6595                           	callstack 0
  6596                           
  6597 ;; *************** function _INT2_ISR *****************
  6598 ;; Defined at:
  6599 ;;		line 101 in file "MCAL_Layer/interrupt/mcal_external_interrupt.c"
  6600 ;; Parameters:    Size  Location     Type
  6601 ;;		None
  6602 ;; Auto vars:     Size  Location     Type
  6603 ;;		None
  6604 ;; Return value:  Size  Location     Type
  6605 ;;                  1    wreg      void 
  6606 ;; Registers used:
  6607 ;;		None
  6608 ;; Tracked objects:
  6609 ;;		On entry : 0/0
  6610 ;;		On exit  : 0/0
  6611 ;;		Unchanged: 0/0
  6612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6617 ;;Total ram usage:        0 bytes
  6618 ;; Hardware stack levels used: 1
  6619 ;; This function calls:
  6620 ;;		Nothing
  6621 ;; This function is called by:
  6622 ;;		_InterruptManager
  6623 ;; This function uses a non-reentrant model
  6624 ;;
  6625                           
  6626                           	psect	text43
  6627   002B3A                     __ptext43:
  6628                           	callstack 0
  6629   002B3A                     _INT2_ISR:
  6630                           	callstack 23
  6631   002B3A                     
  6632                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 103:     (INTCON3bits.INT2IF = 0);
  6633   002B3A  92F0               	bcf	240,1,c	;volatile
  6634   002B3C  0012               	return		;funcret
  6635   002B3E                     __end_of_INT2_ISR:
  6636                           	callstack 0
  6637                           
  6638 ;; *************** function _INT1_ISR *****************
  6639 ;; Defined at:
  6640 ;;		line 88 in file "MCAL_Layer/interrupt/mcal_external_interrupt.c"
  6641 ;; Parameters:    Size  Location     Type
  6642 ;;		None
  6643 ;; Auto vars:     Size  Location     Type
  6644 ;;		None
  6645 ;; Return value:  Size  Location     Type
  6646 ;;                  1    wreg      void 
  6647 ;; Registers used:
  6648 ;;		None
  6649 ;; Tracked objects:
  6650 ;;		On entry : 0/0
  6651 ;;		On exit  : 0/0
  6652 ;;		Unchanged: 0/0
  6653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6658 ;;Total ram usage:        0 bytes
  6659 ;; Hardware stack levels used: 1
  6660 ;; This function calls:
  6661 ;;		Nothing
  6662 ;; This function is called by:
  6663 ;;		_InterruptManager
  6664 ;; This function uses a non-reentrant model
  6665 ;;
  6666                           
  6667                           	psect	text44
  6668   002B3E                     __ptext44:
  6669                           	callstack 0
  6670   002B3E                     _INT1_ISR:
  6671                           	callstack 23
  6672   002B3E                     
  6673                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 90:     (INTCON3bits.INT1IF = 0);
  6674   002B3E  90F0               	bcf	240,0,c	;volatile
  6675   002B40  0012               	return		;funcret
  6676   002B42                     __end_of_INT1_ISR:
  6677                           	callstack 0
  6678                           
  6679 ;; *************** function _INT0_ISR *****************
  6680 ;; Defined at:
  6681 ;;		line 73 in file "MCAL_Layer/interrupt/mcal_external_interrupt.c"
  6682 ;; Parameters:    Size  Location     Type
  6683 ;;		None
  6684 ;; Auto vars:     Size  Location     Type
  6685 ;;		None
  6686 ;; Return value:  Size  Location     Type
  6687 ;;                  1    wreg      void 
  6688 ;; Registers used:
  6689 ;;		None
  6690 ;; Tracked objects:
  6691 ;;		On entry : 0/0
  6692 ;;		On exit  : 0/0
  6693 ;;		Unchanged: 0/0
  6694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6699 ;;Total ram usage:        0 bytes
  6700 ;; Hardware stack levels used: 1
  6701 ;; This function calls:
  6702 ;;		Nothing
  6703 ;; This function is called by:
  6704 ;;		_InterruptManager
  6705 ;; This function uses a non-reentrant model
  6706 ;;
  6707                           
  6708                           	psect	text45
  6709   002B42                     __ptext45:
  6710                           	callstack 0
  6711   002B42                     _INT0_ISR:
  6712                           	callstack 23
  6713   002B42                     
  6714                           ;MCAL_Layer/interrupt/mcal_external_interrupt.c: 75:     (INTCONbits.INT0IF = 0);
  6715   002B42  92F2               	bcf	242,1,c	;volatile
  6716   002B44  0012               	return		;funcret
  6717   002B46                     __end_of_INT0_ISR:
  6718                           	callstack 0
  6719                           
  6720 ;; *************** function _ADC_ISR *****************
  6721 ;; Defined at:
  6722 ;;		line 317 in file "MCAL_Layer/ADC/hal_adc.c"
  6723 ;; Parameters:    Size  Location     Type
  6724 ;;		None
  6725 ;; Auto vars:     Size  Location     Type
  6726 ;;		None
  6727 ;; Return value:  Size  Location     Type
  6728 ;;                  1    wreg      void 
  6729 ;; Registers used:
  6730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6731 ;; Tracked objects:
  6732 ;;		On entry : 0/0
  6733 ;;		On exit  : 0/0
  6734 ;;		Unchanged: 0/0
  6735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6740 ;;Total ram usage:        0 bytes
  6741 ;; Hardware stack levels used: 1
  6742 ;; Hardware stack levels required when called: 2
  6743 ;; This function calls:
  6744 ;;		NULL
  6745 ;;		_ADC_DefaultInterruptHandler
  6746 ;; This function is called by:
  6747 ;;		_InterruptManager
  6748 ;; This function uses a non-reentrant model
  6749 ;;
  6750                           
  6751                           	psect	text46
  6752   002A4E                     __ptext46:
  6753                           	callstack 0
  6754   002A4E                     _ADC_ISR:
  6755                           	callstack 21
  6756   002A4E                     
  6757                           ;MCAL_Layer/ADC/hal_adc.c: 318:     (PIR1bits.ADIF = 0);
  6758   002A4E  9C9E               	bcf	158,6,c	;volatile
  6759   002A50                     
  6760                           ;MCAL_Layer/ADC/hal_adc.c: 319:     if (ADC_InterruptHandler){
  6761   002A50  5036               	movf	_ADC_InterruptHandler^0,w,c
  6762   002A52  1037               	iorwf	(_ADC_InterruptHandler+1)^0,w,c
  6763   002A54  B4D8               	btfsc	status,2,c
  6764   002A56  EF2F  F015         	goto	i2u365_41
  6765   002A5A  EF31  F015         	goto	i2u365_40
  6766   002A5E                     i2u365_41:
  6767   002A5E  EF3D  F015         	goto	i2l973
  6768   002A62                     i2u365_40:
  6769   002A62                     
  6770                           ;MCAL_Layer/ADC/hal_adc.c: 320:         ADC_InterruptHandler();
  6771   002A62  D802               	call	i2u366_48
  6772   002A64  EF3D  F015         	goto	i2u366_49
  6773   002A68                     i2u366_48:
  6774   002A68  0005               	push	
  6775   002A6A  6EFA               	movwf	pclath,c
  6776   002A6C  5036               	movf	_ADC_InterruptHandler^0,w,c
  6777   002A6E  6EFD               	movwf	tosl,c
  6778   002A70  5037               	movf	(_ADC_InterruptHandler+1)^0,w,c
  6779   002A72  6EFE               	movwf	tosh,c
  6780   002A74  6AFF               	clrf	tosu,c
  6781   002A76  50FA               	movf	pclath,w,c
  6782   002A78  0012               	return		;indir
  6783   002A7A                     i2u366_49:
  6784   002A7A                     i2l973:
  6785   002A7A  0012               	return		;funcret
  6786   002A7C                     __end_of_ADC_ISR:
  6787                           	callstack 0
  6788                           
  6789 ;; *************** function _ADC_DefaultInterruptHandler *****************
  6790 ;; Defined at:
  6791 ;;		line 128 in file "application.c"
  6792 ;; Parameters:    Size  Location     Type
  6793 ;;		None
  6794 ;; Auto vars:     Size  Location     Type
  6795 ;;		None
  6796 ;; Return value:  Size  Location     Type
  6797 ;;                  1    wreg      void 
  6798 ;; Registers used:
  6799 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6800 ;; Tracked objects:
  6801 ;;		On entry : 0/0
  6802 ;;		On exit  : 0/0
  6803 ;;		Unchanged: 0/0
  6804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6809 ;;Total ram usage:        0 bytes
  6810 ;; Hardware stack levels used: 1
  6811 ;; Hardware stack levels required when called: 1
  6812 ;; This function calls:
  6813 ;;		_ADC_GetConversionResult
  6814 ;; This function is called by:
  6815 ;;		_ADC_ISR
  6816 ;; This function uses a non-reentrant model
  6817 ;;
  6818                           
  6819                           	psect	text47
  6820   002770                     __ptext47:
  6821                           	callstack 0
  6822   002770                     _ADC_DefaultInterruptHandler:
  6823                           	callstack 21
  6824   002770                     
  6825                           ;application.c: 129:     if (0 == ADC_Req){
  6826   002770  5041               	movf	_ADC_Req^0,w,c
  6827   002772  A4D8               	btfss	status,2,c
  6828   002774  EFBE  F013         	goto	i2u341_41
  6829   002778  EFC0  F013         	goto	i2u341_40
  6830   00277C                     i2u341_41:
  6831   00277C  EFCC  F013         	goto	i2l4222
  6832   002780                     i2u341_40:
  6833   002780                     
  6834                           ;application.c: 130:         ret = ADC_GetConversionResult (&adc_1, &res_1);
  6835   002780  0ED5               	movlw	low _adc_1
  6836   002782  6E01               	movwf	ADC_GetConversionResult@_adc^0,c
  6837   002784  0E4B               	movlw	low _res_1
  6838   002786  6E02               	movwf	ADC_GetConversionResult@conversion_result^0,c
  6839   002788  ECE7  F00F         	call	_ADC_GetConversionResult	;wreg free
  6840   00278C  0100               	movlb	0	; () banked
  6841   00278E  6FED               	movwf	_ret& (0+255),b
  6842   002790                     
  6843                           ; BSR set to: 0
  6844                           ;application.c: 131:         ADC_Req = 1;
  6845   002790  0E01               	movlw	1
  6846   002792  6E41               	movwf	_ADC_Req^0,c
  6847                           
  6848                           ;application.c: 132:     }
  6849   002794  EFDE  F013         	goto	i2l843
  6850   002798                     i2l4222:
  6851   002798  0441               	decf	_ADC_Req^0,w,c
  6852   00279A  A4D8               	btfss	status,2,c
  6853   00279C  EFD2  F013         	goto	i2u342_41
  6854   0027A0  EFD4  F013         	goto	i2u342_40
  6855   0027A4                     i2u342_41:
  6856   0027A4  EFDE  F013         	goto	i2l843
  6857   0027A8                     i2u342_40:
  6858   0027A8                     
  6859                           ;application.c: 134:         ret = ADC_GetConversionResult (&adc_1, &res_2);
  6860   0027A8  0ED5               	movlw	low _adc_1
  6861   0027AA  6E01               	movwf	ADC_GetConversionResult@_adc^0,c
  6862   0027AC  0E49               	movlw	low _res_2
  6863   0027AE  6E02               	movwf	ADC_GetConversionResult@conversion_result^0,c
  6864   0027B0  ECE7  F00F         	call	_ADC_GetConversionResult	;wreg free
  6865   0027B4  0100               	movlb	0	; () banked
  6866   0027B6  6FED               	movwf	_ret& (0+255),b
  6867   0027B8                     
  6868                           ; BSR set to: 0
  6869                           ;application.c: 135:         ADC_Req = 0;
  6870   0027B8  0E00               	movlw	0
  6871   0027BA  6E41               	movwf	_ADC_Req^0,c
  6872   0027BC                     i2l843:
  6873   0027BC  0012               	return		;funcret
  6874   0027BE                     __end_of_ADC_DefaultInterruptHandler:
  6875                           	callstack 0
  6876                           
  6877 ;; *************** function _ADC_GetConversionResult *****************
  6878 ;; Defined at:
  6879 ;;		line 177 in file "MCAL_Layer/ADC/hal_adc.c"
  6880 ;; Parameters:    Size  Location     Type
  6881 ;;  _adc            1    0[COMRAM] PTR const struct .
  6882 ;;		 -> adc_1(7), 
  6883 ;;  conversion_r    1    1[COMRAM] PTR unsigned short 
  6884 ;;		 -> res_2(2), res_1(2), 
  6885 ;; Auto vars:     Size  Location     Type
  6886 ;;  ret             1    5[COMRAM] unsigned char 
  6887 ;; Return value:  Size  Location     Type
  6888 ;;                  1    wreg      unsigned char 
  6889 ;; Registers used:
  6890 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6891 ;; Tracked objects:
  6892 ;;		On entry : 0/0
  6893 ;;		On exit  : 0/0
  6894 ;;		Unchanged: 0/0
  6895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6896 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6897 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6898 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6899 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6900 ;;Total ram usage:        6 bytes
  6901 ;; Hardware stack levels used: 1
  6902 ;; This function calls:
  6903 ;;		Nothing
  6904 ;; This function is called by:
  6905 ;;		_ADC_DefaultInterruptHandler
  6906 ;;		_ADC_GetConversion_Blocking
  6907 ;; This function uses a non-reentrant model
  6908 ;;
  6909                           
  6910                           	psect	text48
  6911   001FCE                     __ptext48:
  6912                           	callstack 0
  6913   001FCE                     _ADC_GetConversionResult:
  6914                           	callstack 21
  6915   001FCE                     
  6916                           ;MCAL_Layer/ADC/hal_adc.c: 178:     Std_ReturnType ret = (Std_ReturnType)0x01;
  6917   001FCE  0E01               	movlw	1
  6918   001FD0  6E06               	movwf	ADC_GetConversionResult@ret^0,c
  6919                           
  6920                           ;MCAL_Layer/ADC/hal_adc.c: 179:     if ((((void*)0) == _adc) || (((void*)0) == conversio
      +                          n_result))
  6921   001FD2  5001               	movf	ADC_GetConversionResult@_adc^0,w,c
  6922   001FD4  B4D8               	btfsc	status,2,c
  6923   001FD6  EFEF  F00F         	goto	i2u318_41
  6924   001FDA  EFF1  F00F         	goto	i2u318_40
  6925   001FDE                     i2u318_41:
  6926   001FDE  EFF9  F00F         	goto	i2l3960
  6927   001FE2                     i2u318_40:
  6928   001FE2  5002               	movf	ADC_GetConversionResult@conversion_result^0,w,c
  6929   001FE4  A4D8               	btfss	status,2,c
  6930   001FE6  EFF7  F00F         	goto	i2u319_41
  6931   001FEA  EFF9  F00F         	goto	i2u319_40
  6932   001FEE                     i2u319_41:
  6933   001FEE  EFFD  F00F         	goto	i2l3962
  6934   001FF2                     i2u319_40:
  6935   001FF2                     i2l3960:
  6936                           
  6937                           ;MCAL_Layer/ADC/hal_adc.c: 180:     {;MCAL_Layer/ADC/hal_adc.c: 181:         ret = (Std_
      +                          ReturnType)0x00;
  6938   001FF2  0E00               	movlw	0
  6939   001FF4  6E06               	movwf	ADC_GetConversionResult@ret^0,c
  6940                           
  6941                           ;MCAL_Layer/ADC/hal_adc.c: 182:     }
  6942   001FF6  EF41  F010         	goto	i2l3972
  6943   001FFA                     i2l3962:
  6944                           
  6945                           ;MCAL_Layer/ADC/hal_adc.c: 184:     {;MCAL_Layer/ADC/hal_adc.c: 185:         if (0X01U =
      +                          = _adc->result_format)
  6946   001FFA  5001               	movf	ADC_GetConversionResult@_adc^0,w,c
  6947   001FFC  6ED9               	movwf	fsr2l,c
  6948   001FFE  6ADA               	clrf	fsr2h,c
  6949   002000  0E06               	movlw	6
  6950   002002  26D9               	addwf	fsr2l,f,c
  6951   002004  A2DF               	btfss	indf2,1,c
  6952   002006  EF07  F010         	goto	i2u320_41
  6953   00200A  EF09  F010         	goto	i2u320_40
  6954   00200E                     i2u320_41:
  6955   00200E  EF1C  F010         	goto	i2l3966
  6956   002012                     i2u320_40:
  6957   002012                     i2l3964:
  6958                           
  6959                           ;MCAL_Layer/ADC/hal_adc.c: 186:         {;MCAL_Layer/ADC/hal_adc.c: 187:             *co
      +                          nversion_result = (adc_result_t)((ADRESH << 8) + ADRESL );
  6960   002012  50C3               	movf	195,w,c	;volatile
  6961   002014  CFC4 F003          	movff	4036,??_ADC_GetConversionResult	;volatile
  6962   002018  6A04               	clrf	(??_ADC_GetConversionResult+1)^0,c
  6963   00201A  C003  F004         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  6964   00201E  6A03               	clrf	??_ADC_GetConversionResult^0,c
  6965   002020  2603               	addwf	??_ADC_GetConversionResult^0,f,c
  6966   002022  0E00               	movlw	0
  6967   002024  2204               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  6968   002026  5002               	movf	ADC_GetConversionResult@conversion_result^0,w,c
  6969   002028  6ED9               	movwf	fsr2l,c
  6970   00202A  6ADA               	clrf	fsr2h,c
  6971   00202C  C003  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  6972   002030  C004  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  6973                           
  6974                           ;MCAL_Layer/ADC/hal_adc.c: 188:         }
  6975   002034  EF41  F010         	goto	i2l3972
  6976   002038                     i2l3966:
  6977   002038  5001               	movf	ADC_GetConversionResult@_adc^0,w,c
  6978   00203A  6ED9               	movwf	fsr2l,c
  6979   00203C  6ADA               	clrf	fsr2h,c
  6980   00203E  0E06               	movlw	6
  6981   002040  26D9               	addwf	fsr2l,f,c
  6982   002042  B2DF               	btfsc	indf2,1,c
  6983   002044  EF26  F010         	goto	i2u321_41
  6984   002048  EF28  F010         	goto	i2u321_40
  6985   00204C                     i2u321_41:
  6986   00204C  EF09  F010         	goto	i2l3964
  6987   002050                     i2u321_40:
  6988   002050                     
  6989                           ;MCAL_Layer/ADC/hal_adc.c: 190:         {;MCAL_Layer/ADC/hal_adc.c: 191:             *co
      +                          nversion_result = (adc_result_t)(((ADRESH << 8) + ADRESL ) >> 6 ) ;
  6990   002050  50C3               	movf	195,w,c	;volatile
  6991   002052  CFC4 F003          	movff	4036,??_ADC_GetConversionResult	;volatile
  6992   002056  6A04               	clrf	(??_ADC_GetConversionResult+1)^0,c
  6993   002058  C003  F004         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  6994   00205C  6A03               	clrf	??_ADC_GetConversionResult^0,c
  6995   00205E  2603               	addwf	??_ADC_GetConversionResult^0,f,c
  6996   002060  0E00               	movlw	0
  6997   002062  2204               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  6998   002064  0E06               	movlw	6
  6999   002066  6E05               	movwf	(??_ADC_GetConversionResult+2)^0,c
  7000   002068                     i2u322_45:
  7001   002068  3404               	rlcf	(??_ADC_GetConversionResult+1)^0,w,c
  7002   00206A  3204               	rrcf	(??_ADC_GetConversionResult+1)^0,f,c
  7003   00206C  3203               	rrcf	??_ADC_GetConversionResult^0,f,c
  7004   00206E  2E05               	decfsz	(??_ADC_GetConversionResult+2)^0,f,c
  7005   002070  EF34  F010         	goto	i2u322_45
  7006   002074  5002               	movf	ADC_GetConversionResult@conversion_result^0,w,c
  7007   002076  6ED9               	movwf	fsr2l,c
  7008   002078  6ADA               	clrf	fsr2h,c
  7009   00207A  C003  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  7010   00207E  C004  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  7011   002082                     i2l3972:
  7012                           
  7013                           ;MCAL_Layer/ADC/hal_adc.c: 198:     return ret;
  7014   002082  5006               	movf	ADC_GetConversionResult@ret^0,w,c
  7015   002084  0012               	return		;funcret
  7016   002086                     __end_of_ADC_GetConversionResult:
  7017                           	callstack 0
  7018                           
  7019                           	psect	rparam
  7020   000000                     
  7021                           	psect	temp
  7022   000055                     btemp:
  7023                           	callstack 0
  7024   000055                     	ds	1
  7025   000000                     int$flags	set	btemp
  7026   000000                     wtemp8	set	btemp+1
  7027   000000                     ttemp5	set	btemp+1
  7028   000000                     ttemp6	set	btemp+4
  7029   000000                     ttemp7	set	btemp+8
  7030                           
  7031                           	psect	config
  7032                           
  7033                           ; Padding undefined space
  7034   300000                     	org	3145728
  7035   300000  FF                 	db	255
  7036                           
  7037                           ;Config register CONFIG1H @ 0x300001
  7038                           ;	Oscillator Selection bits
  7039                           ;	FOSC = RCIO6, External RC oscillator, port function on RA6
  7040                           ;	Fail-Safe Clock Monitor Enable bit
  7041                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7042                           ;	Internal/External Oscillator Switchover bit
  7043                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7044   300001                     	org	3145729
  7045   300001  07                 	db	7
  7046                           
  7047                           ;Config register CONFIG2L @ 0x300002
  7048                           ;	Power-up Timer Enable bit
  7049                           ;	PWRTEN = OFF, PWRT disabled
  7050                           ;	Brown-out Reset Enable bits
  7051                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  7052                           ;	Brown Out Reset Voltage bits
  7053                           ;	BORV = 18, VBOR set to 1.8 V nominal
  7054   300002                     	org	3145730
  7055   300002  1F                 	db	31
  7056                           
  7057                           ;Config register CONFIG2H @ 0x300003
  7058                           ;	Watchdog Timer Enable bit
  7059                           ;	WDTEN = ON, WDT is always enabled. SWDTEN bit has no effect
  7060                           ;	Watchdog Timer Postscale Select bits
  7061                           ;	WDTPS = 32768, 1:32768
  7062   300003                     	org	3145731
  7063   300003  1F                 	db	31
  7064                           
  7065                           ; Padding undefined space
  7066   300004                     	org	3145732
  7067   300004  FF                 	db	255
  7068                           
  7069                           ;Config register CONFIG3H @ 0x300005
  7070                           ;	CCP2 MUX bit
  7071                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  7072                           ;	PORTB A/D Enable bit
  7073                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  7074                           ;	Low-Power Timer1 Oscillator Enable bit
  7075                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7076                           ;	HFINTOSC Fast Start-up
  7077                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  7078                           ;	MCLR Pin Enable bit
  7079                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  7080   300005                     	org	3145733
  7081   300005  89                 	db	137
  7082                           
  7083                           ;Config register CONFIG4L @ 0x300006
  7084                           ;	Stack Full/Underflow Reset Enable bit
  7085                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7086                           ;	Single-Supply ICSP Enable bit
  7087                           ;	LVP = ON, Single-Supply ICSP enabled
  7088                           ;	Extended Instruction Set Enable bit
  7089                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7090                           ;	Background Debugger Enable bit
  7091                           ;	DEBUG = 0x1, unprogrammed default
  7092   300006                     	org	3145734
  7093   300006  85                 	db	133
  7094                           
  7095                           ; Padding undefined space
  7096   300007                     	org	3145735
  7097   300007  FF                 	db	255
  7098                           
  7099                           ;Config register CONFIG5L @ 0x300008
  7100                           ;	Code Protection Block 0
  7101                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  7102                           ;	Code Protection Block 1
  7103                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  7104                           ;	Code Protection Block 2
  7105                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  7106                           ;	Code Protection Block 3
  7107                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  7108   300008                     	org	3145736
  7109   300008  0F                 	db	15
  7110                           
  7111                           ;Config register CONFIG5H @ 0x300009
  7112                           ;	Boot Block Code Protection bit
  7113                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  7114                           ;	Data EEPROM Code Protection bit
  7115                           ;	CPD = OFF, Data EEPROM not code-protected
  7116   300009                     	org	3145737
  7117   300009  C0                 	db	192
  7118                           
  7119                           ;Config register CONFIG6L @ 0x30000A
  7120                           ;	Write Protection Block 0
  7121                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  7122                           ;	Write Protection Block 1
  7123                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  7124                           ;	Write Protection Block 2
  7125                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  7126                           ;	Write Protection Block 3
  7127                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  7128   30000A                     	org	3145738
  7129   30000A  0F                 	db	15
  7130                           
  7131                           ;Config register CONFIG6H @ 0x30000B
  7132                           ;	Configuration Register Write Protection bit
  7133                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  7134                           ;	Boot Block Write Protection bit
  7135                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  7136                           ;	Data EEPROM Write Protection bit
  7137                           ;	WRTD = OFF, Data EEPROM not write-protected
  7138   30000B                     	org	3145739
  7139   30000B  E0                 	db	224
  7140                           
  7141                           ;Config register CONFIG7L @ 0x30000C
  7142                           ;	Table Read Protection Block 0
  7143                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  7144                           ;	Table Read Protection Block 1
  7145                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7146                           ;	Table Read Protection Block 2
  7147                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  7148                           ;	Table Read Protection Block 3
  7149                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  7150   30000C                     	org	3145740
  7151   30000C  0F                 	db	15
  7152                           
  7153                           ;Config register CONFIG7H @ 0x30000D
  7154                           ;	Boot Block Table Read Protection bit
  7155                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7156   30000D                     	org	3145741
  7157   30000D  40                 	db	64
  7158                           tosu	equ	0xFFF
  7159                           tosh	equ	0xFFE
  7160                           tosl	equ	0xFFD
  7161                           stkptr	equ	0xFFC
  7162                           pclatu	equ	0xFFB
  7163                           pclath	equ	0xFFA
  7164                           pcl	equ	0xFF9
  7165                           tblptru	equ	0xFF8
  7166                           tblptrh	equ	0xFF7
  7167                           tblptrl	equ	0xFF6
  7168                           tablat	equ	0xFF5
  7169                           prodh	equ	0xFF4
  7170                           prodl	equ	0xFF3
  7171                           indf0	equ	0xFEF
  7172                           postinc0	equ	0xFEE
  7173                           postdec0	equ	0xFED
  7174                           preinc0	equ	0xFEC
  7175                           plusw0	equ	0xFEB
  7176                           fsr0h	equ	0xFEA
  7177                           fsr0l	equ	0xFE9
  7178                           wreg	equ	0xFE8
  7179                           indf1	equ	0xFE7
  7180                           postinc1	equ	0xFE6
  7181                           postdec1	equ	0xFE5
  7182                           preinc1	equ	0xFE4
  7183                           plusw1	equ	0xFE3
  7184                           fsr1h	equ	0xFE2
  7185                           fsr1l	equ	0xFE1
  7186                           bsr	equ	0xFE0
  7187                           indf2	equ	0xFDF
  7188                           postinc2	equ	0xFDE
  7189                           postdec2	equ	0xFDD
  7190                           preinc2	equ	0xFDC
  7191                           plusw2	equ	0xFDB
  7192                           fsr2h	equ	0xFDA
  7193                           fsr2l	equ	0xFD9
  7194                           status	equ	0xFD8

Data Sizes:
    Strings     29
    Constant    16
    Data        51
    BSS         110
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     53      84
    BANK0           160     11     142
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    adc_1$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    ADC_GetConversion_Interrupt@_adc	PTR const struct . size(1) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_GetConversionResult@_adc	PTR const struct . size(1) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_GetConversionResult@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    ADC_GetConversionResult@conversion_result	PTR unsigned short  size(1) Largest target is 2
		 -> res_1(COMRAM[2]), res_2(COMRAM[2]), 

    ADC_Init@_adc	PTR const struct . size(1) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_Init@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), NULL(), 

    ADC_SelectChannel@_adc	PTR const struct . size(1) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_StartConversion@_adc	PTR const struct . size(1) Largest target is 7
		 -> adc_1(BANK0[7]), 

    configure_voltage_reference@_adc	PTR const struct . size(1) Largest target is 7
		 -> adc_1(BANK0[7]), 

    configure_voltage_reference@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    convert_short_to_string@str	PTR unsigned char  size(1) Largest target is 6
		 -> adc_res_1_txt(BANK0[6]), adc_res_2_txt(BANK0[6]), 

    dc_motor_initialize@_dc_motor	PTR struct . size(1) Largest target is 2
		 -> motor_1(COMRAM[2]), motor_2(COMRAM[2]), 

    dc_motor_move_left@_dc_motor	PTR struct . size(1) Largest target is 2
		 -> motor_2(COMRAM[2]), 

    dc_motor_move_right@_dc_motor	PTR struct . size(1) Largest target is 2
		 -> motor_1(COMRAM[2]), 

    dc_motor_stop@_dc_motor	PTR struct . size(1) Largest target is 2
		 -> motor_1(COMRAM[2]), motor_2(COMRAM[2]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), lcd_1$lcd_data(BANK0[4]), led_initialize@pin_obj(COMRAM[1]), motor_1(COMRAM[2]), 
		 -> motor_1$dc_motor(COMRAM[2]), motor_2(COMRAM[2]), motor_2$dc_motor(COMRAM[2]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_intialize@_pin_config	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), lcd_1$lcd_data(BANK0[4]), led_initialize@pin_obj(COMRAM[1]), motor_1(COMRAM[2]), 
		 -> motor_1$dc_motor(COMRAM[2]), motor_2(COMRAM[2]), motor_2$dc_motor(COMRAM[2]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), lcd_1$lcd_data(BANK0[4]), led_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), 
		 -> led_turn_on@pin_obj(COMRAM[1]), motor_1(COMRAM[2]), motor_1$dc_motor(COMRAM[2]), motor_2(COMRAM[2]), 
		 -> motor_2$dc_motor(COMRAM[2]), relay_initialize@pin_obj(COMRAM[1]), relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_INTx_Clear_Flag@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_SetInterruptHandler@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRllllll[1]), LATB(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), 
		 -> LATE(BITBIGSFRllllh[1]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 10
		 -> adc_res_1_txt(BANK0[6]), adc_res_2_txt(BANK0[6]), STR_4(CODE[10]), STR_5(CODE[8]), 
		 -> STR_6(CODE[8]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_send_4bits_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    memset@dest	PTR void  size(1) Largest target is 6
		 -> adc_res_1_txt(BANK0[6]), adc_res_2_txt(BANK0[6]), 

    memset@p	PTR unsigned char  size(1) Largest target is 6
		 -> adc_res_1_txt(BANK0[6]), adc_res_2_txt(BANK0[6]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRllllll[1]), PORTB(BITBIGSFRlllllh[1]), PORTC(BITBIGSFRlllllh[1]), PORTD(BITBIGSFRlllllh[1]), 
		 -> PORTE(BITBIGSFRlllllh[1]), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1178$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1276$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    S1276$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    S1519$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    S2429$buffer	PTR unsigned char  size(2) Largest target is 0

    S2429$source	PTR const unsigned char  size(2) Largest target is 0

    select_result_format@_adc	PTR const struct . size(1) Largest target is 7
		 -> adc_1(BANK0[7]), 

    select_result_format@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    sp__memset	PTR void  size(1) Largest target is 6
		 -> adc_res_1_txt(BANK0[6]), adc_res_2_txt(BANK0[6]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 11
		 -> convert_byte_to_string@Temp_String(COMRAM[4]), convert_int_to_string@Temp_String(COMRAM[11]), convert_short_to_string@Temp_String(BANK0[6]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRllllll[1]), TRISB(BITBIGSFRlllhl[1]), TRISC(BITBIGSFRlllhl[1]), TRISD(BITBIGSFRlllhl[1]), 
		 -> TRISE(BITBIGSFRlllhl[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _lcd_4bit_send_string_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _dc_motor_stop->_gpio_pin_write_logic
    _dc_motor_move_right->_gpio_pin_write_logic
    _dc_motor_move_left->_gpio_pin_write_logic
    _convert_short_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    ___fltol->___flmul
    ___flmul->___xxtofl
    _Application->_lcd_4bit_initialize
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits_enable_signal->_gpio_pin_write_logic
    _lcd_send_4bits->_gpio_pin_write_logic
    _dc_motor_initialize->_gpio_pin_intialize
    _gpio_pin_intialize->_gpio_pin_write_logic
    _ADC_Init->_adc_input_channel_port_configure
    _ADC_GetConversion_Interrupt->_ADC_SelectChannel
    _ADC_SelectChannel->_adc_input_channel_port_configure

Critical Paths under _InterruptManager in COMRAM

    _ADC_DefaultInterruptHandler->_ADC_GetConversionResult

Critical Paths under _main in BANK0

    _main->_convert_short_to_string

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   96448
        _ADC_GetConversion_Interrupt
                        _Application
                            ___flmul
                            ___fltol
                            ___lwdiv
                           ___xxtofl
            _convert_short_to_string
                 _dc_motor_move_left
                _dc_motor_move_right
                      _dc_motor_stop
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             6     1      5   37376
                                             28 COMRAM     6     1      5
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  4     1      3   18937
                                             24 COMRAM     4     1      3
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              3     1      2   16716
                                             21 COMRAM     3     1      2
               _gpio_pin_write_logic
                     _lcd_send_4bits
       _lcd_send_4bits_enable_signal
 ---------------------------------------------------------------------------------
 (1) _dc_motor_stop                                        2     1      1    5133
                                             18 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_right                                  2     1      1    5057
                                             18 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_left                                   2     1      1    5057
                                             18 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _convert_short_to_string                             11     8      3    6429
                                              0 BANK0     11     8      3
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    15      4    4717
                                             35 COMRAM    17    13      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    3871
                                             31 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           11     8      3    3410
                                             20 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     957
                                             10 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             16 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                             10 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                             10 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     1      5     947
                                             10 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                             10 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     466
                                             10 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     517
                                             49 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1896
                                             24 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Application                                          0     0      0   33003
                           _ADC_Init
                _dc_motor_initialize
               _ecu_layer_initialize
                _lcd_4bit_initialize
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_initialize                                  4     3      1   25429
                                             24 COMRAM     4     3      1
                 _gpio_pin_intialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                3     1      2   18236
                                             21 COMRAM     3     1      2
               _gpio_pin_write_logic
                     _lcd_send_4bits
       _lcd_send_4bits_enable_signal
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits_enable_signal                         2     1      1    5287
                                             18 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       3     1      2    5725
                                             18 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _dc_motor_initialize                                  2     1      1    6968
                                             21 COMRAM     2     1      1
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_intialize                                   3     2      1    6726
                                             18 COMRAM     3     2      1
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 8     6      2    4891
                                             10 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_intialize                         7     6      1     559
                                             10 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             3     2      1     606
                                             13 COMRAM     3     2      1
   _adc_input_channel_port_configure
        _configure_voltage_reference
               _select_result_format
 ---------------------------------------------------------------------------------
 (3) _select_result_format                                 2     1      1     150
                                             10 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (3) _configure_voltage_reference                          2     1      1     150
                                             10 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion_Interrupt                          3     1      2    1040
                                             17 COMRAM     3     1      2
                  _ADC_SelectChannel
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_StartConversion                                  2     1      1     198
                                             10 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    4     2      2     424
                                             13 COMRAM     4     2      2
   _adc_input_channel_port_configure
 ---------------------------------------------------------------------------------
 (3) _adc_input_channel_port_configure                     4     4      0      30
                                             10 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _InterruptManager                                     4     4      0     810
                                              6 COMRAM     4     4      0
                            _ADC_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (8) _RB7_ISR                                              1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB6_ISR                                              1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB5_ISR                                              1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB4_ISR                                              1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0     634
                                NULL *
        _ADC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _ADC_DefaultInterruptHandler                          0     0      0     634
            _ADC_GetConversionResult
 ---------------------------------------------------------------------------------
 (10) _ADC_GetConversionResult                             6     4      2     634
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (9) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion_Interrupt
     _ADC_SelectChannel
       _adc_input_channel_port_configure
     _ADC_StartConversion
   _Application
     _ADC_Init
       _adc_input_channel_port_configure
       _configure_voltage_reference
       _select_result_format
     _dc_motor_initialize
       _gpio_pin_intialize
         _gpio_pin_direction_intialize
         _gpio_pin_write_logic
     _ecu_layer_initialize
     _lcd_4bit_initialize
       _gpio_pin_intialize
       _lcd_4bit_send_command
         _gpio_pin_write_logic
         _lcd_send_4bits
           _gpio_pin_write_logic
         _lcd_send_4bits_enable_signal
           _gpio_pin_write_logic
   ___flmul
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___lwdiv
   ___xxtofl
   _convert_short_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _dc_motor_move_left
     _gpio_pin_write_logic
   _dc_motor_move_right
     _gpio_pin_write_logic
   _dc_motor_stop
     _gpio_pin_write_logic
   _lcd_4bit_send_string_pos
     _lcd_4bit_send_char_data
       _gpio_pin_write_logic
       _lcd_send_4bits
       _lcd_send_4bits_enable_signal
     _lcd_4bit_set_cursor
       _lcd_4bit_send_command

 _InterruptManager (ROOT)
   _ADC_ISR
     NULL(Fake) *
     _ADC_DefaultInterruptHandler *
       _ADC_GetConversionResult
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      45        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      B      8E       5       88.8%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     35      54       1       89.4%
BITBIGSFRlhlhh      2B      0       0      37        0.0%
BITBIGSFRllllll     20      0       0      43        0.0%
BITBIGSFRlhlll      15      0       0      38        0.0%
BITBIGSFRh           D      0       0      36        0.0%
BITBIGSFRlllhh       7      0       0      39        0.0%
BITBIGSFRlllhl       6      0       0      40        0.0%
BITBIGSFRlllllh      4      0       0      42        0.0%
BITBIGSFRllllh       4      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E2      44        0.0%
DATA                 0      0      E2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Sep 13 23:34:20 2024

                      ??_InterruptManager 0007                           ?_lcd_send_4bits 0013  
                                      l71 1E2C                                        l81 2664  
                                      l76 26C0                              ___awdiv@sign 0010  
                                     l201 2548                                       l106 2332  
                                     l206 283A                                       l235 2466  
                                     l244 2A4C                                       l254 28E2  
                                     l249 28AA                                       l186 23D2  
                                     l259 2872                                       l356 2B48  
                                     l429 1B2E                                       l448 1C3E  
                                     l469 2608                                       l836 2950  
                                     l926 29EC                                       l960 26EE  
                                     l952 276C                                       l945 1F08  
                                     l954 276E                                       l891 2AC4  
                                     l964 270E                                       l876 2152  
                                     l893 2AC8                                       l878 21E0  
                                     l967 2716                                       l888 291A  
                                     l969 271A       __end_of_configure_voltage_reference 271C  
             _configure_voltage_reference 26C2                                       _abs 2986  
               _RB5_InterruptHandler_HIGH 00A3                           __end_of_ADC_ISR 2A7C  
                                     _ret 00ED                              ___awmod@sign 0010  
                     led_initialize@F3310 0048                                       tosl 0FFD  
                                     wreg 0FE8                     relay_initialize@F3304 0044  
                            ___flmul@aexp 002A                              ___flmul@bexp 002B  
             lcd_send_4bits@_data_command 0014              ?_ADC_DefaultInterruptHandler 0001  
                            ___flmul@sign 0025                              ___flmul@temp 0030  
                            ___flmul@prod 002C                           __end_of_RB4_ISR 2B32  
                         __end_of_RB5_ISR 2B18                           __end_of_RB6_ISR 2AFE  
                         __end_of_RB7_ISR 2AE4                              ___fltol@exp1 00E7  
                                    ?_abs 0011                                      l1220 2134  
                                    l1207 1FCC                                      l4000 1E76  
                                    l1600 1350                                      l1273 1D46  
                                    l4002 1E7C                                      l4004 1E82  
                                    l4020 274E                                      l4012 271C  
                                    l4100 23F0                                      l4006 1E86  
                                    l4030 26F6                                      l4022 2766  
                                    l4014 272C                                      l4102 23F6  
                                    l1607 141A                                      l1631 18C0  
                                    l1711 29B8                                      l4024 26C2  
                                    l4016 2730                                      l4200 21BA  
                                    l1704 27FC                                      l4104 2408  
                                    l4112 243E                                      l4026 26D2  
                                    l4018 2748                                      l4210 21DC  
                                    l4202 21BC                                      l4042 1D48  
                                    l1474 24DA                                      l1634 1A1C  
                                    l4106 241A                                      l4114 2464  
                                    l1467 24D2                                      l1723 228A  
                                    l4028 26D6                                      l4204 21BE  
                                    l4212 21DE                                      l4060 1D9A  
                                    l4044 1D5C                                      l1708 29A0  
                                    l1660 2984                                      l4108 242C  
                                    l1645 19B4                                      l1653 2A1C  
                                    l4230 28F8                                      l4206 21CC  
                                    l4070 1DE0                                      l4062 1DA8  
                                    l4054 1D7C                                      l4046 1D64  
                                    l1590 10F4                                      l1638 1958  
                                    l1734 2B46                                      l4232 2900  
                                    l4240 2AA8                                      l4208 21D4  
                                    l4080 1E1C                                      l4072 1DEC  
                                    l4064 1DB4                                      l4056 1D88  
                                    l4048 1D78                                      l4234 2912  
                                    l4242 2ABC                                      l4074 1DF8  
                                    l4066 1DCE                                      l4058 1D8A  
                                    l4082 1E2A                                      l1594 1458  
                                    l4090 2622                                      l4236 2918  
                                    l4228 28E4                                      l4244 2AC6  
                                    l4180 2A32                                      l4076 1E04  
                                    l4068 1DD4                                      l4500 10DE  
                                    l4092 2662                                      l4260 228C  
                                    l1597 12EA                                      l4190 214A  
                                    l4182 2A3A                                      l4078 1E10  
                                    l4510 1128                                      l4502 10E4  
                                    l4342 2874                                      l4086 260A  
                                    l4270 22FA                                      l4262 229C  
                                    l1599 1362                                      l4192 2154  
                                    l4184 2A4A                                      l4520 1178  
                                    l4512 1134                                      l4504 1104  
                                    l4352 28AC                                      l4344 2888  
                                    l4088 261A                                      l4096 23D4  
                                    l4272 22FE                                      l4264 22AE  
                                    l4194 21A6                                      l3730 1BC2  
                                    l3722 1B30                                      l4178 2A1E  
                                    l4450 291C                                      l4530 11BA  
                                    l4522 1184                                      l4514 113E  
                                    l4506 1114                                      l1698 1868  
                                    l4354 28C0                                      l4346 2890  
                                    l4362 283C                                      l4098 23E8  
                                    l4274 2330                                      l4266 22B6  
                                    l4460 29BA                                      l4196 21B6  
                                    l4188 2136                                      l3724 1B44  
                                    l4452 2928                                      l4540 121C  
                                    l4532 11C6                                      l4524 1190  
                                    l4516 1154                                      l4700 19C8  
                                    l4356 28C8                                      l4348 28A8  
                                    l4364 2850                                      l4268 22CC  
                                    l4462 29CA                                      l4198 21B8  
                                    l3734 1C12                                      l3726 1B64  
                                    l4454 2934                                      l4550 12B2  
                                    l4542 1228                                      l4534 11D6  
                                    l4526 119E                                      l4518 1160  
                                    l4470 1030                                      l4702 19EC  
                                    l4358 28E0                                      l4366 2858  
                                    l4464 29D2                                      l3728 1B6C  
                                    l3736 1C3C                                      l4456 2940  
                                    l4560 1308                                      l4552 12D0  
                                    l4544 1244                                      l4536 11F0  
                                    l4528 11AA                                      l4480 106C  
                                    l4472 103C                                      l4704 19FC  
                                    l5600 2100                                      l4368 2870  
                                    l4466 29EA                                      l3850 1AB0  
                                    l3842 1A1E                                      l4458 294C  
                                    l4570 1372                                      l4562 130C  
                                    l4554 12DA                                      l4546 126E  
                                    l4538 1200                                      l4490 109E  
                                    l4482 107C                                      l4474 104A  
                                    l4650 248A                                      l4706 1A0A  
                                    l5610 212C                                      l5602 2108  
                                    l3844 1A32                                      l3940 25E4  
                                    l3860 24DC                                      l4580 13D4  
                                    l4572 137E                                      l4564 131A  
                                    l4556 12E8                                      l4548 12A4  
                                    l4492 10AC                                      l4484 1082  
                                    l4476 104C                                      l4660 24C4  
                                    l4652 2492                                      l4644 2468  
                                    l4708 1A0C                                      l5540 1F24  
                                    l5604 210E                                      l5620 220C  
                                    l5700 2952                                      l3854 1B00  
                                    l3846 1A52                                      l3942 2606  
                                    l3934 25AC                                      l3862 24EC  
                                    l3870 27FE                                      l3950 267E  
                                    l4590 143C                                      l4582 13E8  
                                    l4574 138C                                      l4566 1348  
                                    l4558 12FA                                      l4494 10AE  
                                    l4486 1092                                      l4478 105C  
                                    l4662 24C6                                      l4654 24A0  
                                    l4646 2470                                      l4670 188A  
                                    l5550 1F4A                                      l5542 1F28  
                                    l5534 1F0A                                      l5606 2114  
                                    l5630 2994                                      l5622 2228  
                                    l5614 21E2                                      l5702 295A  
                                    l3848 1A5A                                      l3856 1B2C  
                                    l3936 25BC                                      l3864 24F4  
                                    l3880 2838                                      l3872 280E  
                                    l3952 26BE                                      l4592 143E  
                                    l4584 1402                                      l4576 13B6  
                                    l4496 10BE                                      l4488 1098  
                                    l4664 24CC                                      l4656 24A6  
                                    l4648 2482                                      l4680 1902  
                                    l4672 18D0                                      l5560 1F80  
                                    l5552 1F5C                                      l5544 1F36  
                                    l5536 1F0E                                      l5608 2124  
                                    l5624 225A                                      l5616 21F2  
                                    l5640 16E6                                      l5632 16A8  
                                    l5704 2962                                      l5720 235A  
                                    l5712 2334                                      l3938 25DC  
                                    l3866 2546                                      l3874 2816  
                                    l3946 2666                                      l4586 141E  
                                    l4594 1444                                      l4578 13BA  
                                    l4498 10CE                                      l4658 24BC  
                                    l4690 198A                                      l4682 190E  
                                    l4674 18E6                                      l4666 186C  
                                    l5562 1F96                                      l5554 1F64  
                                    l5570 1FAC                                      l5546 1F3E  
                                    l5538 1F1C                                      l5618 2202  
                                    l5650 174E                                      l5642 16F0  
                                    l5634 16CC                                      l5706 296A  
                                    l5730 23B4                                      l5722 2362  
                                    l5714 233A                                      l3980 1E3A  
                                    l3876 2822                                      l3948 2676  
                                    l4596 1448                                      l4588 142E  
                                    l5740 1C58                                      l4692 1996  
                                    l4684 1940                                      l4668 187C  
                                    l5572 1FBC                                      l5564 1F9E  
                                    l5556 1F6C                                      l5548 1F42  
                                    l5580 208A                                      l5628 2986  
                                    l5660 17D4                                      l5652 1766  
                                    l5644 170E                                      l5636 16D4  
                                    l5708 297A                                      l5732 23B6  
                                    l5724 237A                                      l5716 2346  
                                    l3990 1E58                                      l3982 1E40  
                                    l3878 282A                                      l5750 1CA8  
                                    l4694 19A4                                      l4686 1942  
                                    l4678 18FA                                      l5574 1FC4  
                                    l5566 1FA0                                      l5558 1F7A  
                                    l5590 20BA                                      l5582 2098  
                                    l5662 17E4                                      l5670 1822  
                                    l5654 1796                                      l5646 172C  
                                    l5638 16E2                                      l5726 2388  
                                    l5734 23D0                                      l5718 234A  
                                    l5830 14BE                                      l5822 145A  
                                    l3992 1E5E                                      l3984 1E46  
                                    l3976 1E30                                      l5904 1C26  
                                    l5760 1CD2                                      l5752 1CAC  
                                    l5744 1C6C                                      l4696 19C2  
                                    l4688 194E                                      l5568 1FA6  
                                    l5592 20CC                                      l5584 20A0  
                                    l5664 17F4                                      l5656 17B2  
                                    l5648 1744                                      l5672 1838  
                                    l5728 23A0                                      l5840 15A6  
                                    l5832 14CE                                      l5824 145E  
                                    l5906 1E9A                                      l3994 1E64  
                                    l3986 1E4C                                      l3978 1E34  
                                    l5770 1CFA                                      l5762 1CDC  
                                    l5754 1CBA                                      l5746 1C96  
                                    l5738 1C40                                      l4698 19C4  
                                    l5594 20D4                                      l5586 20A4  
                                    l5578 2086                                      l5666 1806  
                                    l5658 17C4                                      l5682 27BE  
                                    l5850 1622                                      l5842 15C2  
                                    l5834 14E2                                      l5826 147E  
                                    l3996 1E6A                                      l3988 1E52  
                                    l5772 1D06                                      l5764 1CE6  
                                    l5748 1C98                                      l5692 29EE  
                                    l5596 20DC                                      l5588 20B2  
                                    l5668 1820                                      l5676 1844  
                                    l5684 27C6                                      l5860 1684  
                                    l5852 163C                                      l5844 15DE  
                                    l5836 14F2                                      l5828 149E  
                                    l3998 1E70                                      l5774 1D16  
                                    l5694 29F6                                      l5598 20EA  
                                    l5686 27D6                                      l5862 1694  
                                    l5854 1652                                      l5846 15F4  
                                    l5838 1502                                      l5776 1D26  
                                    l5696 2A00                                      l5688 27F4  
                                    l5856 1662                                      l5848 1608  
                                    l5778 1D36                                      l5698 2A02  
                                    l5858 166E                                      STR_1 102B  
                                    STR_2 102B                                      STR_4 1011  
                                    STR_5 101B                                      STR_6 1023  
                                    u3020 1B16                                      u3004 1A78  
                                    u3021 1B10                                      u3005 1A74  
                                    _LATA 0F89                                      u3014 1ACE  
                                    u3030 24EC                                      _LATB 0F8A  
                                    u3015 1ACA                                      u3031 24E8  
                                    _LATC 0F8B                                      u3040 280E  
                                    u4000 18E6                                      _LATD 0F8C  
                                    u3041 280A                                      u4001 18E2  
                                    _LATE 0F8D                                      u3026 1B18  
                                    u4010 193C                                      u4011 1938  
                                    u3300 1D5C                                      u4020 1986  
                                    u3301 1D58                                      u4021 1982  
                                    u3230 272C                                      u3150 25BC  
                                    u3310 1D9A                                      u4030 19A4  
                                    u3231 2728                                      u3151 25B8  
                                    u3311 1D96                                      u4031 19A0  
                                    u3240 2748                                      u3400 214A  
                                    u3160 25DC                                      u4040 19B4  
                                    u3320 261A                                      u3241 2744  
                                    u3401 2146                                      u3161 25D8  
                                    u4041 19B0                                      u3321 2616  
                                    u3250 2766                                      u3170 2676  
                                    u4050 19C2                                      u3330 23E8  
                                    u3251 2762                                      u3171 2672  
                                    u4051 19BE                                      u3331 23E4  
                                    u3260 26D2                                      u4060 19FC  
                                    u3500 2330                                      u3261 26CE  
                                    u4061 19F8                                      u3501 232C  
                                    u3430 28F8                                      u3270 26EE  
                                    u4070 1A0A                                      u3431 28F4  
                                    u3271 26EA                                      u4071 1A06  
                                    u3440 2ABC                                      u3280 270E  
                                    u3600 2850                                      u3441 2AB8  
                                    u3281 270A                                      u3601 284C  
                                    u2804 1BE0                                      u3700 105C  
                                    u3460 229C                                      u2805 1BDC  
                                    u3701 1058                                      u3461 2298  
                                    u3390 2A32                                      u3710 106C  
                                    u5310 1F1C                                      u3470 22AE  
                                    u3391 2A2E                                      u3711 1068  
                                    u5311 1F18                                      u3471 22AA  
                                    u3800 131A                                      u3720 10AC  
                                    u5320 1F36                                      u5400 20EA  
                                    u3480 22F2                                      u3801 1316  
                                    u3721 10A8                                      u5321 1F32  
                                    u5401 20E6                                      u2770 1B44  
                                    u3810 1348                                      u3730 10BE  
                                    u5330 1F5C                                      u5410 2100  
                                    u3490 2320                                      u2771 1B40  
                                    u3811 1344                                      u3731 10BA  
                                    u5331 1F58                                      u5411 20FC  
                                    u2780 1B64                                      u3820 135E  
                                    u3740 10CE                                      u5340 1F7A  
                                    u5420 2124                                      u5500 172C  
                                    u3580 2888                                      u2781 1B60  
                                    u3821 135A                                      u3741 10CA  
                                    u5341 1F76                                      u5421 2120  
                                    u5501 1728                                      u3581 2884  
                                    u3830 1372                                      u3750 1104  
                                    u5350 1F96                                      u5430 21F2  
                                    u5510 1762                                      u3590 28C0  
                                    u3831 136E                                      u3751 1100  
                                    u5351 1F92                                      u5431 21EE  
                                    u5511 175C                                      u3591 28BC  
                                    u3487 22E8                                      u3680 29CA  
                                    u3840 138C                                      u3760 1114  
                                    u5360 1FBC                                      u5440 2202  
                                    u5520 1764                                      u3681 29C6  
                                    u3841 1388                                      u3761 1110  
                                    u5361 1FB8                                      u5441 21FE  
                                    u5601 2340                                      u3497 2316  
                                    u2794 1B8A                                      u3850 13D4  
                                    u3770 128E                                      u3690 104A  
                                    u5370 2098                                      u5450 2228  
                                    u5530 17C4                                      u5610 235A  
                                    u2795 1B86                                      u3851 13D0  
                                    u3691 1046                                      u5371 2094  
                                    u5451 2224                                      u5531 17C0  
                                    u5611 2356                                      u2980 1A32  
                                    u3860 1402                                      u3780 12E8  
                                    u5380 20B2                                      u5460 225A  
                                    u5540 17D4                                      u5620 23D0  
                                    u2981 1A2E                                      u3861 13FE  
                                    u3781 12E4                                      u5381 20AE  
                                    u5461 2256                                      u5541 17D0  
                                    u5621 23CC                                      u2990 1A52  
                                    u3870 143C                                      u3790 1308  
                                    u5630 1C58                                      u3950 2482  
                                    u5390 20CC                                      u5470 2994  
                                    u5550 17E4                                      u2991 1A4E  
                                    u3871 1438                                      u3791 1304  
                                    u3775 1284                                      u5631 1C54  
                                    u3951 247E                                      u5391 20C8  
                                    u5471 2990                                      u5551 17E0  
                                    u5640 1C8C                                      u3960 24A0  
                                    u5560 17F4                                      u5480 16CC  
                                    u3961 249C                                      u5561 17F0  
                                    u5481 16C8                                      u5650 1CBA  
                                    u3970 24BC                                      u5570 1834  
                                    u5490 170E                                      u5651 1CB6  
                                    u3971 24B8                                      u5571 1830  
                                    u5491 170A                                      u5660 1CCE  
                                    u3980 187C                                      u5580 27F4  
                                    u5661 1CCA                                      u5645 1C82  
                                    u3981 1878                                      u5581 27F0  
                                    u5670 1CF6                                      u3990 188A  
                                    u5590 2A1C                                      u5750 14CE  
                                    u5807 1DBA                                      u5671 1CF2  
                                    u3991 1886                                      u5591 2A18  
                                    u5751 14CA                                      u5680 1D16  
                                    u5760 14F2                                      u5817 1DD0  
                                    u5681 1D12                                      u5761 14EE  
                                    u5690 1D26                                      u5770 1652  
                                    u5827 2824                                      u5691 1D22  
                                    u5771 164E                                      u5780 1684  
                                    u5781 1680                                      u5797 1DA0  
                _RB4_InterruptHandler_LOW 00A5                                      abs@a 0011  
                                    _dbuf 0060                                      _main 145A  
                                    _prec 0097                  _RB7_InterruptHandler_LOW 0099  
                                    fsr0h 0FEA                                      fsr1h 0FE2  
                                    indf0 0FEF                                      fsr2h 0FDA  
                                    fsr0l 0FE9                                      indf1 0FE7  
                                    indf2 0FDF                                      fsr1l 0FE1  
                                    fsr2l 0FD9                                      btemp 0055  
                        __end_of_ADC_Init 21E2                                      prodh 0FF4  
                                    prodl 0FF3                                      start 02CE  
          ADC_GetConversion_Interrupt@ret 0014                       __end_of_Application 2952  
                            ___param_bank 0000                     _lcd_4bit_send_command 2666  
                  dc_motor_initialize@ret 0017                                     ??_abs 0013  
                    _gpio_pin_write_logic 1B30            lcd_4bit_send_string_pos@coulmn 001F  
                        __end_of_INT0_ISR 2B46                          __end_of_INT1_ISR 2B42  
                        __end_of_INT2_ISR 2B3E                             ___fltol@sign1 00E6  
                                   ?_main 0001                           __end_of___awdiv 1FCE  
                                   _EEADR 0FA9                           __end_of___awmod 2136  
                         __end_of___flmul 145A                           __end_of___fltol 1D48  
                         ___awdiv@divisor 000D                           __end_of___lwdiv 24DC  
                                   i2l610 2B44                                     i2l540 005A  
                                   i2l614 2B40                                     i2l542 007A  
                                   i2l551 01CE                                     i2l544 00BE  
                                   i2l618 2B3C                                     i2l554 0256  
                                   i2l546 0102                                     i2l538 003A  
                                   i2l628 2B30                                     i2l556 029A  
                                   i2l548 0146                                     i2l638 2B16  
                                   i2l911 2084                                     i2l559 02BA  
                                   i2l648 2AFC                                     i2l658 2AE2  
                                   i2l843 27BC                           ___awdiv@counter 000F  
                                   i2l973 2A7A                       relay_turn_off@F3314 0042  
                            vfpfcnvrt@fmt 0016                                     _PORTA 0F80  
                                   _PORTB 0F81                                     _PORTC 0F82  
                                   _PORTD 0F83                                     _PORTE 0F84  
                                   _TRISA 0F92                                     _TRISB 0F93  
                                   _TRISC 0F94                                     _TRISD 0F95  
                                   _TRISE 0F96                 lcd_4bit_set_cursor@coulmn 001B  
                      _lm35_res_1_Celsius 003A                  ?_convert_short_to_string 00E2  
                                   _adc_1 00D5                        _lm35_res_2_Celsius 0038  
                                   _lcd_1 00DC                                     _flags 0040  
                                   _fputc 21E2                                     _res_1 004B  
                                   _res_2 0049                                     _width 0095  
                                   _putch 2B46              ?_ADC_GetConversion_Interrupt 0012  
                                   pclath 0FFA                                     pclatu 0FFB  
                                   tablat 0FF5                                     ttemp5 0056  
                                   ttemp6 0059                                     ttemp7 005D  
                                   status 0FD8                                     wtemp8 0056  
                         __end_of_sprintf 2986                           __initialization 254A  
                            __end_of_main 16A8                     ?_gpio_pin_write_logic 000B  
                               ??_ADC_ISR 0007                             _lat_registers 00C1  
             __end_of_dc_motor_initialize 2A4E                                    ??_main 0036  
                           __activetblptr 0003                          led_turn_on@F3315 0047  
                               ??_RB4_ISR 0001                                 ??_RB5_ISR 0001  
                               ??_RB6_ISR 0001                                 ??_RB7_ISR 0001  
                                  ?_fputc 000B                                    _ADRESH 0FC4  
                                  _EEADRH 0FAA                                    _ADRESL 0FC3  
                                  _EEDATA 0FA8                                    _EECON2 0FA7  
                        ___awdiv@dividend 000B                                    ?_putch 0001  
                                  i2l4220 2790                                    i2l4222 2798  
                                  i2l4224 27A8                                    i2l4216 2770  
                                  i2l2392 2B3E                                    i2l4226 27B8  
                                  i2l4218 2780                                    i2l2388 2B42  
                                  i2l4412 2AFC                                    i2l4404 2AE6  
                                  i2l4420 2ACE                                    i2l5300 0162  
                                  i2l4406 2AE8                                    i2l5310 0198  
                                  i2l5302 0170                                    i2l4432 2A4E  
                                  i2l5320 01DC                                    i2l5312 01A6  
                                  i2l5304 0180                                    i2l4434 2A50  
                                  i2l4426 2AE2                                    i2l4418 2ACC  
                                  i2l5322 01EA                                    i2l5330 0212  
                                  i2l5314 01B4                                    i2l5306 0184  
                                  i2l4436 2A62                                    i2l4372 2B3A  
                                  i2l5340 0250                                    i2l5332 0220  
                                  i2l5324 01F8                                    i2l5316 01C4  
                                  i2l5308 018A                                    i2l5260 0048  
                                  i2l4390 2B00                                    i2l5350 0294  
                                  i2l5342 0264                                    i2l5334 022E  
                                  i2l5326 0208                                    i2l5318 01C8  
                                  i2l5270 0096                                    i2l5262 0056  
                                  i2l5254 001A                                    i2l4384 2B30  
                                  i2l4376 2B1A                                    i2l4392 2B02  
                                  i2l5352 02A8                                    i2l5344 0272  
                                  i2l5336 023C                                    i2l5328 020C  
                                  i2l5280 00DA                                    i2l5272 00A4  
                                  i2l5264 0068                                    i2l5256 0028  
                                  i2l4378 2B1C                                    i2l5354 02B6  
                                  i2l5346 0280                                    i2l5338 024C  
                                  i2l5290 011E                                    i2l5282 00E8  
                                  i2l5274 00B4                                    i2l5266 0076  
                                  i2l5258 0036                                    i2l5348 0290  
                                  i2l5292 012C                                    i2l5284 00F8  
                                  i2l5276 00B8                                    i2l5268 0088  
                                  i2l4398 2B16                                    i2l5294 013C  
                                  i2l5286 00FC                                    i2l5278 00CC  
                                  i2l3960 1FF2                                    i2l5296 0140  
                                  i2l5288 0110                                    i2l3962 1FFA  
                                  i2l5298 0154                                    i2l3964 2012  
                                  i2l3972 2082                                    i2l3956 1FCE  
                                  i2l3966 2038                                    i2l3958 1FE2  
                                  i2l3968 2050                             vfpfcnvrt@done 0019  
                             _Application 291C                          __end_of___xxtofl 1A1E  
        __end_of_lcd_4bit_send_string_pos 2334               __end_of_dc_motor_move_right 28AC  
                  ?_lcd_4bit_send_command 0016           lcd_send_4bits_enable_signal@lcd 0013  
         lcd_send_4bits_enable_signal@ret 0014                              vfprintf@cfmt 0023  
                               ??___awdiv 000F                             _adc_res_1_txt 00B1  
                               ??___awmod 000F                             _adc_res_2_txt 00AB  
                               ??___flmul 0021                                 ??___fltol 00E2  
                               ??___lwdiv 000F                                    _memset 29EE  
                                  clear_0 2590                                    clear_1 259C  
                        ___awdiv@quotient 0011                           ___awmod@divisor 000D  
                                  isa$std 0001                           ___awmod@counter 000F  
 gpio_pin_direction_intialize@_pin_config 000B                                    fputc@c 000B  
                            __pdataCOMRAM 004D                                 ?_ADC_Init 000E  
                            __mediumconst 0000                                    tblptrh 0FF7  
                                  tblptrl 0FF6                                    tblptru 0FF8  
                                  putch@c 0001                          __end_of_vfprintf 27FE  
                               ??_sprintf 0028              __end_of_select_result_format 2770  
                            ___xxtofl@arg 0015                              ___xxtofl@exp 0014  
                            ___xxtofl@val 000B                                __accesstop 0060  
                 __end_of__initialization 25A2                                 ?_INT0_ISR 0001  
                               ?_INT1_ISR 0001                                 ?_INT2_ISR 0001  
                           ___rparam_used 0001                                ___fltol@f1 0032  
                        ??_lcd_send_4bits 0015               dc_motor_move_left@_dc_motor 0013  
                 _lcd_4bit_send_char_data 260A                    ??_gpio_pin_write_logic 000D  
                          __pcstackCOMRAM 0001                              __pidataBANK0 2A7C  
                           __end_of_fputc 228C              convert_short_to_string@F3463 008B  
                           __end_of_putch 2B48                  lcd_4bit_send_command@lcd 0016  
                       RB5_ISR@RB5_source 0001                  lcd_4bit_send_command@ret 0018  
                 _ADC_GetConversionResult 1FCE                                ??_ADC_Init 000F  
                    ADC_SelectChannel@ret 0011              convert_short_to_string@value 00E2  
                                 ??_fputc 000E                                   ??_putch 000B  
                  ADC_StartConversion@ret 000C                                __pbssBANK0 0060  
                   _INT0_InterruptHandler 003E                                ??_INT0_ISR 0001  
                              ??_INT1_ISR 0001                                ??_INT2_ISR 0001  
              ADC_GetConversionResult@ret 0006        convert_short_to_string@DataCounter 00EC  
                       led_turn_off@F3320 0046                                   _ADC_ISR 2A4E  
                                 ?_memset 000B                                   _ADC_Req 0041  
                                 _RB4_ISR 2B18                                   _RB5_ISR 2AFE  
                                 _RB6_ISR 2AE4                                   _RB7_ISR 2ACA  
                               ?___xxtofl 000B                 ?_lcd_4bit_send_string_pos 001D  
               _RB6_InterruptHandler_HIGH 009F                      led_turn_toggle@F3325 0045  
   lcd_4bit_initialize@l_data_pin_counter 001B                         RB7_ISR@RB7_source 0001  
      ADC_GetConversion_Interrupt@channel 0013                                _btn_values 1001  
                          _tris_registers 00CB                  _RB6_InterruptHandler_LOW 009D  
               ??_lcd_4bit_send_char_data 0018                      _ADC_InterruptHandler 0036  
                                 __Hparam 0000                              ADC_Init@_adc 000E  
                                 __Lparam 0000                     dc_motor_move_left@ret 0014  
                                 ___awdiv 1F0A                                   ___awmod 2086  
                                 ___flmul 1030                                   ___fltol 1C40  
                                 ___lwdiv 2468                                 ?_vfprintf 0020  
                            __psmallconst 1000                 ??_ADC_GetConversionResult 0003  
              __end_of_gpio_pin_intialize 260A                                   __pcinit 254A  
    __end_of_lcd_send_4bits_enable_signal 283C              _lcd_send_4bits_enable_signal 27FE  
                    _select_result_format 271C                                   __ramtop 1000  
                                 __ptext0 145A                                   __ptext1 228C  
                                 __ptext2 23D4                                   __ptext3 260A  
                                 __ptext4 283C                                   __ptext5 2874  
                                 __ptext6 28AC                                   __ptext7 2334  
                                 __ptext8 2952                                   __ptext9 27BE  
                              ??___xxtofl 000F                          ___awmod@dividend 000B  
                                 _motor_1 0053                                   _motor_2 0051  
                                 _sprintf 2952                      end_of_initialization 25A2  
                       lcd_send_4bits@lcd 0013                         lcd_send_4bits@ret 0015  
                select_result_format@_adc 000B                                   fputc@fp 000D  
                            ?_Application 0001                                   memset@c 000C  
                                 memset@n 000E                                   memset@p 0010  
                 ??_lcd_4bit_send_command 0018                     gpio_pin_intialize@ret 0015  
                           _dc_motor_stop 283C                         __end_of_vfpfcnvrt 186A  
                                 postdec1 0FE5                                   postdec2 0FDD  
                                 postinc0 0FEE                                   postinc1 0FE6  
                                 postinc2 0FDE                          vfpfcnvrt@convarg 001B  
                              ??_vfprintf 0023                     ?_select_result_format 000B  
                     _lcd_4bit_initialize 1D48           __end_of_lcd_4bit_send_char_data 2666  
                   _INT1_InterruptHandler 003C                                 _PORTBbits 0F81  
                        _InterruptManager 0008             ?_lcd_send_4bits_enable_signal 0013  
           gpio_pin_intialize@_pin_config 0013                lcd_4bit_send_char_data@lcd 0016  
              lcd_4bit_send_char_data@ret 0018      __end_of_gpio_pin_direction_intialize 1B30  
            _gpio_pin_direction_intialize 1A1E       __end_of_ADC_DefaultInterruptHandler 27BE  
             _ADC_DefaultInterruptHandler 2770                             ___xxtofl@sign 0013  
                     _ADC_StartConversion 2AA8                      ?_lcd_4bit_initialize 0019  
                             ___flmul@grs 0026             ??_ADC_DefaultInterruptHandler 0007  
                          ?_dc_motor_stop 0013                       _lcd_4bit_set_cursor 23D4  
                      relay_turn_on@F3309 0043                      ?_ADC_StartConversion 000B  
             lcd_4bit_send_string_pos@lcd 001D               lcd_4bit_send_string_pos@ret 0022  
             lcd_4bit_send_string_pos@row 001E               lcd_4bit_send_string_pos@str 0020  
                             vfpfcnvrt@ap 0017                               vfpfcnvrt@cp 001A  
                             vfpfcnvrt@fp 0015                             __pidataCOMRAM 2B32  
 adc_input_channel_port_configure@channel 000D                            __end_of_memset 2A1E  
            ?_configure_voltage_reference 000B                       start_initialization 254A  
                    ?_lcd_4bit_set_cursor 0019                               __end_of_abs 29BA  
           ?_gpio_pin_direction_intialize 000B       __end_of_ADC_GetConversion_Interrupt 29EE  
             _ADC_GetConversion_Interrupt 29BA  ADC_GetConversionResult@conversion_result 0002  
                   ??_lcd_4bit_initialize 001A                    dc_motor_stop@_dc_motor 0013  
                 _convert_short_to_string 2334                     ADC_SelectChannel@_adc 000E  
           ??_ADC_GetConversion_Interrupt 0014                convert_int_to_string@F3470 0080  
                   ??_ADC_StartConversion 000C               convert_byte_to_string@F3456 0091  
              __end_of_dc_motor_move_left 28E4                               vfprintf@fmt 0021  
                  ??_select_result_format 000C                               __pdataBANK0 00B7  
                                ?_ADC_ISR 0001                                  ??_memset 0010  
            __end_of_ecu_layer_initialize 2B4A                                memset@dest 000B  
            lcd_4bit_send_command@command 0017                          dc_motor_stop@ret 0014  
                 ADC_StartConversion@_adc 000B                                  ?_RB4_ISR 0001  
                                ?_RB5_ISR 0001                                  ?_RB6_ISR 0001  
                                ?_RB7_ISR 0001                                 ___flmul@a 001D  
                               ___flmul@b 0019                               __pbssCOMRAM 0036  
                   ??_lcd_4bit_set_cursor 001C                             __pcstackBANK0 00E2  
           ??_configure_voltage_reference 000C            ??_lcd_send_4bits_enable_signal 0014  
             ADC_GetConversionResult@_adc 0001        convert_short_to_string@Temp_String 00E5  
                   _INT2_InterruptHandler 00A9           gpio_pin_direction_intialize@ret 0011  
                         ??_dc_motor_stop 0014                                 __pnvBANK0 00ED  
                        ___lwdiv@dividend 000B                                 __pintcode 0008  
__end_of_adc_input_channel_port_configure 1F0A        ??_adc_input_channel_port_configure 000B  
       ?_adc_input_channel_port_configure 0001          _adc_input_channel_port_configure 1E2E  
                       _ADC_SelectChannel 28E4           gpio_pin_write_logic@_pin_config 000B  
                                ?___awdiv 000B                                  ?___awmod 000B  
                                ?___flmul 0019                                  ?___fltol 0032  
                                ?___lwdiv 000B                convert_short_to_string@ret 00EB  
                      ?_ADC_SelectChannel 000E                convert_short_to_string@str 00E4  
               gpio_pin_write_logic@logic 000C                               __smallconst 1000  
               _RB4_InterruptHandler_HIGH 00A7                       ??_ADC_SelectChannel 0010  
                                _ADC_Init 2136                 _RB7_InterruptHandler_HIGH 009B  
                             ADC_Init@ret 0010                          ___lwdiv@quotient 000F  
                                ?_sprintf 0024                        _gpio_pin_intialize 25AC  
               ??_convert_short_to_string 0035            ??_gpio_pin_direction_intialize 000C  
                _RB5_InterruptHandler_LOW 00A1                                  _INT0_ISR 2B42  
                                _INT1_ISR 2B3E                                  _INT2_ISR 2B3A  
                                _RB4_Flag 0050                                  _RB5_Flag 004F  
         ADC_GetConversion_Interrupt@_adc 0012                                  _RB6_Flag 004E  
                                _RB7_Flag 004D                       ?_gpio_pin_intialize 0013  
                __end_of_InterruptManager 02CE                                  _PIE1bits 0F9D  
               __end_of_ADC_SelectChannel 291C             __end_of_lcd_4bit_send_command 26C2  
                                i2u320_40 2012                                  i2u320_41 200E  
                                i2u321_40 2050                                  i2u321_41 204C  
                                i2u322_45 2068                                  i2u500_40 0170  
                                i2u500_41 016C                                  i2u341_40 2780  
                                i2u501_40 0180                                  i2u341_41 277C  
                                i2u501_41 017C                                  i2u318_40 1FE2  
                                i2u342_40 27A8                                  i2u510_40 0220  
                                i2u502_40 0198                                  i2u318_41 1FDE  
                                i2u342_41 27A4                                  i2u510_41 021C  
                                i2u502_41 0194                                  i2u319_40 1FF2  
                                i2u511_40 022E                                  i2u503_40 01A6  
                                i2u319_41 1FEE                                  i2u511_41 022A  
                                i2u503_41 01A2                                  i2u512_40 023C  
                                i2u504_40 01B4                                  i2u512_41 0238  
                                i2u504_41 01B0                                  i2u361_40 2B2C  
                                i2u513_40 024C                                  i2u505_40 01C4  
                                i2u361_41 2B28                                  i2u513_41 0248  
                                i2u505_41 01C0                                  _PIR1bits 0F9E  
                                i2u362_40 2B12                                  i2u514_40 0264  
                                i2u506_40 01DC                                  i2u362_41 2B0E  
                                i2u514_41 0260                                  i2u506_41 01D8  
                                i2u363_40 2AF8                                  i2u515_40 0272  
                                i2u507_40 01EA                                  i2u363_41 2AF4  
                                i2u515_41 026E                                  i2u507_41 01E6  
                                i2u364_40 2ADE                                  i2u516_40 0280  
                                i2u508_40 01F8                                  i2u364_41 2ADA  
                                i2u516_41 027C                                  i2u508_41 01F4  
                                i2u365_40 2A62                                  i2u517_40 0290  
                                i2u509_40 0208                                  i2u365_41 2A5E  
                                i2u517_41 028C                                  i2u509_41 0204  
                                i2u518_40 02A8                                  i2u518_41 02A4  
                                i2u366_48 2A68                                  i2u519_40 02B6  
                                i2u366_49 2A7A                                  i2u519_41 02B2  
                                i2u480_40 0028                                  i2u480_41 0024  
                                i2u481_40 0036                                  i2u481_41 0032  
                                i2u490_40 00CC                                  i2u482_40 0048  
                                i2u490_41 00C8                                  i2u482_41 0044  
                                i2u491_40 00DA                                  i2u483_40 0056  
                                i2u491_41 00D6                                  i2u483_41 0052  
                                i2u492_40 00E8                                  i2u484_40 0068  
                                i2u492_41 00E4                                  i2u484_41 0064  
                                i2u493_40 00F8                                  i2u485_40 0076  
                                i2u493_41 00F4                                  i2u485_41 0072  
                                i2u494_40 0110                                  i2u486_40 0088  
                                i2u494_41 010C                                  i2u486_41 0084  
                                i2u495_40 011E                                  i2u487_40 0096  
                                i2u495_41 011A                                  i2u487_41 0092  
                                i2u496_40 012C                                  i2u488_40 00A4  
                                i2u496_41 0128                                  i2u488_41 00A0  
                                i2u497_40 013C                                  i2u489_40 00B4  
                                i2u497_41 0138                                  i2u489_41 00B0  
                                i2u498_40 0154                                  i2u498_41 0150  
                                i2u499_40 0162                                  i2u499_41 015E  
                     _dc_motor_initialize 2A1E              dc_motor_initialize@_dc_motor 0016  
                       RB4_ISR@RB4_source 0001                                 _vfpfcnvrt 16A8  
                _lcd_4bit_send_string_pos 228C                                _ADCON0bits 0FC2  
                              _ADCON1bits 0FC1                                _ADCON2bits 0FC0  
                    ??_gpio_pin_intialize 0014                  ADC_SelectChannel@channel 000F  
                    ?_dc_motor_initialize 0016                                vfpfcnvrt@c 001F  
                 gpio_pin_write_logic@ret 0012                               _INTCON2bits 0FF1  
                             _INTCON3bits 0FF0                  ?_lcd_4bit_send_char_data 0016  
                               copy_data0 255E                                 copy_data1 257E  
                     _dc_motor_move_right 2874                      _ecu_layer_initialize 2B48  
                              _EECON1bits 0FA6                                  __Hrparam 0000  
                              vfprintf@ap 0022                                  __Lrparam 0000  
                              vfprintf@fp 0020                  ?_ADC_GetConversionResult 0001  
         __end_of_convert_short_to_string 23D4                    lcd_4bit_set_cursor@lcd 0019  
                  lcd_4bit_set_cursor@ret 001C                                ?_vfpfcnvrt 0015  
                  lcd_4bit_set_cursor@row 001A                      ?_dc_motor_move_right 0013  
                      __end_of_btn_values 1011                                sprintf@fmt 0025  
                       RB6_ISR@RB6_source 0001                                  ___xxtofl 186A  
                   ??_dc_motor_initialize 0017                           ___lwdiv@divisor 000D  
                         ___lwdiv@counter 0011                                  __ptext10 16A8  
                                __ptext11 21E2                                  __ptext20 1030  
                                __ptext12 2B46                                  __ptext21 291C  
                                __ptext13 2986                                  __ptext30 1A1E  
                                __ptext22 1D48                                  __ptext14 2086  
                                __ptext31 2136                                  __ptext23 2666  
                                __ptext15 1F0A                                  __ptext40 2AE4  
                                __ptext32 271C                                  __ptext24 27FE  
                                __ptext16 29EE                                  __ptext41 2AFE  
                                __ptext33 26C2                                  __ptext25 24DC  
                                __ptext17 186A                                  __ptext42 2B18  
                                __ptext34 29BA                                  __ptext26 2B48  
                                __ptext18 2468                                  __ptext43 2B3A  
                                __ptext35 2AA8                                  __ptext27 2A1E  
                                __ptext19 1C40                                  __ptext44 2B3E  
                                __ptext36 28E4                                  __ptext28 25AC  
                                __ptext45 2B42                                  __ptext37 1E2E  
                                __ptext29 1B30                                  __ptext46 2A4E  
                                __ptext47 2770                                  __ptext39 2ACA  
                                __ptext48 1FCE           configure_voltage_reference@_adc 000B  
                  dc_motor_move_right@ret 0014                     ?_ecu_layer_initialize 0001  
                                isa$xinst 0000                                  int$flags 0055  
                                _vfprintf 27BE                     ??_dc_motor_move_right 0014  
                          _lcd_send_4bits 24DC                        _dc_motor_move_left 28AC  
                              _INTCONbits 0FF2               __end_of_lcd_4bit_initialize 1E2E  
            __end_of_gpio_pin_write_logic 1C40                       ?_dc_motor_move_left 0013  
                                intlevel2 0000                                 sprintf@ap 0028  
             __end_of_ADC_StartConversion 2ACA           __end_of_ADC_GetConversionResult 2086  
                    ??_dc_motor_move_left 0014                    __end_of_lcd_send_4bits 254A  
            dc_motor_move_right@_dc_motor 0013                               ??_vfpfcnvrt 0018  
             __end_of_lcd_4bit_set_cursor 2468                                  sprintf@f 0029  
                                sprintf@s 0024                            _port_registers 00B7  
                  ??_ecu_layer_initialize 000B                             ??_Application 001D  
             lcd_4bit_send_char_data@data 0017                         ?_InterruptManager 0001  
                   __end_of_dc_motor_stop 2874                ??_lcd_4bit_send_string_pos 0022  
                  lcd_4bit_initialize@lcd 0019                    lcd_4bit_initialize@ret 001C  
